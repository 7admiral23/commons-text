/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 17:49:44 GMT 2024
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.lookup.AbstractStringLookup;
import org.apache.commons.text.lookup.DnsStringLookup;
import org.apache.commons.text.lookup.LocalHostStringLookup;
import org.apache.commons.text.lookup.XmlEncoderStringLookup;
import org.apache.commons.text.lookup.XmlStringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractStringLookup_ESTest extends AbstractStringLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalHostStringLookup localHostStringLookup0 = LocalHostStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        localHostStringLookup0.substringAfter((String) null, "'H~Eyp>P;%y>olF\"X5o");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.apache.commons.text.lookup.AbstractStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = AbstractStringLookup.toLookupKey("4", (String) null);
      assertEquals("4:null", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = AbstractStringLookup.toLookupKey("i;l'H", "i;l'H", "i;l'H");
      assertEquals("i;l'Hi;l'Hi;l'H", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = AbstractStringLookup.toLookupKey("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlStringLookup xmlStringLookup0 = XmlStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        xmlStringLookup0.substringAfter("", '~');
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.apache.commons.text.lookup.AbstractStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DnsStringLookup dnsStringLookup0 = DnsStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        dnsStringLookup0.substringAfterLast("i;l'H", 'a');
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.apache.commons.text.lookup.AbstractStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlEncoderStringLookup xmlEncoderStringLookup0 = new XmlEncoderStringLookup();
      // Undeclared exception!
      try { 
        xmlEncoderStringLookup0.substringAfter("&nabla;", "&nabla;");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.apache.commons.text.lookup.AbstractStringLookup", e);
      }
  }
}
