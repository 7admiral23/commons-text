/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 00:19:07 GMT 2024
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiFunction;
import org.apache.commons.text.lookup.BiFunctionStringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BiFunctionStringLookup_ESTest extends BiFunctionStringLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put(".6zt69~N81N8C", ".6zt69~N81N8C");
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      String string0 = biFunctionStringLookup0.lookup(".6zt69~N81N8C", ".6zt69~N81N8C");
      assertEquals(".6zt69~N81N8C", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      hashMap0.put((String) null, "");
      String string0 = biFunctionStringLookup0.lookup((String) null, "org.apache.commons.text.similarity.RegexTokenizer");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      hashMap0.put((String) null, ".6zt69~N81N8C");
      String string0 = biFunctionStringLookup0.lookup((String) null);
      assertEquals(".6zt69~N81N8C", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      hashMap0.put("", "");
      String string0 = biFunctionStringLookup0.lookup("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) null);
      String string0 = biFunctionStringLookup0.lookup("FSDQiG8UOq /.qwVdvm", " [function=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      String string0 = biFunctionStringLookup0.lookup("YJ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      String string0 = biFunctionStringLookup0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((BiFunction<String, String, String>) null);
      String string0 = biFunctionStringLookup0.lookup("", "");
      assertNull(string0);
  }
}
