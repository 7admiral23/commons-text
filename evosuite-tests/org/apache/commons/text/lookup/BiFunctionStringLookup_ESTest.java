/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 17:50:54 GMT 2024
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiFunction;
import org.apache.commons.text.lookup.BiFunctionStringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BiFunctionStringLookup_ESTest extends BiFunctionStringLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BiFunction<String, String, String> biFunction0 = (BiFunction<String, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn("T}@w?GFb zB8t").when(biFunction0).toString();
      doReturn("[|)@").when(biFunction0).apply(anyString() , anyString());
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on(biFunction0);
      String string0 = biFunctionStringLookup0.lookup("org.apache.commons.text.similarity.RegexTokenizer", "[|)@");
      assertEquals("[|)@", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BiFunction<String, String, String> biFunction0 = (BiFunction<String, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn("").when(biFunction0).toString();
      doReturn("").when(biFunction0).apply(anyString() , anyString());
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on(biFunction0);
      String string0 = biFunctionStringLookup0.lookup("(w)+", "(w)+");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("T}@w?GFb zB8t", "T}@w?GFb zB8t");
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      String string0 = biFunctionStringLookup0.lookup("T}@w?GFb zB8t");
      assertEquals("T}@w?GFb zB8t", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) hashMap0);
      hashMap0.put("(w)+", "");
      String string0 = biFunctionStringLookup0.lookup("(w)+");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((Map<String, String>) null);
      String string0 = biFunctionStringLookup0.lookup((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((BiFunction<String, String, String>) null);
      String string0 = biFunctionStringLookup0.lookup("org.apache.commons.text.lookup.BiFunctionStringLookup@3 [function=org.apache.commons.text.lookup.BiFunctionStringLookup$$Lambda$231/0x00000008402c3040@3b2c329a]", "h.,i");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((BiFunction<String, String, String>) null);
      String string0 = biFunctionStringLookup0.lookup("$");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BiFunctionStringLookup<String, String> biFunctionStringLookup0 = BiFunctionStringLookup.on((BiFunction<String, String, String>) null);
      String string0 = biFunctionStringLookup0.toString();
      assertNotNull(string0);
  }
}
