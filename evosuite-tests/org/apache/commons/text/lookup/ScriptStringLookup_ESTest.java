/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 18:07:04 GMT 2024
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.lookup.ScriptStringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ScriptStringLookup_ESTest extends ScriptStringLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScriptStringLookup scriptStringLookup0 = ScriptStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        scriptStringLookup0.lookup("!V1[U|snK8lH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad script key format [!V1[U|snK8lH]; expected format is EngineName:Script.
         //
         verifyException("org.apache.commons.text.lookup.IllegalArgumentExceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScriptStringLookup scriptStringLookup0 = ScriptStringLookup.INSTANCE;
      String string0 = scriptStringLookup0.lookup((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ScriptStringLookup scriptStringLookup0 = ScriptStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        scriptStringLookup0.lookup("'UqKRxoRh5)f=R:vu8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Error in script engine ['UqKRxoRh5)f=R] evaluating script [vu8].
         //
         verifyException("org.apache.commons.text.lookup.IllegalArgumentExceptions", e);
      }
  }
}
