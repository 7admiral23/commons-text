/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 00:27:08 GMT 2024
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.DuplicateFormatFlagsException;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatWidthException;
import java.util.MissingFormatArgumentException;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import org.apache.commons.text.lookup.IllegalArgumentExceptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IllegalArgumentExceptions_ESTest extends IllegalArgumentExceptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "#'cF{%U^O*XR", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'U'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "mL<XUQKE#j/e%0o", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %0o
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("", objectArray0);
      Object[] objectArray1 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(illegalArgumentException0, "#RxgsT;RaNI5mz%B6", objectArray1);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%B'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("Wt%a=+", objectArray0);
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) illegalArgumentException0;
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(illegalArgumentException0, "Wt%a=+", objectArray1);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // a != org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("", objectArray0);
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(illegalArgumentException0, "MC$z1IH%,Hr6", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = h, Flags = ,
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("", objectArray0);
      MockThrowable mockThrowable0 = new MockThrowable("]qvO\"&P*`k!Qc)", illegalArgumentException0);
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, ">U%<<JX2.LW#9<6=fF}", (Object[]) null);
        fail("Expecting exception: DuplicateFormatFlagsException");
      
      } catch(DuplicateFormatFlagsException e) {
         //
         // Flags = '<'
         //
         verifyException("java.util.Formatter$Flags", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((Throwable) null, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("gTo`l%*Px<JE`LXj/ ", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '*'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("mL<XUQKE#j/e%0o", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %0o
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("lMfbMZpVGaN%45n8:", objectArray0);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 45
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "7%o_3";
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("7%o_3", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // o != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("Wt%(a=+J", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = a, Flags = (
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("", objectArray0);
      IllegalArgumentException illegalArgumentException1 = IllegalArgumentExceptions.format(illegalArgumentException0, "", objectArray0);
      assertNotSame(illegalArgumentException0, illegalArgumentException1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("YKUtetMj%dEub)*r/y", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%d'
         //
         verifyException("java.util.Formatter", e);
      }
  }
}
