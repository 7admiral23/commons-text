/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 01:26:12 GMT 2024
 */

package org.apache.commons.text.numbers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.numbers.ParsedDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParsedDecimal_ESTest extends ParsedDecimal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(3595.779670395431);
      parsedDecimal0.round(3);
      assertEquals(3, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(4704.8441);
      assertEquals((-4), parsedDecimal0.getExponent());
      
      parsedDecimal0.exponent = 0;
      parsedDecimal0.round(0);
      assertEquals(7, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.maxPrecision(6402);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-55.51933));
      parsedDecimal0.maxPrecision(0);
      assertEquals(1, parsedDecimal0.getScientificExponent());
      assertEquals((-5), parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.digitCount = 0;
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(3595.779670395431);
      parsedDecimal0.round(1);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(4704.8441);
      assertEquals(3, parsedDecimal0.getScientificExponent());
      
      parsedDecimal0.digitCount = 0;
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals((-5), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-55.51933));
      parsedDecimal0.exponent = 575;
      int int0 = parsedDecimal0.getExponent();
      assertEquals(575, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-226.702994));
      int int0 = parsedDecimal0.getExponent();
      assertEquals((-6), int0);
      assertEquals(2, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.digitCount = 1011;
      // Undeclared exception!
      try { 
        parsedDecimal0.round(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1010 out of bounds for length 2
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.digitCount = 2532;
      // Undeclared exception!
      try { 
        parsedDecimal0.maxPrecision(1695);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1695 out of bounds for length 1
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-2166.72612));
      parsedDecimal0.maxPrecision(6);
      assertEquals((-2), parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(3595.779670395431);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals(3, int0);
      assertEquals((-12), parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(611.8100453);
      parsedDecimal0.maxPrecision(1);
      assertEquals(2, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(61.96762416822919);
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-13.06591251966559));
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(2205);
      parsedDecimal0.round(1);
      assertEquals(2, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(2215);
      parsedDecimal0.round(1);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.round(1);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(2205);
      assertEquals(3, parsedDecimal0.getScientificExponent());
      
      parsedDecimal0.round(2205);
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-20));
      parsedDecimal0.round((-20));
      assertEquals(1, parsedDecimal0.getExponent());
      assertEquals(1, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-995.5804284526021));
      parsedDecimal0.round(1);
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals(3, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.maxPrecision(1);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.maxPrecision((-1466));
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      boolean boolean0 = parsedDecimal0.isZero();
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-3796.678907847997));
      boolean boolean0 = parsedDecimal0.isZero();
      assertFalse(boolean0);
      assertEquals(3, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(61.96762416822919);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(3596.6012627772075);
      parsedDecimal0.digitCount = (-1);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-6));
      parsedDecimal0.round(1);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-0.15589781750097725));
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      int int0 = parsedDecimal0.getExponent();
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, int0);
  }
}
