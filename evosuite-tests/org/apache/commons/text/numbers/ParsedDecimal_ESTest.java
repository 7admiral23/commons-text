/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 18:20:12 GMT 2024
 */

package org.apache.commons.text.numbers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.numbers.ParsedDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParsedDecimal_ESTest extends ParsedDecimal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1601.47537));
      parsedDecimal0.round(0);
      parsedDecimal0.round((-1));
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1674.508769));
      parsedDecimal0.maxPrecision(69);
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals((-6), parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.maxPrecision((-841));
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1.0);
      parsedDecimal0.exponent = 334;
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.digitCount = (-3677);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1601.47537));
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.exponent = (-2);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      parsedDecimal0.exponent = 5;
      int int0 = parsedDecimal0.getExponent();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.digitCount = 679;
      // Undeclared exception!
      try { 
        parsedDecimal0.round(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 678 out of bounds for length 2
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1147.51369);
      parsedDecimal0.maxPrecision(1);
      assertEquals(3, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(451.9);
      parsedDecimal0.maxPrecision(1);
      assertEquals(2, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(2460.1);
      parsedDecimal0.digitCount = 263;
      // Undeclared exception!
      try { 
        parsedDecimal0.maxPrecision(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1601.47537));
      parsedDecimal0.round(1);
      assertEquals(2, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(69.509497383604);
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-526.5));
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1602.3292496511235));
      parsedDecimal0.exponent = 0;
      parsedDecimal0.round(1);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(69.509497383604);
      parsedDecimal0.round(0);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-526.5));
      parsedDecimal0.round(0);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(2, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(9.62255212618564);
      parsedDecimal0.round(0);
      assertEquals(1, parsedDecimal0.getScientificExponent());
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.round(1);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(30);
      assertEquals(1, parsedDecimal0.getExponent());
      
      parsedDecimal0.round(30);
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0);
      parsedDecimal0.round(0);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.maxPrecision(1);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1601.47537));
      parsedDecimal0.round(0);
      int int0 = parsedDecimal0.getExponent();
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0);
      parsedDecimal0.maxPrecision(0);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      boolean boolean0 = parsedDecimal0.isZero();
      assertTrue(boolean0);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-526.5));
      boolean boolean0 = parsedDecimal0.isZero();
      assertFalse(boolean0);
      assertEquals(2, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(69.509497383604);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-0.6976615071607628));
      assertEquals((-16), parsedDecimal0.getExponent());
      
      parsedDecimal0.round(0);
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-0.6976615071607628));
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1531.89513);
      int int0 = parsedDecimal0.getExponent();
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals((-5), int0);
  }
}
