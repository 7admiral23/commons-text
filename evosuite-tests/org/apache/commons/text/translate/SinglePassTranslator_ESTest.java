/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 01:17:10 GMT 2024
 */

package org.apache.commons.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.text.translate.CsvTranslators;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SinglePassTranslator_ESTest extends SinglePassTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CsvTranslators.CsvEscaper csvTranslators_CsvEscaper0 = new CsvTranslators.CsvEscaper();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        csvTranslators_CsvEscaper0.translate((CharSequence) stringBuffer0, 1076, (Writer) stringWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CsvEscaper.translate(final CharSequence input, final int index, final Writer out) can not handle a non-zero index.
         //
         verifyException("org.apache.commons.text.translate.SinglePassTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CsvTranslators.CsvUnescaper csvTranslators_CsvUnescaper0 = new CsvTranslators.CsvUnescaper();
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      StringWriter stringWriter0 = new StringWriter();
      charBuffer0.clear();
      int int0 = csvTranslators_CsvUnescaper0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CsvTranslators.CsvUnescaper csvTranslators_CsvUnescaper0 = new CsvTranslators.CsvUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        csvTranslators_CsvUnescaper0.translate((CharSequence) stringBuffer0, 0, (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CsvTranslators.CsvEscaper csvTranslators_CsvEscaper0 = new CsvTranslators.CsvEscaper();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        csvTranslators_CsvEscaper0.translate((CharSequence) stringBuffer0, 0, (Writer) stringWriter0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.apache.commons.text.translate.CsvTranslators$CsvEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CsvTranslators.CsvUnescaper csvTranslators_CsvUnescaper0 = new CsvTranslators.CsvUnescaper();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringWriter stringWriter0 = new StringWriter(0);
      // Undeclared exception!
      try { 
        csvTranslators_CsvUnescaper0.translate((CharSequence) charBuffer0, 0, (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CsvTranslators.CsvUnescaper csvTranslators_CsvUnescaper0 = new CsvTranslators.CsvUnescaper();
      Writer writer0 = Writer.nullWriter();
      // Undeclared exception!
      try { 
        csvTranslators_CsvUnescaper0.translate((CharSequence) null, 0, writer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.translate.CsvTranslators$CsvUnescaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CsvTranslators.CsvUnescaper csvTranslators_CsvUnescaper0 = new CsvTranslators.CsvUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        csvTranslators_CsvUnescaper0.translate((CharSequence) null, (-1082), (Writer) stringWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CsvUnescaper.translate(final CharSequence input, final int index, final Writer out) can not handle a non-zero index.
         //
         verifyException("org.apache.commons.text.translate.SinglePassTranslator", e);
      }
  }
}
