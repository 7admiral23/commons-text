/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 18:52:42 GMT 2024
 */

package org.apache.commons.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.text.translate.JavaUnicodeEscaper;
import org.apache.commons.text.translate.UnicodeEscaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CodePointTranslator_ESTest extends CodePointTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JavaUnicodeEscaper javaUnicodeEscaper0 = JavaUnicodeEscaper.between((-2420), 0);
      StringWriter stringWriter0 = new StringWriter(0);
      boolean boolean0 = javaUnicodeEscaper0.translate((-2420), (Writer) stringWriter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaUnicodeEscaper javaUnicodeEscaper0 = JavaUnicodeEscaper.between((-720), 1);
      boolean boolean0 = javaUnicodeEscaper0.translate(92, (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JavaUnicodeEscaper javaUnicodeEscaper0 = JavaUnicodeEscaper.above((-1));
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        javaUnicodeEscaper0.translate((CharSequence) stringBuffer0, (-1), (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.outsideOf(0, (-3703));
      Writer writer0 = Writer.nullWriter();
      // Undeclared exception!
      try { 
        unicodeEscaper0.translate((CharSequence) null, 0, writer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      Writer writer0 = Writer.nullWriter();
      // Undeclared exception!
      try { 
        unicodeEscaper0.translate((CharSequence) charBuffer0, 1, writer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JavaUnicodeEscaper javaUnicodeEscaper0 = JavaUnicodeEscaper.above((-2022));
      // Undeclared exception!
      try { 
        javaUnicodeEscaper0.translate((-2022), (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.translate.UnicodeEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('1');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      int int0 = unicodeEscaper0.translate((CharSequence) stringBuffer0, 0, (Writer) stringWriter0);
      assertEquals(7, stringBuffer0.length());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.below(0);
      String string0 = unicodeEscaper0.toUtf16Escape(0);
      StringWriter stringWriter0 = new StringWriter(2287);
      int int0 = unicodeEscaper0.translate((CharSequence) string0, 0, (Writer) stringWriter0);
      assertEquals(0, int0);
  }
}
