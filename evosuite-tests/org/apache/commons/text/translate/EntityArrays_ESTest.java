/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 01:09:55 GMT 2024
 */

package org.apache.commons.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.text.translate.EntityArrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityArrays_ESTest extends EntityArrays_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      Map<CharSequence, CharSequence> map0 = EntityArrays.invert(hashMap0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Map<CharSequence, CharSequence> map0 = EntityArrays.JAVA_CTRL_CHARS_ESCAPE;
      Map<CharSequence, CharSequence> map1 = EntityArrays.invert(map0);
      assertFalse(map1.equals((Object)map0));
      assertEquals(5, map1.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EntityArrays entityArrays0 = new EntityArrays();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        EntityArrays.invert((Map<CharSequence, CharSequence>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.translate.EntityArrays", e);
      }
  }
}
