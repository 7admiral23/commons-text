/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 17:37:37 GMT 2024
 */

package org.apache.commons.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.text.CompositeFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeFormat_ESTest extends CompositeFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      String string0 = compositeFormat0.reformat("21,000%");
      assertEquals("21,000%", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      ParsePosition parsePosition0 = new ParsePosition(0);
      Object object0 = compositeFormat0.parseObject(".23OZOi[A'zC%dI%'k", parsePosition0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)compositeFormat0.getParser();
      assertEquals("", decimalFormat0.getNegativeSuffix());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)compositeFormat0.getFormatter();
      assertEquals(3, decimalFormat0.getGroupingSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, decimalFormat0);
      Object object0 = compositeFormat0.parseObject("2F7}.{<vt5");
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(0);
      StringBuffer stringBuffer1 = compositeFormat0.format(object0, stringBuffer0, fieldPosition0);
      assertSame(stringBuffer0, stringBuffer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(dateFormat0, dateFormat0);
      try { 
        compositeFormat0.reformat("");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Format.parseObject(String) failed
         //
         verifyException("java.text.Format", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(dateFormat0, dateFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-1));
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject("", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject("B jDFV?Exn", (ParsePosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) null, (StringBuffer) null, (FieldPosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      FieldPosition fieldPosition0 = new FieldPosition(0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) null, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormat messageFormat0 = new MessageFormat("QO]RKuG.4f\"<6w");
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, messageFormat0);
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) messageFormat0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.text.MessageFormat cannot be cast to class [Ljava.lang.Object; (java.text.MessageFormat and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      MessageFormat messageFormat0 = new MessageFormat("", locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, messageFormat0);
      ParsePosition parsePosition0 = new ParsePosition(0);
      Object object0 = compositeFormat0.parseObject("", parsePosition0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, (-1141));
      StringBuffer stringBuffer1 = compositeFormat0.format(object0, stringBuffer0, fieldPosition0);
      assertEquals("", stringBuffer1.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format format0 = compositeFormat0.getFormatter();
      assertNull(format0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormat messageFormat0 = new MessageFormat("5j\",}II!!pFFS");
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, numberFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("5j\",}II!!pFFS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format format0 = compositeFormat0.getParser();
      assertNull(format0);
  }
}
