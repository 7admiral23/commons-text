/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 00:48:24 GMT 2024
 */

package org.apache.commons.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Locale;
import org.apache.commons.text.CompositeFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeFormat_ESTest extends CompositeFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, decimalFormat0);
      String string0 = compositeFormat0.reformat("39kEb~fSjhAtkIZiR");
      assertEquals("39", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.applyLocalizedPattern("");
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      ParsePosition parsePosition0 = new ParsePosition(1952);
      Object object0 = compositeFormat0.parseObject("b*X;:r!0", parsePosition0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", object0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)compositeFormat0.getParser();
      assertEquals("", decimalFormat0.getPositivePrefix());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, (Format) null);
      Format format0 = compositeFormat0.getFormatter();
      assertNull(format0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.applyLocalizedPattern("");
      MockDate mockDate0 = new MockDate(2820, 1994, 1994, 2820, 2820, 0);
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      StringBuffer stringBuffer0 = new StringBuffer(1994);
      FieldPosition fieldPosition0 = new FieldPosition((-276));
      StringBuffer stringBuffer1 = compositeFormat0.format((Object) mockDate0, stringBuffer0, fieldPosition0);
      assertEquals(0, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormat messageFormat0 = new MessageFormat("Invalid text");
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, messageFormat0);
      Object object0 = compositeFormat0.parseObject("Invalid text");
      StringBuffer stringBuffer0 = new StringBuffer("(w)+");
      StringBuffer stringBuffer1 = compositeFormat0.format(object0, stringBuffer0, (FieldPosition) null);
      assertSame(stringBuffer1, stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("8n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("*", locale0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      CompositeFormat compositeFormat1 = new CompositeFormat(mockSimpleDateFormat0, compositeFormat0);
      // Undeclared exception!
      try { 
        compositeFormat1.reformat("*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(dateFormat0, dateFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-1998));
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject("H+-~q;!%1XO", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, decimalFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject((String) null, (ParsePosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) numberFormat0, (StringBuffer) null, (FieldPosition) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormat messageFormat0 = new MessageFormat("Invalid text");
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, messageFormat0);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid text");
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) "Invalid text", stringBuffer0, (FieldPosition) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("R\"99! ut-");
      CompositeFormat compositeFormat0 = new CompositeFormat(choiceFormat0, choiceFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-121));
      Object object0 = compositeFormat0.parseObject("", parsePosition0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      // Undeclared exception!
      try { 
        compositeFormat0.format(object0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      ParsePosition parsePosition0 = new ParsePosition(1952);
      Object object0 = compositeFormat0.parseObject("b*X;:r!0", parsePosition0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      MockSimpleDateFormat mockSimpleDateFormat1 = (MockSimpleDateFormat)compositeFormat0.getFormatter();
      assertTrue(mockSimpleDateFormat1.isLenient());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) null, (StringBuffer) null, (FieldPosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, decimalFormat0);
      try { 
        compositeFormat0.reformat("(w)+");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Format.parseObject(String) failed
         //
         verifyException("java.text.Format", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format format0 = compositeFormat0.getParser();
      assertNull(format0);
  }
}
