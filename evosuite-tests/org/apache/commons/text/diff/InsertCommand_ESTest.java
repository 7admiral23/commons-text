/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 17:40:12 GMT 2024
 */

package org.apache.commons.text.diff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.diff.CommandVisitor;
import org.apache.commons.text.diff.InsertCommand;
import org.apache.commons.text.diff.ReplacementsFinder;
import org.apache.commons.text.diff.ReplacementsHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InsertCommand_ESTest extends InsertCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      InsertCommand<Object> insertCommand0 = new InsertCommand<Object>(object0);
      // Undeclared exception!
      try { 
        insertCommand0.accept((CommandVisitor<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.diff.InsertCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-2585));
      InsertCommand<Object> insertCommand0 = new InsertCommand<Object>(integer0);
      ReplacementsFinder<Object> replacementsFinder0 = new ReplacementsFinder<Object>((ReplacementsHandler<Object>) null);
      insertCommand0.accept(replacementsFinder0);
  }
}
