/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 18:40:19 GMT 2024
 */

package org.apache.commons.text.similarity;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.text.similarity.LevenshteinResults;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LevenshteinResults_ESTest extends LevenshteinResults_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(0);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, (Integer) null, integer0);
      Integer integer1 = levenshteinResults0.getSubstituteCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getSubstituteCount();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getSubstituteCount();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-4743));
      Integer integer1 = new Integer(0);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer1, integer1, (Integer) null);
      Integer integer2 = levenshteinResults0.getInsertCount();
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      assertEquals((-4743), (int)levenshteinResults0.getDistance());
      assertEquals(0, (int)levenshteinResults0.getDeleteCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(12);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getInsertCount();
      assertEquals(12, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevenshteinResults levenshteinResults0 = new LevenshteinResults((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = levenshteinResults0.getInsertCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      Integer integer1 = new Integer(0);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer1, (Integer) null, integer0, integer0);
      Integer integer2 = levenshteinResults0.getDistance();
      assertEquals((-2079), (int)levenshteinResults0.getSubstituteCount());
      assertEquals(0, (int)integer2);
      assertEquals((-2079), (int)levenshteinResults0.getDeleteCount());
      assertNotNull(integer2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getDistance();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((-4743));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults((Integer) null, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getDistance();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getDeleteCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      Integer integer1 = levenshteinResults0.getDeleteCount();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, (Integer) null, integer0);
      Integer integer1 = levenshteinResults0.getDeleteCount();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      LevenshteinResults levenshteinResults1 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      LevenshteinResults levenshteinResults1 = new LevenshteinResults(integer0, integer0, (Integer) null, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      LevenshteinResults levenshteinResults1 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      Integer integer1 = new Integer(0);
      LevenshteinResults levenshteinResults1 = new LevenshteinResults(integer1, (Integer) null, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults1);
      assertEquals((-2079), (int)levenshteinResults1.getSubstituteCount());
      assertEquals(0, (int)levenshteinResults1.getDistance());
      assertFalse(boolean0);
      assertEquals((-2079), (int)levenshteinResults1.getDeleteCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      LevenshteinResults levenshteinResults1 = new LevenshteinResults(integer0, (Integer) null, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(1);
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-4743));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults((Integer) null, integer0, integer0, integer0);
      boolean boolean0 = levenshteinResults0.equals(levenshteinResults0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      boolean boolean0 = levenshteinResults0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      String string0 = levenshteinResults0.toString();
      assertEquals("Distance: -2079, Insert: -2079, Delete: -2079, Substitute: null", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      Integer integer1 = levenshteinResults0.getSubstituteCount();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      Integer integer1 = levenshteinResults0.getInsertCount();
      assertEquals((-2079), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      Integer integer1 = levenshteinResults0.getDistance();
      assertEquals((-2079), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer((-2079));
      LevenshteinResults levenshteinResults0 = new LevenshteinResults(integer0, integer0, integer0, (Integer) null);
      Integer integer1 = levenshteinResults0.getDeleteCount();
      assertEquals((-2079), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LevenshteinResults levenshteinResults0 = new LevenshteinResults((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      levenshteinResults0.hashCode();
  }
}
