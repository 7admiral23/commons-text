/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 10 18:46:28 GMT 2024
 */

package org.apache.commons.text;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.util.HashMap;
import java.util.Map;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.apache.commons.text.StrLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrLookup_ESTest extends StrLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      String string0 = strLookup0.lookup("R");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"UoEKOia/yH[6");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      StrLookup<String> strLookup0 = StrLookup.resourceBundleLookup(propertyResourceBundle0);
      String string0 = strLookup0.lookup("\"UoEKOia/yH[6");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InputStream inputStream0 = InputStream.nullInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0, 1332);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(pushbackInputStream0);
      StrLookup<String> strLookup0 = StrLookup.resourceBundleLookup(propertyResourceBundle0);
      String string0 = strLookup0.lookup((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.resourceBundleLookup((ResourceBundle) null);
      String string0 = strLookup0.lookup((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StrLookup<ObjectInputStream> strLookup0 = StrLookup.mapLookup((Map<String, ObjectInputStream>) null);
      assertNotNull(strLookup0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"UoEKOia/yH[6");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      StrLookup<String> strLookup0 = StrLookup.resourceBundleLookup(propertyResourceBundle0);
      String string0 = strLookup0.lookup("sZoA[WASfq|U: ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrLookup<String> strLookup0 = StrLookup.mapLookup((Map<String, String>) hashMap0);
      assertNotNull(strLookup0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StrLookup<?> strLookup0 = StrLookup.noneLookup();
      assertNotNull(strLookup0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      String string0 = strLookup0.lookup("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrLookup.MapStrLookup<Object> strLookup_MapStrLookup0 = new StrLookup.MapStrLookup<Object>(hashMap0);
      String string0 = strLookup_MapStrLookup0.lookup("H-lU.L?6");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrLookup.MapStrLookup<Object> strLookup_MapStrLookup0 = new StrLookup.MapStrLookup<Object>(hashMap0);
      String string0 = strLookup_MapStrLookup0.toString();
      assertNotNull(string0);
  }
}
