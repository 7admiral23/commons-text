/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 15 01:22:35 GMT 2024
 */

package org.apache.commons.text.matcher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.text.matcher.AbstractStringMatcher;
import org.apache.commons.text.matcher.StringMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractStringMatcher_ESTest extends AbstractStringMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        abstractStringMatcher_TrimMatcher0.isMatch(charArray0, 32, 0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 32 out of bounds for length 1
         //
         verifyException("org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[7];
      charArray1[4] = '.';
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch(charArray1, 4, 373, (-576));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('v');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher@3[T, v]", 32);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('e');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher@1['e']", 2, 40, (-2120));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'i';
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('<');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch(charArray0, 1, 0, (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = 'W';
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(34);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 1, 34, 5130);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(34);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 1, 34, 5130);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[5];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharArrayMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = 'G';
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray1, 0, 0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      // Undeclared exception!
      try { 
        abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 1, (-575), 1506);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 6
         //
         verifyException("org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      char[] charArray0 = new char[6];
      charArray0[5] = 'r';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher@3['<']");
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('I');
      char[] charArray0 = new char[4];
      charArray0[1] = 'I';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[2];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_CharMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 0, 1472, 1472);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_NoneMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 1, 2012, 2012);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      int int0 = abstractStringMatcher_NoneMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      char[] charArray0 = new char[9];
      int int0 = abstractStringMatcher_NoneMatcher0.isMatch(charArray0, (-959), 1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_NoneMatcher0.isMatch((CharSequence) charBuffer0, (-3803), (-3803), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        abstractStringMatcher_CharSetMatcher0.isMatch((CharSequence) charBuffer0, 32, (-48), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('e');
      int int0 = abstractStringMatcher_CharMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[9];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.size();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2012);
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch((CharSequence) charBuffer0, 1506, 1236, 34);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher@2['G']", 0, 0, 1567);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch(charArray0, 0, 5130, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 0, 2012, 1506);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = 'i';
      charArray0[2] = '#';
      charArray0[3] = '4';
      charArray0[4] = '>';
      charArray0[5] = 'r';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(2012);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 1, 2012, 2012);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[7];
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch(charArray1, 5, 373, (-576));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('e');
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_CharMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[7];
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('[');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch(charArray0, 1, 60, 7);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@2[\"\u0000\u0000\u0000W\u0000\u0000\"]", 44, 0, 5130);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[5];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharArrayMatcher0;
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_CharArrayMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[5];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharArrayMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      char[] charArray1 = new char[7];
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray1, 0, 0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      char[] charArray1 = new char[7];
      charArray1[5] = '.';
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray1, 5, 0, 1236);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      StringMatcher[] stringMatcherArray0 = new StringMatcher[2];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_NoneMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[5];
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('G');
      stringMatcherArray0[4] = (StringMatcher) abstractStringMatcher_CharMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('G');
      String string0 = abstractStringMatcher_CharMatcher0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      charArray0[1] = ';';
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch(charArray0, 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[6];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      String string0 = abstractStringMatcher_CharArrayMatcher0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, (-576), (-576), (-576));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      String string0 = abstractStringMatcher_CharSetMatcher0.toString();
      assertNotNull(string0);
  }
}
