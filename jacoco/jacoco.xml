<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Apache Commons Text"><sessioninfo id="admiral-aefb878c" start="1705277535371" dump="1705277600082"/><package name="org/apache/commons/text/diff"><class name="org/apache/commons/text/diff/StringsComparator$Snake" sourcefilename="StringsComparator.java"><method name="&lt;init&gt;" desc="(III)V" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDiag" desc="()I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()I" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStart" desc="()I" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/EditScript" sourcefilename="EditScript.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/diff/DeleteCommand;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/diff/InsertCommand;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/diff/KeepCommand;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLCSLength" desc="()I" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifications" desc="()I" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/apache/commons/text/diff/CommandVisitor;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$0" desc="(Lorg/apache/commons/text/diff/CommandVisitor;Lorg/apache/commons/text/diff/EditCommand;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/ReplacementsHandler" sourcefilename="ReplacementsHandler.java"/><class name="org/apache/commons/text/diff/InsertCommand" sourcefilename="InsertCommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lorg/apache/commons/text/diff/CommandVisitor;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/EditCommand" sourcefilename="EditCommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="()Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/CommandVisitor" sourcefilename="CommandVisitor.java"/><class name="org/apache/commons/text/diff/ReplacementsFinder" sourcefilename="ReplacementsFinder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/diff/ReplacementsHandler;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeleteCommand" desc="(Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitInsertCommand" desc="(Ljava/lang/Object;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKeepCommand" desc="(Ljava/lang/Object;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/KeepCommand" sourcefilename="KeepCommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lorg/apache/commons/text/diff/CommandVisitor;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/StringsComparator" sourcefilename="StringsComparator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildScript" desc="(IIIILorg/apache/commons/text/diff/EditScript;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildSnake" desc="(IIII)Lorg/apache/commons/text/diff/StringsComparator$Snake;" line="207"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMiddleSnake" desc="(IIII)Lorg/apache/commons/text/diff/StringsComparator$Snake;" line="236"><counter type="INSTRUCTION" missed="5" covered="326"/><counter type="BRANCH" missed="1" covered="51"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="1" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScript" desc="()Lorg/apache/commons/text/diff/EditScript;" line="321"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="541"/><counter type="BRANCH" missed="3" covered="79"/><counter type="LINE" missed="1" covered="76"/><counter type="COMPLEXITY" missed="3" covered="43"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/diff/DeleteCommand" sourcefilename="DeleteCommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lorg/apache/commons/text/diff/CommandVisitor;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EditCommand.java"><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeleteCommand.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EditScript.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommandVisitor.java"/><sourcefile name="InsertCommand.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringsComparator.java"><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="10" mb="0" cb="4"/><line nr="165" mi="0" ci="9" mb="1" cb="3"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="4"/><line nr="170" mi="0" ci="15" mb="1" cb="5"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="2"/><line nr="175" mi="0" ci="10" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="2"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="4"/><line nr="210" mi="0" ci="8" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="4"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="12" mb="0" cb="2"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="9" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="1" cb="1"/><line nr="250" mi="0" ci="8" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="20" mb="0" cb="6"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="257" mi="0" ci="12" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="0"/><line nr="263" mi="0" ci="15" mb="0" cb="6"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="14" mb="0" cb="6"/><line nr="269" mi="0" ci="11" mb="0" cb="2"/><line nr="270" mi="0" ci="16" mb="0" cb="0"/><line nr="276" mi="0" ci="11" mb="0" cb="2"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="279" mi="0" ci="23" mb="0" cb="6"/><line nr="281" mi="0" ci="13" mb="0" cb="0"/><line nr="283" mi="0" ci="10" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="4"/><line nr="289" mi="0" ci="6" mb="0" cb="2"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="11" mb="0" cb="6"/><line nr="295" mi="0" ci="11" mb="0" cb="2"/><line nr="296" mi="0" ci="14" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="11" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="562"/><counter type="BRANCH" missed="3" covered="79"/><counter type="LINE" missed="1" covered="84"/><counter type="COMPLEXITY" missed="3" covered="47"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReplacementsHandler.java"/><sourcefile name="KeepCommand.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReplacementsFinder.java"><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="4"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="729"/><counter type="BRANCH" missed="3" covered="83"/><counter type="LINE" missed="1" covered="135"/><counter type="COMPLEXITY" missed="3" covered="69"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="8"/></package><package name="org/apache/commons/text"><class name="org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter" sourcefilename="TextStringBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/TextStringBuilder;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="215"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="221"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([C)V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="232"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="238"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="250"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrLookup$SystemPropertiesStrLookup" sourcefilename="StrLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/WordUtils" sourcefilename="WordUtils.java"><method name="abbreviate" desc="(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capitalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capitalize" desc="(Ljava/lang/String;[C)Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capitalizeFully" desc="(Ljava/lang/String;)Ljava/lang/String;" line="219"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capitalizeFully" desc="(Ljava/lang/String;[C)Ljava/lang/String;" line="248"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAllWords" desc="(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z" line="277"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateDelimiterSet" desc="([C)Ljava/util/Set;" line="300"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initials" desc="(Ljava/lang/String;)Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initials" desc="(Ljava/lang/String;[C)Ljava/lang/String;" line="365"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDelimiter" desc="(C[C)Z" line="401"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDelimiter" desc="(I[C)Z" line="422"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapCase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="457"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uncapitalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="505"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uncapitalize" desc="(Ljava/lang/String;[C)Ljava/lang/String;" line="534"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="613"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;" line="695"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;" line="795"><counter type="INSTRUCTION" missed="1" covered="215"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="1" covered="59"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="898"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="749"/><counter type="BRANCH" missed="15" covered="121"/><counter type="LINE" missed="14" covered="192"/><counter type="COMPLEXITY" missed="11" covered="75"/><counter type="METHOD" missed="2" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher" sourcefilename="StrMatcher.java"><method name="charMatcher" desc="(C)Lorg/apache/commons/text/StrMatcher;" line="252"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charSetMatcher" desc="([C)Lorg/apache/commons/text/StrMatcher;" line="262"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charSetMatcher" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrMatcher;" line="278"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commaMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="293"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleQuoteMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="302"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noneMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="311"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quoteMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="320"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleQuoteMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="329"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spaceMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="338"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="348"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringMatcher" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrMatcher;" line="358"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tabMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="370"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="379"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="385"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CI)I" line="411"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="202"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/ExtendedMessageFormat" sourcefilename="ExtendedMessageFormat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendQuotedString" desc="(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuilder;)V" line="180"><counter type="INSTRUCTION" missed="5" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyPattern" desc="(Ljava/lang/String;)V" line="214"><counter type="INSTRUCTION" missed="22" covered="185"/><counter type="BRANCH" missed="3" covered="22"/><counter type="LINE" missed="3" covered="47"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsElements" desc="(Ljava/util/Collection;)Z" line="289"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="303"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormat" desc="(Ljava/lang/String;)Ljava/text/Format;" line="329"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuotedString" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)V" line="352"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="360"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertFormats" desc="(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;" line="374"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="(Ljava/text/ParsePosition;)Ljava/text/ParsePosition;" line="417"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseFormatDescription" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/String;" line="429"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readArgumentIndex" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)I" line="466"><counter type="INSTRUCTION" missed="1" covered="109"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seekNonWs" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)V" line="507"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFormat" desc="(ILjava/text/Format;)V" line="525"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFormatByArgumentIndex" desc="(ILjava/text/Format;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFormats" desc="([Ljava/text/Format;)V" line="551"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFormatsByArgumentIndex" desc="([Ljava/text/Format;)V" line="563"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPattern" desc="()Ljava/lang/String;" line="571"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="735"/><counter type="BRANCH" missed="10" covered="95"/><counter type="LINE" missed="5" covered="182"/><counter type="COMPLEXITY" missed="10" covered="67"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrBuilder$StrBuilderReader" sourcefilename="StrBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrBuilder;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="97"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="114"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="123"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ready" desc="()Z" line="144"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="156"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="147"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrBuilder" sourcefilename="StrBuilder.java"><method name="&lt;init&gt;" desc="()V" line="281"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="289"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="302"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Z)Lorg/apache/commons/text/StrBuilder;" line="318"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Lorg/apache/commons/text/StrBuilder;" line="343"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([C)Lorg/apache/commons/text/StrBuilder;" line="357"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([CII)Lorg/apache/commons/text/StrBuilder;" line="380"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/nio/CharBuffer;)Lorg/apache/commons/text/StrBuilder;" line="406"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/nio/CharBuffer;II)Lorg/apache/commons/text/StrBuilder;" line="431"><counter type="INSTRUCTION" missed="7" covered="65"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Lorg/apache/commons/text/StrBuilder;" line="461"><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Lorg/apache/commons/text/StrBuilder;" line="490"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(D)Lorg/apache/commons/text/StrBuilder;" line="503"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(F)Lorg/apache/commons/text/StrBuilder;" line="513"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(I)Lorg/apache/commons/text/StrBuilder;" line="523"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(J)Lorg/apache/commons/text/StrBuilder;" line="533"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="544"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/StrBuilder;)Lorg/apache/commons/text/StrBuilder;" line="561"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/StrBuilder;II)Lorg/apache/commons/text/StrBuilder;" line="584"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="610"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;II)Lorg/apache/commons/text/StrBuilder;" line="633"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="660"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/StrBuilder;" line="671"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/StrBuilder;" line="694"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/StrBuilder;" line="720"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/StrBuilder;" line="743"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/text/StrBuilder;" line="770"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="(Ljava/util/Iterator;)Lorg/apache/commons/text/StrBuilder;" line="785"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="([Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="809"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadLeft" desc="(IIC)Lorg/apache/commons/text/StrBuilder;" line="828"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadLeft" desc="(Ljava/lang/Object;IC)Lorg/apache/commons/text/StrBuilder;" line="843"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadRight" desc="(IIC)Lorg/apache/commons/text/StrBuilder;" line="875"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadRight" desc="(Ljava/lang/Object;IC)Lorg/apache/commons/text/StrBuilder;" line="890"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Z)Lorg/apache/commons/text/StrBuilder;" line="918"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(C)Lorg/apache/commons/text/StrBuilder;" line="928"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="([C)Lorg/apache/commons/text/StrBuilder;" line="939"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="([CII)Lorg/apache/commons/text/StrBuilder;" line="952"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(D)Lorg/apache/commons/text/StrBuilder;" line="962"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(F)Lorg/apache/commons/text/StrBuilder;" line="972"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(I)Lorg/apache/commons/text/StrBuilder;" line="982"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(J)Lorg/apache/commons/text/StrBuilder;" line="992"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="1003"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Lorg/apache/commons/text/StrBuilder;)Lorg/apache/commons/text/StrBuilder;" line="1014"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Lorg/apache/commons/text/StrBuilder;II)Lorg/apache/commons/text/StrBuilder;" line="1027"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1038"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;II)Lorg/apache/commons/text/StrBuilder;" line="1051"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="1063"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/StrBuilder;" line="1074"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/StrBuilder;" line="1087"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/StrBuilder;" line="1098"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/StrBuilder;" line="1111"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNewLine" desc="()Lorg/apache/commons/text/StrBuilder;" line="1124"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNull" desc="()Lorg/apache/commons/text/StrBuilder;" line="1137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendPadding" desc="(IC)Lorg/apache/commons/text/StrBuilder;" line="1151"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(C)Lorg/apache/commons/text/StrBuilder;" line="1182"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(CC)Lorg/apache/commons/text/StrBuilder;" line="1199"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(CI)Lorg/apache/commons/text/StrBuilder;" line="1230"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;I)Lorg/apache/commons/text/StrBuilder;" line="1286"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1321"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTo" desc="(Ljava/lang/Appendable;)V" line="1341"><counter type="INSTRUCTION" missed="14" covered="42"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1365"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1382"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1405"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asReader" desc="()Ljava/io/Reader;" line="1440"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asTokenizer" desc="()Lorg/apache/commons/text/StrTokenizer;" line="1481"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asWriter" desc="()Ljava/io/Writer;" line="1509"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/lang/String;" line="1520"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="1529"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="1543"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()Lorg/apache/commons/text/StrBuilder;" line="1563"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(C)Z" line="1574"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/String;)Z" line="1590"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/text/StrMatcher;)Z" line="1606"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(II)Lorg/apache/commons/text/StrBuilder;" line="1619"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(C)Lorg/apache/commons/text/StrBuilder;" line="1634"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1657"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrBuilder;" line="1680"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteCharAt" desc="(I)Lorg/apache/commons/text/StrBuilder;" line="1693"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(C)Lorg/apache/commons/text/StrBuilder;" line="1707"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="1723"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrBuilder;" line="1745"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteImpl" desc="(III)V" line="1757"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/String;)Z" line="1771"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)Lorg/apache/commons/text/StrBuilder;" line="1797"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="1814"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lorg/apache/commons/text/StrBuilder;)Z" line="1826"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsIgnoreCase" desc="(Lorg/apache/commons/text/StrBuilder;)Z" line="1853"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChars" desc="([C)[C" line="1878"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChars" desc="(II[CI)V" line="1900"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewLineText" desc="()Ljava/lang/String;" line="1918"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullText" desc="()Ljava/lang/String;" line="1927"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="1937"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(C)I" line="1952"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(CI)I" line="1963"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/String;)I" line="1986"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/String;I)I" line="2001"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lorg/apache/commons/text/StrMatcher;)I" line="2041"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lorg/apache/commons/text/StrMatcher;I)I" line="2058"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IZ)Lorg/apache/commons/text/StrBuilder;" line="2081"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IC)Lorg/apache/commons/text/StrBuilder;" line="2112"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[C)Lorg/apache/commons/text/StrBuilder;" line="2130"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[CII)Lorg/apache/commons/text/StrBuilder;" line="2156"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ID)Lorg/apache/commons/text/StrBuilder;" line="2184"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IF)Lorg/apache/commons/text/StrBuilder;" line="2196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(II)Lorg/apache/commons/text/StrBuilder;" line="2208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(IJ)Lorg/apache/commons/text/StrBuilder;" line="2220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/apache/commons/text/StrBuilder;" line="2233"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2249"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="2276"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="()Z" line="2290"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(C)I" line="2300"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(CI)I" line="2311"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/String;)I" line="2333"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/String;I)I" line="2348"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Lorg/apache/commons/text/StrMatcher;)I" line="2386"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Lorg/apache/commons/text/StrMatcher;I)I" line="2403"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftString" desc="(I)Ljava/lang/String;" line="2431"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="2447"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="midString" desc="(II)Ljava/lang/String;" line="2468"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minimizeCapacity" desc="()Lorg/apache/commons/text/StrBuilder;" line="2486"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFrom" desc="(Ljava/lang/Readable;)I" line="2505"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(IILjava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2546"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/StrBuilder;" line="2572"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(CC)Lorg/apache/commons/text/StrBuilder;" line="2585"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2603"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2628"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(CC)Lorg/apache/commons/text/StrBuilder;" line="2640"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2659"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2683"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceImpl" desc="(IIILjava/lang/String;I)V" line="2701"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceImpl" desc="(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/StrBuilder;" line="2731"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/text/StrBuilder;" line="2756"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightString" desc="(I)Ljava/lang/String;" line="2784"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCharAt" desc="(IC)Lorg/apache/commons/text/StrBuilder;" line="2804"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLength" desc="(I)Lorg/apache/commons/text/StrBuilder;" line="2820"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNewLineText" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2843"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullText" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;" line="2854"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="2871"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Ljava/lang/String;)Z" line="2884"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="2907"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substring" desc="(I)Ljava/lang/String;" line="2927"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substring" desc="(II)Ljava/lang/String;" line="2944"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="()[C" line="2954"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="(II)[C" line="2968"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2990"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringBuffer" desc="()Ljava/lang/StringBuffer;" line="3000"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringBuilder" desc="()Ljava/lang/StringBuilder;" line="3010"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="()Lorg/apache/commons/text/StrBuilder;" line="3020"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateIndex" desc="(I)V" line="3048"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateRange" desc="(II)I" line="3063"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="3494"/><counter type="BRANCH" missed="9" covered="513"/><counter type="LINE" missed="7" covered="743"/><counter type="COMPLEXITY" missed="10" covered="401"/><counter type="METHOD" missed="1" covered="149"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StringSubstitutor" sourcefilename="StringSubstitutor.java"><method name="createInterpolator" desc="()Lorg/apache/commons/text/StringSubstitutor;" line="386"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;" line="399"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="417"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;" line="430"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceSystemProperties" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="446"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="498"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="509"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V" line="522"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V" line="537"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V" line="553"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;)V" line="562"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;Ljava/lang/String;Ljava/lang/String;C)V" line="575"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V" line="594"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;C)V" line="613"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;CLorg/apache/commons/text/matcher/StringMatcher;)V" line="627"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StringSubstitutor;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCyclicSubstitution" desc="(Ljava/lang/String;Ljava/util/List;)V" line="660"><counter type="INSTRUCTION" missed="31" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEscapeChar" desc="()C" line="678"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="687"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueDelimiterMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="703"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariablePrefixMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="716"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableSuffixMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="729"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDisableSubstitutionInValues" desc="()Z" line="754"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnableSubstitutionInVariables" desc="()Z" line="763"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnableUndefinedVariableException" desc="()Z" line="772"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPreserveEscapes" desc="()Z" line="781"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="([C)Ljava/lang/String;" line="793"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="([CII)Ljava/lang/String;" line="820"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="837"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/CharSequence;II)Ljava/lang/String;" line="858"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="875"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/String;)Ljava/lang/String;" line="892"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="921"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/StringBuffer;)Ljava/lang/String;" line="940"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/StringBuffer;II)Ljava/lang/String;" line="963"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/TextStringBuilder;)Ljava/lang/String;" line="980"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/TextStringBuilder;II)Ljava/lang/String;" line="1003"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuffer;)Z" line="1019"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuffer;II)Z" line="1040"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuilder;)Z" line="1059"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuilder;II)Z" line="1080"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Lorg/apache/commons/text/TextStringBuilder;)Z" line="1100"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Lorg/apache/commons/text/TextStringBuilder;II)Z" line="1121"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveVariable" desc="(Ljava/lang/String;Lorg/apache/commons/text/TextStringBuilder;II)Ljava/lang/String;" line="1147"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDisableSubstitutionInValues" desc="(Z)Lorg/apache/commons/text/StringSubstitutor;" line="1161"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnableSubstitutionInVariables" desc="(Z)Lorg/apache/commons/text/StringSubstitutor;" line="1174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnableUndefinedVariableException" desc="(Z)Lorg/apache/commons/text/StringSubstitutor;" line="1185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEscapeChar" desc="(C)Lorg/apache/commons/text/StringSubstitutor;" line="1197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPreserveEscapes" desc="(Z)Lorg/apache/commons/text/StringSubstitutor;" line="1211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiter" desc="(C)Lorg/apache/commons/text/StringSubstitutor;" line="1226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiter" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;" line="1244"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiterMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;" line="1266"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefix" desc="(C)Lorg/apache/commons/text/StringSubstitutor;" line="1281"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefix" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;" line="1296"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefixMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;" line="1312"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableResolver" desc="(Lorg/apache/commons/text/lookup/StringLookup;)Lorg/apache/commons/text/StringSubstitutor;" line="1324"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffix" desc="(C)Lorg/apache/commons/text/StringSubstitutor;" line="1339"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffix" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;" line="1354"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffixMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;" line="1370"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitute" desc="(Lorg/apache/commons/text/TextStringBuilder;II)Z" line="1392"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitute" desc="(Lorg/apache/commons/text/TextStringBuilder;IILjava/util/List;)Lorg/apache/commons/text/StringSubstitutor$Result;" line="1409"><counter type="INSTRUCTION" missed="0" covered="349"/><counter type="BRANCH" missed="2" covered="42"/><counter type="LINE" missed="0" covered="95"/><counter type="COMPLEXITY" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="1560"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="275"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="1097"/><counter type="BRANCH" missed="5" covered="99"/><counter type="LINE" missed="15" covered="279"/><counter type="COMPLEXITY" missed="6" covered="109"/><counter type="METHOD" missed="1" covered="62"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/RandomStringGenerator$Builder" sourcefilename="RandomStringGenerator.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/apache/commons/text/RandomStringGenerator;" line="135"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filteredBy" desc="([Lorg/apache/commons/text/CharacterPredicate;)Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="154"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectFrom" desc="([C)Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="186"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usingRandom" desc="(Lorg/apache/commons/text/TextRandomProvider;)Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="225"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withinRange" desc="([[C)Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="246"><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withinRange" desc="(II)Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="282"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="210"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher$CharSetMatcher" sourcefilename="StrMatcher.java"><method name="&lt;init&gt;" desc="([C)V" line="81"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="97"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicate" sourcefilename="CharacterPredicate.java"/><class name="org/apache/commons/text/RandomStringGenerator" sourcefilename="RandomStringGenerator.java"><method name="builder" desc="()Lorg/apache/commons/text/RandomStringGenerator$Builder;" line="301"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILjava/util/Set;Lorg/apache/commons/text/TextRandomProvider;Ljava/util/List;)V" line="344"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(I)Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(II)Ljava/lang/String;" line="435"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateRandomNumber" desc="(II)I" line="452"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateRandomNumber" desc="(Ljava/util/List;)I" line="466"><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="182"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$1" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$3" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$2" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrTokenizer" sourcefilename="StrTokenizer.java"><method name="getCSVClone" desc="()Lorg/apache/commons/text/StrTokenizer;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="()Lorg/apache/commons/text/StrTokenizer;" line="133"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="([C)Lorg/apache/commons/text/StrTokenizer;" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;" line="161"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVClone" desc="()Lorg/apache/commons/text/StrTokenizer;" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="()Lorg/apache/commons/text/StrTokenizer;" line="184"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="([C)Lorg/apache/commons/text/StrTokenizer;" line="195"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;" line="208"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="223"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([C)V" line="223"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CC)V" line="272"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CCC)V" line="285"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLjava/lang/String;)V" line="296"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLorg/apache/commons/text/StrMatcher;)V" line="307"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="223"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;C)V" line="345"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;CC)V" line="358"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/text/StrMatcher;)V" line="380"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;)V" line="393"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;)V" line="404"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToken" desc="(Ljava/util/List;Ljava/lang/String;)V" line="414"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkTokenized" desc="()V" line="429"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Ljava/lang/Object;" line="451"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneReset" desc="()Ljava/lang/Object;" line="466"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="480"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelimiterMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="492"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="506"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuoteMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="520"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenArray" desc="()[Ljava/lang/String;" line="529"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenList" desc="()Ljava/util/List;" line="539"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrimmerMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="557"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="567"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="()Z" line="578"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyTokenAsNull" desc="()Z" line="589"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoreEmptyTokens" desc="()Z" line="599"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isQuote" desc="([CIIII)Z" line="618"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/String;" line="634"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextIndex" desc="()I" line="647"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextToken" desc="()Ljava/lang/String;" line="658"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previous" desc="()Ljava/lang/String;" line="671"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previousIndex" desc="()I" line="684"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previousToken" desc="()Ljava/lang/String;" line="693"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readNextToken" desc="([CIILorg/apache/commons/text/StrBuilder;Ljava/util/List;)I" line="717"><counter type="INSTRUCTION" missed="1" covered="101"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readWithQuotes" desc="([CIILorg/apache/commons/text/StrBuilder;Ljava/util/List;II)I" line="768"><counter type="INSTRUCTION" missed="0" covered="153"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="852"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/apache/commons/text/StrTokenizer;" line="863"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="([C)Lorg/apache/commons/text/StrTokenizer;" line="877"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;" line="895"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/String;)V" line="911"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterChar" desc="(C)Lorg/apache/commons/text/StrTokenizer;" line="921"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;" line="934"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterString" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;" line="949"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEmptyTokenAsNull" desc="(Z)Lorg/apache/commons/text/StrTokenizer;" line="960"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoredChar" desc="(C)Lorg/apache/commons/text/StrTokenizer;" line="975"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoredMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;" line="989"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreEmptyTokens" desc="(Z)Lorg/apache/commons/text/StrTokenizer;" line="1003"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQuoteChar" desc="(C)Lorg/apache/commons/text/StrTokenizer;" line="1018"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQuoteMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;" line="1032"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTrimmerMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;" line="1049"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="1061"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenize" desc="([CII)Ljava/util/List;" line="1089"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="1116"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="947"/><counter type="BRANCH" missed="2" covered="94"/><counter type="LINE" missed="1" covered="247"/><counter type="COMPLEXITY" missed="2" covered="111"/><counter type="METHOD" missed="0" covered="65"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CompositeFormat" sourcefilename="CompositeFormat.java"><method name="&lt;init&gt;" desc="(Ljava/text/Format;Ljava/text/Format;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormatter" desc="()Ljava/text/Format;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParser" desc="()Ljava/text/Format;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseObject" desc="(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reformat" desc="(Ljava/lang/String;)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StringSubstitutor$Result" sourcefilename="StringSubstitutor.java"><method name="&lt;init&gt;" desc="(ZI)V" line="235"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/Builder" sourcefilename="Builder.java"/><class name="org/apache/commons/text/CharacterPredicates$5" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$4" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$7" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates$6" sourcefilename="CharacterPredicates.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(I)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StringEscapeUtils$Builder" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/translate/CharSequenceTranslator;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringEscapeUtils$Builder;" line="101"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escape" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringEscapeUtils$Builder;" line="112"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/TextRandomProvider" sourcefilename="TextRandomProvider.java"/><class name="org/apache/commons/text/StringEscapeUtils$XsiUnescaper" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="139"><counter type="INSTRUCTION" missed="5" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="54"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrLookup" sourcefilename="StrLookup.java"><method name="mapLookup" desc="(Ljava/util/Map;)Lorg/apache/commons/text/StrLookup;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noneLookup" desc="()Lorg/apache/commons/text/StrLookup;" line="171"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceBundleLookup" desc="(Ljava/util/ResourceBundle;)Lorg/apache/commons/text/StrLookup;" line="186"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="systemPropertiesLookup" desc="()Lorg/apache/commons/text/StrLookup;" line="201"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher$TrimMatcher" sourcefilename="StrMatcher.java"><method name="&lt;init&gt;" desc="()V" line="181"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="195"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/TextStringBuilder$TextStringBuilderReader" sourcefilename="TextStringBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/TextStringBuilder;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="117"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="126"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ready" desc="()Z" line="146"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="158"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="147"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/AlphabetConverter" sourcefilename="AlphabetConverter.java"><method name="codePointToString" desc="(I)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertCharsToIntegers" desc="([Ljava/lang/Character;)[Ljava/lang/Integer;" line="103"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConverter" desc="([Ljava/lang/Integer;[Ljava/lang/Integer;[Ljava/lang/Integer;)Lorg/apache/commons/text/AlphabetConverter;" line="133"><counter type="INSTRUCTION" missed="5" covered="232"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConverterFromChars" desc="([Ljava/lang/Character;[Ljava/lang/Character;[Ljava/lang/Character;)Lorg/apache/commons/text/AlphabetConverter;" line="245"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createConverterFromMap" desc="(Ljava/util/Map;)Lorg/apache/commons/text/AlphabetConverter;" line="259"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;I)V" line="299"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSingleEncoding" desc="(ILjava/lang/String;Ljava/util/Collection;Ljava/util/Iterator;Ljava/util/Map;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/lang/String;)Ljava/lang/String;" line="374"><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/String;)Ljava/lang/String;" line="419"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="449"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEncodedCharLength" desc="()I" line="472"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalToEncoded" desc="()Ljava/util/Map;" line="483"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="488"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="495"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$1" desc="(Ljava/lang/StringBuilder;Ljava/lang/Integer;Ljava/lang/String;)V" line="498"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convertCharsToIntegers$0" desc="([Ljava/lang/Character;I)Ljava/lang/Integer;" line="107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="672"/><counter type="BRANCH" missed="3" covered="65"/><counter type="LINE" missed="2" covered="143"/><counter type="COMPLEXITY" missed="3" covered="47"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrBuilder$StrBuilderWriter" sourcefilename="StrBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrBuilder;)V" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([C)V" line="225"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="231"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="237"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="243"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="249"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/FormattableUtils" sourcefilename="FormattableUtils.java"><method name="append" desc="(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;" line="93"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;" line="134"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/util/Formattable;)Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrBuilder$StrBuilderTokenizer" sourcefilename="StrBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrBuilder;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenize" desc="([CII)Ljava/util/List;" line="191"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StringEscapeUtils" sourcefilename="StringEscapeUtils.java"><method name="builder" desc="(Lorg/apache/commons/text/translate/CharSequenceTranslator;)Lorg/apache/commons/text/StringEscapeUtils$Builder;" line="488"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeCsv" desc="(Ljava/lang/String;)Ljava/lang/String;" line="511"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeEcmaScript" desc="(Ljava/lang/String;)Ljava/lang/String;" line="545"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeHtml3" desc="(Ljava/lang/String;)Ljava/lang/String;" line="557"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeHtml4" desc="(Ljava/lang/String;)Ljava/lang/String;" line="587"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeJava" desc="(Ljava/lang/String;)Ljava/lang/String;" line="612"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeJson" desc="(Ljava/lang/String;)Ljava/lang/String;" line="639"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeXml10" desc="(Ljava/lang/String;)Ljava/lang/String;" line="670"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeXml11" desc="(Ljava/lang/String;)Ljava/lang/String;" line="699"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeXSI" desc="(Ljava/lang/String;)Ljava/lang/String;" line="720"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeCsv" desc="(Ljava/lang/String;)Ljava/lang/String;" line="744"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeEcmaScript" desc="(Ljava/lang/String;)Ljava/lang/String;" line="759"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeHtml3" desc="(Ljava/lang/String;)Ljava/lang/String;" line="771"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeHtml4" desc="(Ljava/lang/String;)Ljava/lang/String;" line="790"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeJava" desc="(Ljava/lang/String;)Ljava/lang/String;" line="803"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeJson" desc="(Ljava/lang/String;)Ljava/lang/String;" line="818"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeXml" desc="(Ljava/lang/String;)Ljava/lang/String;" line="838"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeXSI" desc="(Ljava/lang/String;)Ljava/lang/String;" line="849"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="862"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="175"><counter type="INSTRUCTION" missed="0" covered="767"/><counter type="LINE" missed="0" covered="112"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="844"/><counter type="LINE" missed="0" covered="132"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher$StringMatcher" sourcefilename="StrMatcher.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="154"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrLookup$MapStrLookup" sourcefilename="StrLookup.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/FormatFactory" sourcefilename="FormatFactory.java"/><class name="org/apache/commons/text/StrLookup$ResourceBundleLookup" sourcefilename="StrLookup.java"><method name="&lt;init&gt;" desc="(Ljava/util/ResourceBundle;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrSubstitutor" sourcefilename="StrSubstitutor.java"><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="179"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceSystemProperties" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="254"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="265"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V" line="278"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V" line="293"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrLookup;)V" line="318"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V" line="331"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V" line="350"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrLookup;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;C)V" line="370"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/StrLookup;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;CLorg/apache/commons/text/StrMatcher;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCyclicSubstitution" desc="(Ljava/lang/String;Ljava/util/List;)V" line="400"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEscapeChar" desc="()C" line="417"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueDelimiterMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="434"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariablePrefixMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="448"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableResolver" desc="()Lorg/apache/commons/text/StrLookup;" line="457"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableSuffixMatcher" desc="()Lorg/apache/commons/text/StrMatcher;" line="471"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDisableSubstitutionInValues" desc="()Z" line="496"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnableSubstitutionInVariables" desc="()Z" line="505"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPreserveEscapes" desc="()Z" line="515"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="([C)Ljava/lang/String;" line="527"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="([CII)Ljava/lang/String;" line="550"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="567"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/CharSequence;II)Ljava/lang/String;" line="588"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="605"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/StrBuilder;)Ljava/lang/String;" line="622"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/StrBuilder;II)Ljava/lang/String;" line="645"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/String;)Ljava/lang/String;" line="661"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="685"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/StringBuffer;)Ljava/lang/String;" line="704"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/StringBuffer;II)Ljava/lang/String;" line="727"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Lorg/apache/commons/text/StrBuilder;)Z" line="743"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Lorg/apache/commons/text/StrBuilder;II)Z" line="763"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuffer;)Z" line="778"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuffer;II)Z" line="799"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuilder;)Z" line="819"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIn" desc="(Ljava/lang/StringBuilder;II)Z" line="840"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveVariable" desc="(Ljava/lang/String;Lorg/apache/commons/text/StrBuilder;II)Ljava/lang/String;" line="874"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDisableSubstitutionInValues" desc="(Z)V" line="889"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnableSubstitutionInVariables" desc="(Z)V" line="902"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEscapeChar" desc="(C)V" line="913"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPreserveEscapes" desc="(Z)V" line="928"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiter" desc="(C)Lorg/apache/commons/text/StrSubstitutor;" line="943"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiter" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;" line="962"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueDelimiterMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;" line="985"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefix" desc="(C)Lorg/apache/commons/text/StrSubstitutor;" line="1001"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefix" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;" line="1016"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariablePrefixMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;" line="1033"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableResolver" desc="(Lorg/apache/commons/text/StrLookup;)V" line="1044"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffix" desc="(C)Lorg/apache/commons/text/StrSubstitutor;" line="1059"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffix" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;" line="1074"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariableSuffixMatcher" desc="(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;" line="1091"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitute" desc="(Lorg/apache/commons/text/StrBuilder;II)Z" line="1113"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitute" desc="(Lorg/apache/commons/text/StrBuilder;IILjava/util/List;)I" line="1129"><counter type="INSTRUCTION" missed="0" covered="322"/><counter type="BRANCH" missed="0" covered="46"/><counter type="LINE" missed="0" covered="90"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="1027"/><counter type="BRANCH" missed="0" covered="108"/><counter type="LINE" missed="1" covered="265"/><counter type="COMPLEXITY" missed="0" covered="112"/><counter type="METHOD" missed="0" covered="58"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StringTokenizer" sourcefilename="StringTokenizer.java"><method name="getCSVClone" desc="()Lorg/apache/commons/text/StringTokenizer;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="()Lorg/apache/commons/text/StringTokenizer;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="([C)Lorg/apache/commons/text/StringTokenizer;" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCSVInstance" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVClone" desc="()Lorg/apache/commons/text/StringTokenizer;" line="175"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="()Lorg/apache/commons/text/StringTokenizer;" line="188"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="([C)Lorg/apache/commons/text/StringTokenizer;" line="200"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTSVInstance" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;" line="212"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([C)V" line="225"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CC)V" line="272"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CCC)V" line="288"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLjava/lang/String;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLorg/apache/commons/text/matcher/StringMatcher;)V" line="314"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CLorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;C)V" line="353"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;CC)V" line="369"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="382"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/text/matcher/StringMatcher;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;)V" line="411"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToken" desc="(Ljava/util/List;Ljava/lang/String;)V" line="437"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkTokenized" desc="()V" line="452"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Ljava/lang/Object;" line="473"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneReset" desc="()Ljava/lang/Object;" line="489"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="503"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelimiterMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="515"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="528"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuoteMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="541"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenArray" desc="()[Ljava/lang/String;" line="550"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenList" desc="()Ljava/util/List;" line="560"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrimmerMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="574"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="584"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="()Z" line="595"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyTokenAsNull" desc="()Z" line="605"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoreEmptyTokens" desc="()Z" line="614"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isQuote" desc="([CIIII)Z" line="634"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/String;" line="651"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextIndex" desc="()I" line="664"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextToken" desc="()Ljava/lang/String;" line="674"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previous" desc="()Ljava/lang/String;" line="687"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previousIndex" desc="()I" line="700"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previousToken" desc="()Ljava/lang/String;" line="709"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readNextToken" desc="([CIILorg/apache/commons/text/TextStringBuilder;Ljava/util/List;)I" line="735"><counter type="INSTRUCTION" missed="1" covered="101"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readWithQuotes" desc="([CIILorg/apache/commons/text/TextStringBuilder;Ljava/util/List;II)I" line="790"><counter type="INSTRUCTION" missed="0" covered="153"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="874"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()Lorg/apache/commons/text/StringTokenizer;" line="886"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="([C)Lorg/apache/commons/text/StringTokenizer;" line="900"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;" line="914"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/String;)V" line="929"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterChar" desc="(C)Lorg/apache/commons/text/StringTokenizer;" line="940"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;" line="954"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDelimiterString" desc="(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;" line="966"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEmptyTokenAsNull" desc="(Z)Lorg/apache/commons/text/StringTokenizer;" line="977"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoredChar" desc="(C)Lorg/apache/commons/text/StringTokenizer;" line="992"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoredMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;" line="1006"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreEmptyTokens" desc="(Z)Lorg/apache/commons/text/StringTokenizer;" line="1020"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQuoteChar" desc="(C)Lorg/apache/commons/text/StringTokenizer;" line="1035"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQuoteMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;" line="1049"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTrimmerMatcher" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;" line="1065"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="1077"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenize" desc="([CII)Ljava/util/List;" line="1106"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="1133"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="933"/><counter type="BRANCH" missed="2" covered="94"/><counter type="LINE" missed="1" covered="223"/><counter type="COMPLEXITY" missed="2" covered="111"/><counter type="METHOD" missed="0" covered="65"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CaseUtils" sourcefilename="CaseUtils.java"><method name="toCamelCase" desc="(Ljava/lang/String;Z[C)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDelimiterSet" desc="([C)Ljava/util/Set;" line="107"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher$CharMatcher" sourcefilename="StrMatcher.java"><method name="&lt;init&gt;" desc="(C)V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/StrMatcher$NoMatcher" sourcefilename="StrMatcher.java"><method name="&lt;init&gt;" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="123"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/TextStringBuilder" sourcefilename="TextStringBuilder.java"><method name="createPositiveCapacity" desc="(I)I" line="306"><counter type="INSTRUCTION" missed="13" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="([C)Lorg/apache/commons/text/TextStringBuilder;" line="331"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="([CI)Lorg/apache/commons/text/TextStringBuilder;" line="347"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="369"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([CI)V" line="381"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="407"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="417"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Z)Lorg/apache/commons/text/TextStringBuilder;" line="430"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Lorg/apache/commons/text/TextStringBuilder;" line="448"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([C)Lorg/apache/commons/text/TextStringBuilder;" line="461"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([CII)Lorg/apache/commons/text/TextStringBuilder;" line="487"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/nio/CharBuffer;)Lorg/apache/commons/text/TextStringBuilder;" line="512"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/nio/CharBuffer;II)Lorg/apache/commons/text/TextStringBuilder;" line="524"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Lorg/apache/commons/text/TextStringBuilder;" line="553"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Lorg/apache/commons/text/TextStringBuilder;" line="581"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(D)Lorg/apache/commons/text/TextStringBuilder;" line="600"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(F)Lorg/apache/commons/text/TextStringBuilder;" line="610"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(I)Lorg/apache/commons/text/TextStringBuilder;" line="620"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(J)Lorg/apache/commons/text/TextStringBuilder;" line="630"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="640"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="656"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;II)Lorg/apache/commons/text/TextStringBuilder;" line="672"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="699"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/TextStringBuilder;" line="709"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/TextStringBuilder;" line="721"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/TextStringBuilder;" line="746"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;" line="758"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/TextStringBuilder;)Lorg/apache/commons/text/TextStringBuilder;" line="783"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lorg/apache/commons/text/TextStringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;" line="795"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="(Ljava/lang/Iterable;)Lorg/apache/commons/text/TextStringBuilder;" line="821"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="(Ljava/util/Iterator;)Lorg/apache/commons/text/TextStringBuilder;" line="835"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendAll" desc="([Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="855"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFalse" desc="(I)V" line="865"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadLeft" desc="(IIC)Lorg/apache/commons/text/TextStringBuilder;" line="883"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadLeft" desc="(Ljava/lang/Object;IC)Lorg/apache/commons/text/TextStringBuilder;" line="897"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadRight" desc="(IIC)Lorg/apache/commons/text/TextStringBuilder;" line="928"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFixedWidthPadRight" desc="(Ljava/lang/Object;IC)Lorg/apache/commons/text/TextStringBuilder;" line="942"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Z)Lorg/apache/commons/text/TextStringBuilder;" line="970"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(C)Lorg/apache/commons/text/TextStringBuilder;" line="980"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="([C)Lorg/apache/commons/text/TextStringBuilder;" line="991"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="([CII)Lorg/apache/commons/text/TextStringBuilder;" line="1004"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(D)Lorg/apache/commons/text/TextStringBuilder;" line="1014"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(F)Lorg/apache/commons/text/TextStringBuilder;" line="1024"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(I)Lorg/apache/commons/text/TextStringBuilder;" line="1034"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(J)Lorg/apache/commons/text/TextStringBuilder;" line="1044"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="1054"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1064"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;II)Lorg/apache/commons/text/TextStringBuilder;" line="1077"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="1089"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/TextStringBuilder;" line="1100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/TextStringBuilder;" line="1113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/TextStringBuilder;" line="1124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;" line="1137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Lorg/apache/commons/text/TextStringBuilder;)Lorg/apache/commons/text/TextStringBuilder;" line="1148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendln" desc="(Lorg/apache/commons/text/TextStringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;" line="1161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNewLine" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="1174"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNull" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="1187"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendPadding" desc="(IC)Lorg/apache/commons/text/TextStringBuilder;" line="1201"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(C)Lorg/apache/commons/text/TextStringBuilder;" line="1231"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(CC)Lorg/apache/commons/text/TextStringBuilder;" line="1248"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(CI)Lorg/apache/commons/text/TextStringBuilder;" line="1279"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1307"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;I)Lorg/apache/commons/text/TextStringBuilder;" line="1333"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSeparator" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1367"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTo" desc="(Ljava/lang/Appendable;)V" line="1386"><counter type="INSTRUCTION" missed="10" covered="46"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendTrue" desc="(I)V" line="1401"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1417"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1432"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWithSeparators" desc="([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1453"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asReader" desc="()Ljava/io/Reader;" line="1484"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asTokenizer" desc="()Lorg/apache/commons/text/StringTokenizer;" line="1523"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asWriter" desc="()Ljava/io/Writer;" line="1547"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/lang/String;" line="1558"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="1567"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="1581"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="1599"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(C)Z" line="1610"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/String;)Z" line="1626"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Z" line="1640"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(II)Lorg/apache/commons/text/TextStringBuilder;" line="1652"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(C)Lorg/apache/commons/text/TextStringBuilder;" line="1667"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1690"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/TextStringBuilder;" line="1712"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteCharAt" desc="(I)Lorg/apache/commons/text/TextStringBuilder;" line="1725"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(C)Lorg/apache/commons/text/TextStringBuilder;" line="1737"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="1753"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteFirst" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/TextStringBuilder;" line="1774"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteImpl" desc="(III)V" line="1786"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drainChar" desc="(I)C" line="1801"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drainChars" desc="(II[CI)I" line="1819"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/String;)Z" line="1839"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)Lorg/apache/commons/text/TextStringBuilder;" line="1872"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacityInternal" desc="(I)V" line="1894"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="1907"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lorg/apache/commons/text/TextStringBuilder;)Z" line="1917"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsIgnoreCase" desc="(Lorg/apache/commons/text/TextStringBuilder;)Z" line="1946"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuffer" desc="()[C" line="1966"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChars" desc="([C)[C" line="1976"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChars" desc="(II[CI)V" line="1995"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewLineText" desc="()Ljava/lang/String;" line="2013"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullText" desc="()Ljava/lang/String;" line="2022"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="2033"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(C)I" line="2048"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(CI)I" line="2059"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/String;)I" line="2082"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/String;I)I" line="2097"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)I" line="2135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lorg/apache/commons/text/matcher/StringMatcher;I)I" line="2150"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IZ)Lorg/apache/commons/text/TextStringBuilder;" line="2173"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IC)Lorg/apache/commons/text/TextStringBuilder;" line="2195"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[C)Lorg/apache/commons/text/TextStringBuilder;" line="2212"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[CII)Lorg/apache/commons/text/TextStringBuilder;" line="2237"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ID)Lorg/apache/commons/text/TextStringBuilder;" line="2265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(IF)Lorg/apache/commons/text/TextStringBuilder;" line="2277"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(II)Lorg/apache/commons/text/TextStringBuilder;" line="2289"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(IJ)Lorg/apache/commons/text/TextStringBuilder;" line="2301"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;" line="2314"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2329"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="2355"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="()Z" line="2368"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReallocated" desc="()Z" line="2378"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(C)I" line="2388"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(CI)I" line="2399"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/String;)I" line="2421"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/String;I)I" line="2436"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)I" line="2472"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Lorg/apache/commons/text/matcher/StringMatcher;I)I" line="2487"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftString" desc="(I)Ljava/lang/String;" line="2512"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="2528"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="midString" desc="(II)Ljava/lang/String;" line="2545"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minimizeCapacity" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="2563"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFrom" desc="(Ljava/nio/CharBuffer;)I" line="2580"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFrom" desc="(Ljava/lang/Readable;)I" line="2599"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFrom" desc="(Ljava/io/Reader;)I" line="2630"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFrom" desc="(Ljava/io/Reader;I)I" line="2657"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reallocate" desc="(I)V" line="2681"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(IILjava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2696"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/TextStringBuilder;" line="2719"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(CC)Lorg/apache/commons/text/TextStringBuilder;" line="2731"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2749"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2773"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(CC)Lorg/apache/commons/text/TextStringBuilder;" line="2784"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2803"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="2826"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceImpl" desc="(IIILjava/lang/String;I)V" line="2841"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceImpl" desc="(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/TextStringBuilder;" line="2869"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resizeBuffer" desc="(I)V" line="2896"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="2913"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightString" desc="(I)Ljava/lang/String;" line="2938"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/CharSequence;)Lorg/apache/commons/text/TextStringBuilder;" line="2957"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCharAt" desc="(IC)Lorg/apache/commons/text/TextStringBuilder;" line="2973"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLength" desc="(I)Lorg/apache/commons/text/TextStringBuilder;" line="2986"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNewLineText" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="3007"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullText" desc="(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;" line="3018"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="3034"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Ljava/lang/String;)Z" line="3047"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="3070"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substring" desc="(I)Ljava/lang/String;" line="3090"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substring" desc="(II)Ljava/lang/String;" line="3106"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="()[C" line="3116"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="(II)[C" line="3129"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="3144"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringBuffer" desc="()Ljava/lang/StringBuffer;" line="3153"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringBuilder" desc="()Ljava/lang/StringBuilder;" line="3162"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="()Lorg/apache/commons/text/TextStringBuilder;" line="3171"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateIndex" desc="(I)V" line="3199"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateRange" desc="(II)I" line="3213"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="270"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="3476"/><counter type="BRANCH" missed="9" covered="513"/><counter type="LINE" missed="6" covered="753"/><counter type="COMPLEXITY" missed="10" covered="420"/><counter type="METHOD" missed="1" covered="168"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/TextStringBuilder$TextStringBuilderTokenizer" sourcefilename="TextStringBuilder.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/TextStringBuilder;)V" line="177"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenize" desc="([CII)Ljava/util/List;" line="193"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/CharacterPredicates" sourcefilename="CharacterPredicates.java"><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StringSubstitutor.java"><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="17" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="6" mb="0" cb="0"/><line nr="399" mi="0" ci="7" mb="0" cb="0"/><line nr="417" mi="0" ci="9" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="2"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="11" mb="0" cb="0"/><line nr="446" mi="0" ci="8" mb="0" cb="0"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="8" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="8" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="8" mb="0" cb="0"/><line nr="538" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="9" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="6" mb="0" cb="0"/><line nr="563" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="2" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="0" cb="0"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="0"/><line nr="599" mi="0" ci="4" mb="0" cb="0"/><line nr="600" mi="0" ci="1" mb="0" cb="0"/><line nr="613" mi="0" ci="7" mb="0" cb="0"/><line nr="614" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="4" mb="0" cb="0"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="642" mi="0" ci="4" mb="0" cb="0"/><line nr="643" mi="0" ci="4" mb="0" cb="0"/><line nr="644" mi="0" ci="4" mb="0" cb="0"/><line nr="645" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="647" mi="0" ci="4" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="0" ci="4" mb="1" cb="1"/><line nr="661" mi="0" ci="1" mb="0" cb="0"/><line nr="663" mi="5" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="7" ci="0" mb="0" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="668" mi="6" ci="0" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="0"/><line nr="703" mi="0" ci="3" mb="0" cb="0"/><line nr="716" mi="0" ci="3" mb="0" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="772" mi="0" ci="3" mb="0" cb="0"/><line nr="781" mi="0" ci="3" mb="0" cb="0"/><line nr="793" mi="0" ci="2" mb="0" cb="2"/><line nr="794" mi="0" ci="2" mb="0" cb="0"/><line nr="796" mi="0" ci="8" mb="0" cb="0"/><line nr="797" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="2" mb="0" cb="2"/><line nr="821" mi="0" ci="2" mb="0" cb="0"/><line nr="823" mi="0" ci="9" mb="0" cb="0"/><line nr="824" mi="0" ci="6" mb="0" cb="0"/><line nr="825" mi="0" ci="3" mb="0" cb="0"/><line nr="837" mi="0" ci="2" mb="0" cb="2"/><line nr="838" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="7" mb="0" cb="0"/><line nr="858" mi="0" ci="2" mb="1" cb="1"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="861" mi="0" ci="10" mb="0" cb="0"/><line nr="862" mi="0" ci="6" mb="0" cb="0"/><line nr="863" mi="0" ci="3" mb="0" cb="0"/><line nr="875" mi="0" ci="2" mb="0" cb="2"/><line nr="876" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="6" mb="0" cb="0"/><line nr="879" mi="0" ci="7" mb="0" cb="0"/><line nr="880" mi="0" ci="3" mb="0" cb="0"/><line nr="892" mi="0" ci="2" mb="0" cb="2"/><line nr="893" mi="0" ci="2" mb="0" cb="0"/><line nr="895" mi="0" ci="5" mb="0" cb="0"/><line nr="896" mi="0" ci="7" mb="0" cb="2"/><line nr="897" mi="0" ci="2" mb="0" cb="0"/><line nr="899" mi="0" ci="3" mb="0" cb="0"/><line nr="921" mi="0" ci="2" mb="0" cb="2"/><line nr="922" mi="0" ci="2" mb="0" cb="0"/><line nr="924" mi="0" ci="9" mb="0" cb="0"/><line nr="925" mi="0" ci="6" mb="0" cb="2"/><line nr="926" mi="0" ci="7" mb="0" cb="0"/><line nr="928" mi="0" ci="3" mb="0" cb="0"/><line nr="940" mi="0" ci="2" mb="0" cb="2"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="943" mi="0" ci="8" mb="0" cb="0"/><line nr="944" mi="0" ci="7" mb="0" cb="0"/><line nr="945" mi="0" ci="3" mb="0" cb="0"/><line nr="963" mi="0" ci="2" mb="0" cb="2"/><line nr="964" mi="0" ci="2" mb="0" cb="0"/><line nr="966" mi="0" ci="9" mb="0" cb="0"/><line nr="967" mi="0" ci="6" mb="0" cb="0"/><line nr="968" mi="0" ci="3" mb="0" cb="0"/><line nr="980" mi="0" ci="2" mb="0" cb="2"/><line nr="981" mi="0" ci="2" mb="0" cb="0"/><line nr="983" mi="0" ci="8" mb="0" cb="0"/><line nr="984" mi="0" ci="7" mb="0" cb="0"/><line nr="985" mi="0" ci="3" mb="0" cb="0"/><line nr="1003" mi="0" ci="2" mb="0" cb="2"/><line nr="1004" mi="0" ci="2" mb="0" cb="0"/><line nr="1006" mi="0" ci="9" mb="0" cb="0"/><line nr="1007" mi="0" ci="6" mb="0" cb="0"/><line nr="1008" mi="0" ci="3" mb="0" cb="0"/><line nr="1019" mi="0" ci="2" mb="0" cb="2"/><line nr="1020" mi="0" ci="2" mb="0" cb="0"/><line nr="1022" mi="0" ci="7" mb="0" cb="0"/><line nr="1040" mi="0" ci="2" mb="0" cb="2"/><line nr="1041" mi="0" ci="2" mb="0" cb="0"/><line nr="1043" mi="0" ci="9" mb="0" cb="0"/><line nr="1044" mi="0" ci="6" mb="0" cb="2"/><line nr="1045" mi="0" ci="2" mb="0" cb="0"/><line nr="1047" mi="0" ci="9" mb="0" cb="0"/><line nr="1048" mi="0" ci="2" mb="0" cb="0"/><line nr="1059" mi="0" ci="2" mb="0" cb="2"/><line nr="1060" mi="0" ci="2" mb="0" cb="0"/><line nr="1062" mi="0" ci="7" mb="0" cb="0"/><line nr="1080" mi="0" ci="2" mb="0" cb="2"/><line nr="1081" mi="0" ci="2" mb="0" cb="0"/><line nr="1083" mi="0" ci="9" mb="0" cb="0"/><line nr="1084" mi="0" ci="6" mb="0" cb="2"/><line nr="1085" mi="0" ci="2" mb="0" cb="0"/><line nr="1087" mi="0" ci="9" mb="0" cb="0"/><line nr="1088" mi="0" ci="2" mb="0" cb="0"/><line nr="1100" mi="0" ci="2" mb="0" cb="2"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1103" mi="0" ci="7" mb="0" cb="0"/><line nr="1121" mi="0" ci="2" mb="0" cb="2"/><line nr="1122" mi="0" ci="2" mb="0" cb="0"/><line nr="1124" mi="0" ci="6" mb="0" cb="0"/><line nr="1147" mi="0" ci="3" mb="0" cb="0"/><line nr="1148" mi="0" ci="2" mb="0" cb="2"/><line nr="1149" mi="0" ci="2" mb="0" cb="0"/><line nr="1151" mi="0" ci="4" mb="0" cb="0"/><line nr="1161" mi="0" ci="3" mb="0" cb="0"/><line nr="1162" mi="0" ci="2" mb="0" cb="0"/><line nr="1174" mi="0" ci="3" mb="0" cb="0"/><line nr="1175" mi="0" ci="2" mb="0" cb="0"/><line nr="1185" mi="0" ci="3" mb="0" cb="0"/><line nr="1186" mi="0" ci="2" mb="0" cb="0"/><line nr="1197" mi="0" ci="3" mb="0" cb="0"/><line nr="1198" mi="0" ci="2" mb="0" cb="0"/><line nr="1211" mi="0" ci="3" mb="0" cb="0"/><line nr="1212" mi="0" ci="2" mb="0" cb="0"/><line nr="1226" mi="0" ci="6" mb="0" cb="0"/><line nr="1244" mi="0" ci="5" mb="1" cb="3"/><line nr="1245" mi="0" ci="4" mb="0" cb="0"/><line nr="1246" mi="0" ci="2" mb="0" cb="0"/><line nr="1248" mi="0" ci="6" mb="0" cb="0"/><line nr="1266" mi="0" ci="3" mb="0" cb="0"/><line nr="1267" mi="0" ci="2" mb="0" cb="0"/><line nr="1281" mi="0" ci="6" mb="0" cb="0"/><line nr="1296" mi="0" ci="9" mb="0" cb="2"/><line nr="1297" mi="0" ci="6" mb="0" cb="0"/><line nr="1312" mi="0" ci="9" mb="0" cb="2"/><line nr="1313" mi="0" ci="3" mb="0" cb="0"/><line nr="1314" mi="0" ci="2" mb="0" cb="0"/><line nr="1324" mi="0" ci="3" mb="0" cb="0"/><line nr="1325" mi="0" ci="2" mb="0" cb="0"/><line nr="1339" mi="0" ci="6" mb="0" cb="0"/><line nr="1354" mi="0" ci="9" mb="0" cb="2"/><line nr="1355" mi="0" ci="6" mb="0" cb="0"/><line nr="1370" mi="0" ci="9" mb="0" cb="2"/><line nr="1371" mi="0" ci="3" mb="0" cb="0"/><line nr="1372" mi="0" ci="2" mb="0" cb="0"/><line nr="1392" mi="0" ci="8" mb="0" cb="0"/><line nr="1409" mi="0" ci="4" mb="0" cb="0"/><line nr="1410" mi="0" ci="3" mb="0" cb="0"/><line nr="1411" mi="0" ci="3" mb="0" cb="0"/><line nr="1412" mi="0" ci="3" mb="0" cb="0"/><line nr="1413" mi="0" ci="3" mb="0" cb="0"/><line nr="1414" mi="0" ci="3" mb="0" cb="0"/><line nr="1415" mi="0" ci="3" mb="0" cb="0"/><line nr="1416" mi="0" ci="3" mb="0" cb="0"/><line nr="1417" mi="0" ci="3" mb="0" cb="0"/><line nr="1419" mi="0" ci="2" mb="0" cb="0"/><line nr="1420" mi="0" ci="2" mb="0" cb="0"/><line nr="1421" mi="0" ci="4" mb="0" cb="0"/><line nr="1422" mi="0" ci="2" mb="0" cb="0"/><line nr="1423" mi="0" ci="2" mb="0" cb="0"/><line nr="1424" mi="0" ci="3" mb="0" cb="2"/><line nr="1425" mi="0" ci="7" mb="0" cb="0"/><line nr="1426" mi="0" ci="2" mb="0" cb="2"/><line nr="1427" mi="0" ci="2" mb="0" cb="0"/><line nr="1430" mi="0" ci="10" mb="0" cb="4"/><line nr="1432" mi="0" ci="2" mb="0" cb="2"/><line nr="1434" mi="0" ci="1" mb="0" cb="0"/><line nr="1435" mi="0" ci="1" mb="0" cb="0"/><line nr="1438" mi="0" ci="4" mb="0" cb="0"/><line nr="1441" mi="0" ci="2" mb="0" cb="0"/><line nr="1442" mi="0" ci="4" mb="0" cb="0"/><line nr="1443" mi="0" ci="2" mb="0" cb="0"/><line nr="1444" mi="0" ci="2" mb="0" cb="0"/><line nr="1445" mi="0" ci="3" mb="0" cb="2"/><line nr="1446" mi="0" ci="9" mb="0" cb="4"/><line nr="1448" mi="0" ci="7" mb="0" cb="0"/><line nr="1449" mi="0" ci="1" mb="0" cb="0"/><line nr="1450" mi="0" ci="4" mb="0" cb="0"/><line nr="1451" mi="0" ci="1" mb="0" cb="0"/><line nr="1454" mi="0" ci="7" mb="0" cb="0"/><line nr="1455" mi="0" ci="2" mb="0" cb="2"/><line nr="1456" mi="0" ci="2" mb="0" cb="0"/><line nr="1459" mi="0" ci="2" mb="0" cb="2"/><line nr="1460" mi="0" ci="2" mb="0" cb="2"/><line nr="1462" mi="0" ci="4" mb="0" cb="0"/><line nr="1463" mi="0" ci="2" mb="0" cb="0"/><line nr="1464" mi="0" ci="1" mb="0" cb="0"/><line nr="1465" mi="0" ci="2" mb="0" cb="0"/><line nr="1466" mi="0" ci="1" mb="0" cb="0"/><line nr="1467" mi="0" ci="4" mb="0" cb="0"/><line nr="1468" mi="0" ci="1" mb="0" cb="0"/><line nr="1469" mi="0" ci="1" mb="0" cb="0"/><line nr="1472" mi="0" ci="11" mb="0" cb="0"/><line nr="1474" mi="0" ci="2" mb="0" cb="2"/><line nr="1475" mi="0" ci="5" mb="0" cb="0"/><line nr="1476" mi="0" ci="7" mb="0" cb="0"/><line nr="1477" mi="0" ci="3" mb="0" cb="0"/><line nr="1479" mi="0" ci="4" mb="0" cb="0"/><line nr="1480" mi="0" ci="2" mb="0" cb="0"/><line nr="1482" mi="0" ci="2" mb="0" cb="0"/><line nr="1483" mi="0" ci="2" mb="0" cb="0"/><line nr="1485" mi="0" ci="2" mb="1" cb="1"/><line nr="1486" mi="0" ci="3" mb="0" cb="0"/><line nr="1487" mi="0" ci="2" mb="0" cb="0"/><line nr="1488" mi="0" ci="8" mb="0" cb="2"/><line nr="1491" mi="0" ci="10" mb="0" cb="4"/><line nr="1493" mi="0" ci="1" mb="0" cb="0"/><line nr="1495" mi="0" ci="8" mb="0" cb="2"/><line nr="1497" mi="0" ci="8" mb="0" cb="0"/><line nr="1499" mi="0" ci="5" mb="0" cb="0"/><line nr="1500" mi="0" ci="6" mb="0" cb="0"/><line nr="1501" mi="0" ci="1" mb="0" cb="0"/><line nr="1507" mi="0" ci="2" mb="0" cb="2"/><line nr="1508" mi="0" ci="4" mb="0" cb="0"/><line nr="1509" mi="0" ci="7" mb="0" cb="0"/><line nr="1513" mi="0" ci="4" mb="0" cb="0"/><line nr="1514" mi="0" ci="4" mb="0" cb="0"/><line nr="1517" mi="0" ci="7" mb="0" cb="0"/><line nr="1518" mi="0" ci="2" mb="0" cb="2"/><line nr="1519" mi="0" ci="2" mb="0" cb="0"/><line nr="1521" mi="0" ci="2" mb="0" cb="2"/><line nr="1522" mi="0" ci="3" mb="0" cb="0"/><line nr="1523" mi="0" ci="6" mb="0" cb="0"/><line nr="1524" mi="0" ci="2" mb="0" cb="0"/><line nr="1525" mi="0" ci="2" mb="0" cb="0"/><line nr="1526" mi="0" ci="2" mb="1" cb="1"/><line nr="1527" mi="0" ci="8" mb="0" cb="0"/><line nr="1529" mi="0" ci="8" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="0"/><line nr="1531" mi="0" ci="4" mb="0" cb="0"/><line nr="1532" mi="0" ci="4" mb="0" cb="0"/><line nr="1533" mi="0" ci="3" mb="0" cb="2"/><line nr="1534" mi="0" ci="12" mb="0" cb="0"/><line nr="1535" mi="0" ci="3" mb="0" cb="0"/><line nr="1536" mi="0" ci="2" mb="0" cb="0"/><line nr="1540" mi="0" ci="7" mb="0" cb="0"/><line nr="1541" mi="0" ci="1" mb="0" cb="0"/><line nr="1543" mi="0" ci="1" mb="0" cb="0"/><line nr="1544" mi="0" ci="5" mb="0" cb="0"/><line nr="1548" mi="0" ci="1" mb="0" cb="0"/><line nr="1549" mi="0" ci="7" mb="0" cb="0"/><line nr="1560" mi="4" ci="0" mb="0" cb="0"/><line nr="1561" mi="10" ci="0" mb="0" cb="0"/><line nr="1562" mi="7" ci="0" mb="0" cb="0"/><line nr="1563" mi="13" ci="0" mb="0" cb="0"/><line nr="1564" mi="12" ci="0" mb="0" cb="0"/><line nr="1565" mi="7" ci="0" mb="0" cb="0"/><line nr="1566" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="1106"/><counter type="BRANCH" missed="5" covered="99"/><counter type="LINE" missed="16" covered="283"/><counter type="COMPLEXITY" missed="7" covered="110"/><counter type="METHOD" missed="2" covered="63"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="StrMatcher.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="2"/><line nr="159" mi="0" ci="8" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="14" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="2"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="4"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="2"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="4"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="232"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="1" covered="39"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="TextRandomProvider.java"/><sourcefile name="StrLookup.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="15" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="6"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="77"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="StringEscapeUtils.java"><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="179" mi="0" ci="14" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="14" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="9" mb="0" cb="0"/><line nr="220" mi="0" ci="14" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="23" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="23" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="10" mb="0" cb="0"/><line nr="312" mi="0" ci="20" mb="0" cb="0"/><line nr="325" mi="0" ci="27" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="28" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="28" mb="0" cb="0"/><line nr="440" mi="0" ci="35" mb="0" cb="0"/><line nr="455" mi="0" ci="28" mb="0" cb="0"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="488" mi="0" ci="6" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="0" cb="0"/><line nr="557" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="639" mi="0" ci="4" mb="0" cb="0"/><line nr="670" mi="0" ci="4" mb="0" cb="0"/><line nr="699" mi="0" ci="4" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="744" mi="0" ci="4" mb="0" cb="0"/><line nr="759" mi="0" ci="4" mb="0" cb="0"/><line nr="771" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="818" mi="0" ci="4" mb="0" cb="0"/><line nr="838" mi="0" ci="4" mb="0" cb="0"/><line nr="849" mi="0" ci="4" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="0"/><line nr="863" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="930"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="156"/><counter type="COMPLEXITY" missed="1" covered="29"/><counter type="METHOD" missed="0" covered="26"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FormatFactory.java"/><sourcefile name="CompositeFormat.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlphabetConverter.java"><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="2"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="1" cb="1"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="2"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="11" mb="0" cb="2"/><line nr="265" mi="0" ci="11" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="2"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="2"/><line nr="322" mi="0" ci="11" mb="0" cb="2"/><line nr="323" mi="0" ci="3" mb="0" cb="2"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="2"/><line nr="329" mi="0" ci="3" mb="0" cb="2"/><line nr="330" mi="0" ci="11" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="6" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="2"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="6" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="6" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="8" mb="0" cb="2"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="7" mb="0" cb="2"/><line nr="390" mi="0" ci="12" mb="0" cb="0"/><line nr="393" mi="0" ci="8" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="2"/><line nr="397" mi="0" ci="16" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="2"/><line nr="420" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="2"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="2"/><line nr="431" mi="0" ci="8" mb="0" cb="0"/><line nr="433" mi="0" ci="9" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="2"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="2"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="2"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="11" mb="0" cb="2"/><line nr="460" mi="0" ci="10" mb="1" cb="3"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="18" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="672"/><counter type="BRANCH" missed="3" covered="65"/><counter type="LINE" missed="2" covered="143"/><counter type="COMPLEXITY" missed="3" covered="47"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharacterPredicates.java"><line nr="25" mi="0" ci="32" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="4"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="4"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="4"/><line nr="92" mi="0" ci="12" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="4"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="4"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="180"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="26"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="StrTokenizer.java"><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="9" mb="0" cb="0"/><line nr="226" mi="0" ci="9" mb="0" cb="0"/><line nr="229" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="2"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="1" cb="3"/><line nr="415" mi="0" ci="3" mb="0" cb="2"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="2"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="2"/><line nr="430" mi="0" ci="3" mb="0" cb="2"/><line nr="432" mi="0" ci="6" mb="0" cb="0"/><line nr="433" mi="0" ci="6" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="9" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="2"/><line nr="468" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="2"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="529" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="2" mb="0" cb="0"/><line nr="568" mi="0" ci="10" mb="0" cb="2"/><line nr="578" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="7" mb="0" cb="2"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="3" mb="0" cb="0"/><line nr="618" mi="0" ci="7" mb="0" cb="2"/><line nr="619" mi="0" ci="16" mb="0" cb="4"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="2"/><line nr="635" mi="0" ci="11" mb="0" cb="0"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="647" mi="0" ci="3" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="2"/><line nr="659" mi="0" ci="11" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="3" mb="0" cb="2"/><line nr="672" mi="0" ci="11" mb="0" cb="0"/><line nr="674" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="5" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="2"/><line nr="694" mi="0" ci="11" mb="0" cb="0"/><line nr="696" mi="0" ci="2" mb="0" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="2"/><line nr="718" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="7" mb="0" cb="0"/><line nr="720" mi="0" ci="6" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="0" cb="2"/><line nr="722" mi="0" ci="8" mb="0" cb="2"/><line nr="723" mi="0" ci="7" mb="1" cb="1"/><line nr="724" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="0" ci="4" mb="0" cb="0"/><line nr="727" mi="0" ci="1" mb="0" cb="0"/><line nr="730" mi="0" ci="3" mb="0" cb="2"/><line nr="731" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><line nr="736" mi="0" ci="8" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="2"/><line nr="738" mi="0" ci="4" mb="0" cb="0"/><line nr="739" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="8" mb="0" cb="0"/><line nr="744" mi="0" ci="2" mb="0" cb="2"/><line nr="745" mi="0" ci="12" mb="0" cb="0"/><line nr="747" mi="0" ci="10" mb="0" cb="0"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="769" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="6" mb="0" cb="2"/><line nr="771" mi="0" ci="2" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="0" cb="2"/><line nr="777" mi="0" ci="2" mb="0" cb="2"/><line nr="784" mi="0" ci="8" mb="0" cb="2"/><line nr="785" mi="0" ci="10" mb="0" cb="2"/><line nr="787" mi="0" ci="6" mb="0" cb="0"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="3" mb="0" cb="0"/><line nr="790" mi="0" ci="1" mb="0" cb="0"/><line nr="794" mi="0" ci="2" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="1" mb="0" cb="0"/><line nr="803" mi="0" ci="8" mb="0" cb="0"/><line nr="804" mi="0" ci="2" mb="0" cb="2"/><line nr="806" mi="0" ci="7" mb="0" cb="0"/><line nr="807" mi="0" ci="4" mb="0" cb="0"/><line nr="811" mi="0" ci="10" mb="0" cb="4"/><line nr="812" mi="0" ci="2" mb="0" cb="0"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="1" mb="0" cb="0"/><line nr="818" mi="0" ci="8" mb="0" cb="0"/><line nr="819" mi="0" ci="2" mb="0" cb="2"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="821" mi="0" ci="1" mb="0" cb="0"/><line nr="827" mi="0" ci="8" mb="0" cb="0"/><line nr="828" mi="0" ci="2" mb="0" cb="2"/><line nr="829" mi="0" ci="6" mb="0" cb="0"/><line nr="830" mi="0" ci="4" mb="0" cb="0"/><line nr="831" mi="0" ci="1" mb="0" cb="0"/><line nr="836" mi="0" ci="7" mb="0" cb="0"/><line nr="837" mi="0" ci="4" mb="0" cb="0"/><line nr="841" mi="0" ci="7" mb="0" cb="0"/><line nr="842" mi="0" ci="2" mb="0" cb="0"/><line nr="852" mi="0" ci="5" mb="0" cb="0"/><line nr="863" mi="0" ci="3" mb="0" cb="0"/><line nr="864" mi="0" ci="3" mb="0" cb="0"/><line nr="865" mi="0" ci="2" mb="0" cb="0"/><line nr="877" mi="0" ci="3" mb="0" cb="0"/><line nr="878" mi="0" ci="2" mb="0" cb="2"/><line nr="879" mi="0" ci="6" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="883" mi="0" ci="2" mb="0" cb="0"/><line nr="895" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="2" mb="0" cb="2"/><line nr="897" mi="0" ci="5" mb="0" cb="0"/><line nr="899" mi="0" ci="3" mb="0" cb="0"/><line nr="901" mi="0" ci="2" mb="0" cb="0"/><line nr="911" mi="0" ci="5" mb="0" cb="0"/><line nr="921" mi="0" ci="5" mb="0" cb="0"/><line nr="934" mi="0" ci="2" mb="0" cb="2"/><line nr="935" mi="0" ci="4" mb="0" cb="0"/><line nr="937" mi="0" ci="3" mb="0" cb="0"/><line nr="939" mi="0" ci="2" mb="0" cb="0"/><line nr="949" mi="0" ci="5" mb="0" cb="0"/><line nr="960" mi="0" ci="3" mb="0" cb="0"/><line nr="961" mi="0" ci="2" mb="0" cb="0"/><line nr="975" mi="0" ci="5" mb="0" cb="0"/><line nr="989" mi="0" ci="2" mb="0" cb="2"/><line nr="990" mi="0" ci="3" mb="0" cb="0"/><line nr="992" mi="0" ci="2" mb="0" cb="0"/><line nr="1003" mi="0" ci="3" mb="0" cb="0"/><line nr="1004" mi="0" ci="2" mb="0" cb="0"/><line nr="1018" mi="0" ci="5" mb="0" cb="0"/><line nr="1032" mi="0" ci="2" mb="0" cb="2"/><line nr="1033" mi="0" ci="3" mb="0" cb="0"/><line nr="1035" mi="0" ci="2" mb="0" cb="0"/><line nr="1049" mi="0" ci="2" mb="0" cb="2"/><line nr="1050" mi="0" ci="3" mb="0" cb="0"/><line nr="1052" mi="0" ci="2" mb="0" cb="0"/><line nr="1061" mi="0" ci="2" mb="0" cb="0"/><line nr="1062" mi="0" ci="4" mb="0" cb="0"/><line nr="1089" mi="0" ci="4" mb="0" cb="4"/><line nr="1090" mi="0" ci="2" mb="0" cb="0"/><line nr="1092" mi="0" ci="4" mb="0" cb="0"/><line nr="1093" mi="0" ci="4" mb="0" cb="0"/><line nr="1094" mi="0" ci="2" mb="0" cb="0"/><line nr="1097" mi="0" ci="5" mb="0" cb="4"/><line nr="1099" mi="0" ci="8" mb="0" cb="0"/><line nr="1102" mi="0" ci="3" mb="0" cb="2"/><line nr="1103" mi="0" ci="5" mb="0" cb="0"/><line nr="1106" mi="0" ci="2" mb="0" cb="0"/><line nr="1116" mi="0" ci="3" mb="0" cb="2"/><line nr="1117" mi="0" ci="2" mb="0" cb="0"/><line nr="1119" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="947"/><counter type="BRANCH" missed="2" covered="94"/><counter type="LINE" missed="1" covered="247"/><counter type="COMPLEXITY" missed="2" covered="111"/><counter type="METHOD" missed="0" covered="65"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Builder.java"/><sourcefile name="FormattableUtils.java"><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="6"/><line nr="94" mi="0" ci="12" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="4"/><line nr="102" mi="0" ci="2" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="2"/><line nr="111" mi="0" ci="9" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExtendedMessageFormat.java"><line nr="71" mi="2" ci="6" mb="1" cb="1"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="5" ci="9" mb="2" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="9" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="2"/><line nr="196" mi="0" ci="9" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="12" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="2"/><line nr="227" mi="0" ci="5" mb="0" cb="3"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="2"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="1" cb="1"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="1" cb="1"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="1" cb="1"/><line nr="257" mi="12" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="2"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="10" mb="0" cb="2"/><line nr="274" mi="0" ci="2" mb="0" cb="2"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="1" cb="3"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="1" cb="1"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="2"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="2"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="2"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="1" cb="1"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="2"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="7" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="2"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="8" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="2"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="8" mb="0" cb="0"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="2"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="4"/><line nr="385" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="11" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="2"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="5" mb="0" cb="2"/><line nr="434" mi="0" ci="5" mb="0" cb="4"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="2"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="12" mb="0" cb="0"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="12" mb="0" cb="4"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="1" cb="3"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="480" mi="0" ci="9" mb="0" cb="6"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="488" mi="0" ci="7" mb="0" cb="2"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="2"/><line nr="492" mi="0" ci="14" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="12" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="10" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="0"/><line nr="512" mi="0" ci="7" mb="0" cb="4"/><line nr="513" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="735"/><counter type="BRANCH" missed="10" covered="95"/><counter type="LINE" missed="5" covered="182"/><counter type="COMPLEXITY" missed="10" covered="67"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RandomStringGenerator.java"><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="15" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="2"/><line nr="188" mi="0" ci="16" mb="0" cb="2"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="2"/><line nr="248" mi="0" ci="16" mb="0" cb="2"/><line nr="249" mi="1" ci="10" mb="1" cb="1"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="1" ci="17" mb="1" cb="1"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="2"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="13" mb="0" cb="2"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="9" mb="0" cb="2"/><line nr="285" mi="0" ci="10" mb="0" cb="2"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="9" mb="0" cb="2"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="4"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="389" mi="0" ci="7" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="2"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="2"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="11" mb="0" cb="2"/><line nr="402" mi="0" ci="4" mb="0" cb="2"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="2"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="2"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="9" mb="0" cb="2"/><line nr="436" mi="0" ci="13" mb="0" cb="2"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="438" mi="0" ci="7" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="2"/><line nr="453" mi="0" ci="11" mb="0" cb="0"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="1" cb="1"/><line nr="468" mi="10" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="392"/><counter type="BRANCH" missed="3" covered="49"/><counter type="LINE" missed="1" covered="78"/><counter type="COMPLEXITY" missed="3" covered="36"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CharacterPredicate.java"/><sourcefile name="StrSubstitutor.java"><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="2"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="7" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="2" mb="0" cb="2"/><line nr="528" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="531" mi="0" ci="7" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="2"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="9" mb="0" cb="0"/><line nr="554" mi="0" ci="6" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="2" mb="0" cb="2"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="7" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="2"/><line nr="589" mi="0" ci="2" mb="0" cb="0"/><line nr="591" mi="0" ci="9" mb="0" cb="0"/><line nr="592" mi="0" ci="6" mb="0" cb="0"/><line nr="593" mi="0" ci="3" mb="0" cb="0"/><line nr="605" mi="0" ci="2" mb="0" cb="2"/><line nr="606" mi="0" ci="2" mb="0" cb="0"/><line nr="608" mi="0" ci="6" mb="0" cb="0"/><line nr="609" mi="0" ci="7" mb="0" cb="0"/><line nr="610" mi="0" ci="3" mb="0" cb="0"/><line nr="622" mi="0" ci="2" mb="0" cb="2"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="625" mi="0" ci="8" mb="0" cb="0"/><line nr="626" mi="0" ci="7" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="2"/><line nr="646" mi="0" ci="2" mb="0" cb="0"/><line nr="648" mi="0" ci="9" mb="0" cb="0"/><line nr="649" mi="0" ci="6" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="2"/><line nr="662" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="665" mi="0" ci="7" mb="0" cb="2"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="2"/><line nr="686" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="0" ci="9" mb="0" cb="0"/><line nr="689" mi="0" ci="6" mb="0" cb="2"/><line nr="690" mi="0" ci="7" mb="0" cb="0"/><line nr="692" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="2"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="0" ci="8" mb="0" cb="0"/><line nr="708" mi="0" ci="7" mb="0" cb="0"/><line nr="709" mi="0" ci="3" mb="0" cb="0"/><line nr="727" mi="0" ci="2" mb="0" cb="2"/><line nr="728" mi="0" ci="2" mb="0" cb="0"/><line nr="730" mi="0" ci="9" mb="0" cb="0"/><line nr="731" mi="0" ci="6" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="2" mb="0" cb="2"/><line nr="744" mi="0" ci="2" mb="0" cb="0"/><line nr="746" mi="0" ci="7" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="2"/><line nr="764" mi="0" ci="2" mb="0" cb="0"/><line nr="766" mi="0" ci="6" mb="0" cb="0"/><line nr="778" mi="0" ci="2" mb="0" cb="2"/><line nr="779" mi="0" ci="2" mb="0" cb="0"/><line nr="781" mi="0" ci="7" mb="0" cb="0"/><line nr="799" mi="0" ci="2" mb="0" cb="2"/><line nr="800" mi="0" ci="2" mb="0" cb="0"/><line nr="802" mi="0" ci="9" mb="0" cb="0"/><line nr="803" mi="0" ci="6" mb="0" cb="2"/><line nr="804" mi="0" ci="2" mb="0" cb="0"/><line nr="806" mi="0" ci="9" mb="0" cb="0"/><line nr="807" mi="0" ci="2" mb="0" cb="0"/><line nr="819" mi="0" ci="2" mb="0" cb="2"/><line nr="820" mi="0" ci="2" mb="0" cb="0"/><line nr="822" mi="0" ci="7" mb="0" cb="0"/><line nr="840" mi="0" ci="2" mb="0" cb="2"/><line nr="841" mi="0" ci="2" mb="0" cb="0"/><line nr="843" mi="0" ci="9" mb="0" cb="0"/><line nr="844" mi="0" ci="6" mb="0" cb="2"/><line nr="845" mi="0" ci="2" mb="0" cb="0"/><line nr="847" mi="0" ci="9" mb="0" cb="0"/><line nr="848" mi="0" ci="2" mb="0" cb="0"/><line nr="874" mi="0" ci="3" mb="0" cb="0"/><line nr="875" mi="0" ci="2" mb="0" cb="2"/><line nr="876" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="4" mb="0" cb="0"/><line nr="889" mi="0" ci="3" mb="0" cb="0"/><line nr="890" mi="0" ci="1" mb="0" cb="0"/><line nr="902" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="1" mb="0" cb="0"/><line nr="913" mi="0" ci="3" mb="0" cb="0"/><line nr="914" mi="0" ci="1" mb="0" cb="0"/><line nr="928" mi="0" ci="3" mb="0" cb="0"/><line nr="929" mi="0" ci="1" mb="0" cb="0"/><line nr="943" mi="0" ci="5" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="4"/><line nr="963" mi="0" ci="4" mb="0" cb="0"/><line nr="964" mi="0" ci="2" mb="0" cb="0"/><line nr="966" mi="0" ci="5" mb="0" cb="0"/><line nr="985" mi="0" ci="3" mb="0" cb="0"/><line nr="986" mi="0" ci="2" mb="0" cb="0"/><line nr="1001" mi="0" ci="5" mb="0" cb="0"/><line nr="1016" mi="0" ci="9" mb="0" cb="2"/><line nr="1017" mi="0" ci="5" mb="0" cb="0"/><line nr="1033" mi="0" ci="9" mb="0" cb="2"/><line nr="1034" mi="0" ci="3" mb="0" cb="0"/><line nr="1035" mi="0" ci="2" mb="0" cb="0"/><line nr="1044" mi="0" ci="3" mb="0" cb="0"/><line nr="1045" mi="0" ci="1" mb="0" cb="0"/><line nr="1059" mi="0" ci="5" mb="0" cb="0"/><line nr="1074" mi="0" ci="9" mb="0" cb="2"/><line nr="1075" mi="0" ci="5" mb="0" cb="0"/><line nr="1091" mi="0" ci="9" mb="0" cb="2"/><line nr="1092" mi="0" ci="3" mb="0" cb="0"/><line nr="1093" mi="0" ci="2" mb="0" cb="0"/><line nr="1113" mi="0" ci="11" mb="0" cb="2"/><line nr="1129" mi="0" ci="3" mb="0" cb="0"/><line nr="1130" mi="0" ci="3" mb="0" cb="0"/><line nr="1131" mi="0" ci="3" mb="0" cb="0"/><line nr="1132" mi="0" ci="3" mb="0" cb="0"/><line nr="1133" mi="0" ci="3" mb="0" cb="0"/><line nr="1134" mi="0" ci="3" mb="0" cb="0"/><line nr="1136" mi="0" ci="6" mb="0" cb="2"/><line nr="1137" mi="0" ci="2" mb="0" cb="0"/><line nr="1138" mi="0" ci="2" mb="0" cb="0"/><line nr="1139" mi="0" ci="3" mb="0" cb="0"/><line nr="1140" mi="0" ci="4" mb="0" cb="0"/><line nr="1141" mi="0" ci="2" mb="0" cb="0"/><line nr="1142" mi="0" ci="3" mb="0" cb="2"/><line nr="1143" mi="0" ci="7" mb="0" cb="0"/><line nr="1145" mi="0" ci="2" mb="0" cb="2"/><line nr="1146" mi="0" ci="2" mb="0" cb="0"/><line nr="1149" mi="0" ci="10" mb="0" cb="4"/><line nr="1151" mi="0" ci="3" mb="0" cb="2"/><line nr="1152" mi="0" ci="1" mb="0" cb="0"/><line nr="1153" mi="0" ci="1" mb="0" cb="0"/><line nr="1155" mi="0" ci="6" mb="0" cb="0"/><line nr="1156" mi="0" ci="3" mb="0" cb="0"/><line nr="1157" mi="0" ci="1" mb="0" cb="0"/><line nr="1158" mi="0" ci="2" mb="0" cb="0"/><line nr="1159" mi="0" ci="2" mb="0" cb="0"/><line nr="1162" mi="0" ci="2" mb="0" cb="0"/><line nr="1163" mi="0" ci="4" mb="0" cb="0"/><line nr="1164" mi="0" ci="2" mb="0" cb="0"/><line nr="1165" mi="0" ci="2" mb="0" cb="0"/><line nr="1166" mi="0" ci="3" mb="0" cb="2"/><line nr="1167" mi="0" ci="7" mb="0" cb="2"/><line nr="1168" mi="0" ci="2" mb="0" cb="2"/><line nr="1171" mi="0" ci="7" mb="0" cb="0"/><line nr="1173" mi="0" ci="1" mb="0" cb="0"/><line nr="1174" mi="0" ci="4" mb="0" cb="0"/><line nr="1175" mi="0" ci="1" mb="0" cb="0"/><line nr="1178" mi="0" ci="7" mb="0" cb="0"/><line nr="1180" mi="0" ci="2" mb="0" cb="2"/><line nr="1181" mi="0" ci="2" mb="0" cb="0"/><line nr="1184" mi="0" ci="2" mb="0" cb="2"/><line nr="1185" mi="0" ci="13" mb="0" cb="0"/><line nr="1188" mi="0" ci="2" mb="0" cb="2"/><line nr="1189" mi="0" ci="5" mb="0" cb="0"/><line nr="1190" mi="0" ci="7" mb="0" cb="0"/><line nr="1191" mi="0" ci="3" mb="0" cb="0"/><line nr="1193" mi="0" ci="4" mb="0" cb="0"/><line nr="1194" mi="0" ci="2" mb="0" cb="0"/><line nr="1196" mi="0" ci="2" mb="0" cb="0"/><line nr="1197" mi="0" ci="2" mb="0" cb="0"/><line nr="1199" mi="0" ci="2" mb="0" cb="2"/><line nr="1200" mi="0" ci="3" mb="0" cb="0"/><line nr="1201" mi="0" ci="2" mb="0" cb="0"/><line nr="1202" mi="0" ci="8" mb="0" cb="2"/><line nr="1205" mi="0" ci="8" mb="0" cb="2"/><line nr="1206" mi="0" ci="2" mb="0" cb="2"/><line nr="1210" mi="0" ci="1" mb="0" cb="0"/><line nr="1212" mi="0" ci="5" mb="0" cb="2"/><line nr="1213" mi="0" ci="5" mb="0" cb="0"/><line nr="1214" mi="0" ci="5" mb="0" cb="0"/><line nr="1215" mi="0" ci="6" mb="0" cb="0"/><line nr="1216" mi="0" ci="1" mb="0" cb="0"/><line nr="1222" mi="0" ci="2" mb="0" cb="2"/><line nr="1223" mi="0" ci="4" mb="0" cb="0"/><line nr="1224" mi="0" ci="9" mb="0" cb="0"/><line nr="1229" mi="0" ci="4" mb="0" cb="0"/><line nr="1230" mi="0" ci="4" mb="0" cb="0"/><line nr="1233" mi="0" ci="7" mb="0" cb="0"/><line nr="1235" mi="0" ci="2" mb="0" cb="2"/><line nr="1236" mi="0" ci="2" mb="0" cb="0"/><line nr="1238" mi="0" ci="2" mb="0" cb="2"/><line nr="1239" mi="0" ci="3" mb="0" cb="0"/><line nr="1240" mi="0" ci="6" mb="0" cb="0"/><line nr="1241" mi="0" ci="2" mb="0" cb="0"/><line nr="1242" mi="0" ci="2" mb="0" cb="0"/><line nr="1243" mi="0" ci="2" mb="0" cb="2"/><line nr="1244" mi="0" ci="7" mb="0" cb="0"/><line nr="1247" mi="0" ci="8" mb="0" cb="0"/><line nr="1249" mi="0" ci="4" mb="0" cb="0"/><line nr="1250" mi="0" ci="4" mb="0" cb="0"/><line nr="1251" mi="0" ci="4" mb="0" cb="0"/><line nr="1252" mi="0" ci="3" mb="0" cb="0"/><line nr="1257" mi="0" ci="2" mb="0" cb="0"/><line nr="1258" mi="0" ci="5" mb="0" cb="0"/><line nr="1259" mi="0" ci="1" mb="0" cb="0"/><line nr="1261" mi="0" ci="1" mb="0" cb="0"/><line nr="1262" mi="0" ci="5" mb="0" cb="0"/><line nr="1267" mi="0" ci="1" mb="0" cb="0"/><line nr="1268" mi="0" ci="2" mb="0" cb="2"/><line nr="1269" mi="0" ci="6" mb="0" cb="2"/><line nr="1271" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="1027"/><counter type="BRANCH" missed="0" covered="108"/><counter type="LINE" missed="1" covered="265"/><counter type="COMPLEXITY" missed="0" covered="112"/><counter type="METHOD" missed="0" covered="58"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WordUtils.java"><line nr="80" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="13" mb="0" cb="4"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="4"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="2"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="1" cb="3"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="16" mb="0" cb="2"/><line nr="281" mi="0" ci="3" mb="0" cb="2"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="12" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="4"/><line nr="302" mi="0" ci="2" mb="0" cb="2"/><line nr="303" mi="0" ci="12" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="0" cb="2"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="2"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="4"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="2"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="10" mb="0" cb="6"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="2"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="2" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="404" mi="16" ci="0" mb="2" cb="0"/><line nr="405" mi="3" ci="0" mb="2" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="2" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="8" ci="0" mb="2" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="2"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="2"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="4"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="2" mb="0" cb="2"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="5" mb="0" cb="0"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="7" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="2"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="546" mi="0" ci="5" mb="0" cb="2"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="549" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="2"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="5" mb="0" cb="0"/><line nr="557" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="613" mi="0" ci="6" mb="0" cb="0"/><line nr="695" mi="0" ci="7" mb="0" cb="0"/><line nr="795" mi="0" ci="2" mb="0" cb="2"/><line nr="796" mi="0" ci="2" mb="0" cb="0"/><line nr="798" mi="0" ci="2" mb="0" cb="2"/><line nr="799" mi="0" ci="2" mb="0" cb="0"/><line nr="801" mi="0" ci="3" mb="0" cb="2"/><line nr="802" mi="0" ci="2" mb="0" cb="0"/><line nr="804" mi="0" ci="3" mb="0" cb="2"/><line nr="805" mi="0" ci="2" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="809" mi="0" ci="2" mb="0" cb="0"/><line nr="810" mi="0" ci="7" mb="0" cb="0"/><line nr="811" mi="0" ci="2" mb="0" cb="0"/><line nr="813" mi="0" ci="3" mb="0" cb="2"/><line nr="814" mi="0" ci="2" mb="0" cb="0"/><line nr="815" mi="0" ci="13" mb="0" cb="0"/><line nr="816" mi="0" ci="4" mb="0" cb="0"/><line nr="817" mi="0" ci="3" mb="0" cb="2"/><line nr="818" mi="0" ci="3" mb="0" cb="2"/><line nr="819" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="2" mb="0" cb="2"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><line nr="822" mi="0" ci="1" mb="0" cb="0"/><line nr="824" mi="0" ci="1" mb="0" cb="0"/><line nr="826" mi="0" ci="5" mb="0" cb="0"/><line nr="830" mi="0" ci="5" mb="0" cb="2"/><line nr="831" mi="0" ci="1" mb="0" cb="0"/><line nr="834" mi="0" ci="3" mb="0" cb="2"/><line nr="835" mi="0" ci="6" mb="0" cb="0"/><line nr="838" mi="0" ci="3" mb="0" cb="2"/><line nr="840" mi="0" ci="6" mb="0" cb="0"/><line nr="841" mi="0" ci="4" mb="0" cb="0"/><line nr="842" mi="0" ci="5" mb="0" cb="0"/><line nr="845" mi="0" ci="2" mb="0" cb="2"/><line nr="846" mi="0" ci="2" mb="1" cb="1"/><line nr="847" mi="1" ci="0" mb="0" cb="0"/><line nr="850" mi="0" ci="8" mb="0" cb="0"/><line nr="851" mi="0" ci="4" mb="0" cb="0"/><line nr="852" mi="0" ci="4" mb="0" cb="0"/><line nr="853" mi="0" ci="3" mb="0" cb="0"/><line nr="856" mi="0" ci="8" mb="0" cb="0"/><line nr="857" mi="0" ci="3" mb="0" cb="2"/><line nr="858" mi="0" ci="6" mb="0" cb="0"/><line nr="859" mi="0" ci="7" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="2"/><line nr="863" mi="0" ci="4" mb="0" cb="4"/><line nr="864" mi="0" ci="1" mb="0" cb="0"/><line nr="866" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="4" mb="0" cb="0"/><line nr="868" mi="0" ci="5" mb="0" cb="0"/><line nr="870" mi="0" ci="4" mb="1" cb="3"/><line nr="871" mi="0" ci="1" mb="0" cb="0"/><line nr="873" mi="0" ci="7" mb="0" cb="0"/><line nr="874" mi="0" ci="2" mb="0" cb="0"/><line nr="875" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="1" mb="0" cb="0"/><line nr="880" mi="0" ci="5" mb="0" cb="4"/><line nr="881" mi="0" ci="1" mb="0" cb="0"/><line nr="885" mi="0" ci="7" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="898" mi="0" ci="2" mb="0" cb="0"/><line nr="899" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="749"/><counter type="BRANCH" missed="15" covered="121"/><counter type="LINE" missed="14" covered="192"/><counter type="COMPLEXITY" missed="11" covered="75"/><counter type="METHOD" missed="2" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StrBuilder.java"><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="18" mb="1" cb="9"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="11" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="2"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="1" cb="1"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="1" cb="1"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="2"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="2"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="11" mb="0" cb="0"/><line nr="321" mi="0" ci="11" mb="0" cb="0"/><line nr="322" mi="0" ci="11" mb="0" cb="0"/><line nr="323" mi="0" ci="12" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="326" mi="0" ci="11" mb="0" cb="0"/><line nr="327" mi="0" ci="11" mb="0" cb="0"/><line nr="328" mi="0" ci="11" mb="0" cb="0"/><line nr="329" mi="0" ci="11" mb="0" cb="0"/><line nr="330" mi="0" ci="11" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="11" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="2"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="2"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="4"/><line nr="384" mi="0" ci="12" mb="0" cb="0"/><line nr="386" mi="0" ci="8" mb="0" cb="4"/><line nr="387" mi="0" ci="12" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="2"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="7" mb="0" cb="0"/><line nr="393" mi="0" ci="6" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="2"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="1" cb="1"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="0"/><line nr="413" mi="0" ci="12" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="5" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="2"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="1" cb="1"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="5" mb="0" cb="4"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="7" mb="0" cb="4"/><line nr="440" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="14" mb="0" cb="0"/><line nr="445" mi="0" ci="6" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="7" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="2"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="2"/><line nr="465" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="2"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="1" cb="1"/><line nr="474" mi="5" ci="0" mb="0" cb="0"/><line nr="476" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="2"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="2"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="2"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="561" mi="0" ci="2" mb="0" cb="2"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="2"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="568" mi="0" ci="8" mb="0" cb="0"/><line nr="569" mi="0" ci="6" mb="0" cb="0"/><line nr="571" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="2"/><line nr="585" mi="0" ci="3" mb="0" cb="0"/><line nr="587" mi="0" ci="6" mb="0" cb="4"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="8" mb="0" cb="4"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="2"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="595" mi="0" ci="6" mb="0" cb="0"/><line nr="596" mi="0" ci="9" mb="0" cb="0"/><line nr="597" mi="0" ci="6" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="0" cb="0"/><line nr="610" mi="0" ci="2" mb="0" cb="2"/><line nr="611" mi="0" ci="3" mb="0" cb="0"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="2" mb="0" cb="2"/><line nr="615" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="6" mb="0" cb="0"/><line nr="617" mi="0" ci="7" mb="0" cb="0"/><line nr="618" mi="0" ci="6" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="2"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="6" mb="0" cb="4"/><line nr="637" mi="0" ci="5" mb="0" cb="0"/><line nr="639" mi="0" ci="8" mb="0" cb="4"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="2"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="6" mb="0" cb="0"/><line nr="645" mi="0" ci="9" mb="0" cb="0"/><line nr="646" mi="0" ci="6" mb="0" cb="0"/><line nr="648" mi="0" ci="2" mb="0" cb="0"/><line nr="660" mi="0" ci="6" mb="0" cb="0"/><line nr="671" mi="0" ci="2" mb="0" cb="2"/><line nr="672" mi="0" ci="3" mb="0" cb="0"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="0" ci="2" mb="0" cb="2"/><line nr="676" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="7" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="2"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="697" mi="0" ci="6" mb="0" cb="4"/><line nr="698" mi="0" ci="5" mb="0" cb="0"/><line nr="700" mi="0" ci="8" mb="0" cb="4"/><line nr="701" mi="0" ci="5" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="2"/><line nr="704" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="0" ci="6" mb="0" cb="0"/><line nr="706" mi="0" ci="9" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="709" mi="0" ci="2" mb="0" cb="0"/><line nr="720" mi="0" ci="2" mb="0" cb="2"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="723" mi="0" ci="3" mb="0" cb="0"/><line nr="724" mi="0" ci="2" mb="0" cb="2"/><line nr="725" mi="0" ci="3" mb="0" cb="0"/><line nr="726" mi="0" ci="6" mb="0" cb="0"/><line nr="727" mi="0" ci="7" mb="0" cb="0"/><line nr="728" mi="0" ci="6" mb="0" cb="0"/><line nr="730" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="2" mb="0" cb="2"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="746" mi="0" ci="6" mb="0" cb="4"/><line nr="747" mi="0" ci="5" mb="0" cb="0"/><line nr="749" mi="0" ci="8" mb="0" cb="4"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="2" mb="0" cb="2"/><line nr="753" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="6" mb="0" cb="0"/><line nr="755" mi="0" ci="9" mb="0" cb="0"/><line nr="756" mi="0" ci="6" mb="0" cb="0"/><line nr="758" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="2" mb="0" cb="2"/><line nr="771" mi="0" ci="4" mb="0" cb="0"/><line nr="773" mi="0" ci="2" mb="0" cb="0"/><line nr="785" mi="0" ci="2" mb="0" cb="2"/><line nr="786" mi="0" ci="3" mb="0" cb="2"/><line nr="787" mi="0" ci="6" mb="0" cb="0"/><line nr="790" mi="0" ci="2" mb="0" cb="0"/><line nr="809" mi="0" ci="5" mb="0" cb="4"/><line nr="810" mi="0" ci="16" mb="0" cb="2"/><line nr="811" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="7" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="2"/><line nr="844" mi="0" ci="7" mb="0" cb="0"/><line nr="845" mi="0" ci="8" mb="0" cb="2"/><line nr="846" mi="0" ci="2" mb="0" cb="2"/><line nr="847" mi="0" ci="2" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="3" mb="0" cb="2"/><line nr="851" mi="0" ci="11" mb="0" cb="0"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="7" mb="0" cb="2"/><line nr="855" mi="0" ci="8" mb="0" cb="0"/><line nr="857" mi="0" ci="10" mb="0" cb="0"/><line nr="859" mi="0" ci="6" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="0"/><line nr="875" mi="0" ci="7" mb="0" cb="0"/><line nr="890" mi="0" ci="2" mb="0" cb="2"/><line nr="891" mi="0" ci="7" mb="0" cb="0"/><line nr="892" mi="0" ci="8" mb="0" cb="2"/><line nr="893" mi="0" ci="2" mb="0" cb="2"/><line nr="894" mi="0" ci="2" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="897" mi="0" ci="3" mb="0" cb="2"/><line nr="898" mi="0" ci="9" mb="0" cb="0"/><line nr="900" mi="0" ci="4" mb="0" cb="0"/><line nr="901" mi="0" ci="8" mb="0" cb="0"/><line nr="902" mi="0" ci="7" mb="0" cb="2"/><line nr="903" mi="0" ci="10" mb="0" cb="0"/><line nr="906" mi="0" ci="6" mb="0" cb="0"/><line nr="908" mi="0" ci="2" mb="0" cb="0"/><line nr="918" mi="0" ci="5" mb="0" cb="0"/><line nr="928" mi="0" ci="5" mb="0" cb="0"/><line nr="939" mi="0" ci="5" mb="0" cb="0"/><line nr="952" mi="0" ci="7" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><line nr="972" mi="0" ci="5" mb="0" cb="0"/><line nr="982" mi="0" ci="5" mb="0" cb="0"/><line nr="992" mi="0" ci="5" mb="0" cb="0"/><line nr="1003" mi="0" ci="5" mb="0" cb="0"/><line nr="1014" mi="0" ci="5" mb="0" cb="0"/><line nr="1027" mi="0" ci="7" mb="0" cb="0"/><line nr="1038" mi="0" ci="5" mb="0" cb="0"/><line nr="1051" mi="0" ci="7" mb="0" cb="0"/><line nr="1063" mi="0" ci="6" mb="0" cb="0"/><line nr="1074" mi="0" ci="5" mb="0" cb="0"/><line nr="1087" mi="0" ci="7" mb="0" cb="0"/><line nr="1098" mi="0" ci="5" mb="0" cb="0"/><line nr="1111" mi="0" ci="7" mb="0" cb="0"/><line nr="1124" mi="0" ci="3" mb="0" cb="2"/><line nr="1125" mi="0" ci="4" mb="0" cb="0"/><line nr="1126" mi="0" ci="2" mb="0" cb="0"/><line nr="1128" mi="0" ci="5" mb="0" cb="0"/><line nr="1137" mi="0" ci="3" mb="0" cb="2"/><line nr="1138" mi="0" ci="2" mb="0" cb="0"/><line nr="1140" mi="0" ci="5" mb="0" cb="0"/><line nr="1151" mi="0" ci="2" mb="0" cb="2"/><line nr="1152" mi="0" ci="7" mb="0" cb="0"/><line nr="1153" mi="0" ci="7" mb="0" cb="2"/><line nr="1154" mi="0" ci="11" mb="0" cb="0"/><line nr="1157" mi="0" ci="2" mb="0" cb="0"/><line nr="1182" mi="0" ci="3" mb="0" cb="2"/><line nr="1183" mi="0" ci="4" mb="0" cb="0"/><line nr="1185" mi="0" ci="2" mb="0" cb="0"/><line nr="1199" mi="0" ci="3" mb="0" cb="2"/><line nr="1200" mi="0" ci="5" mb="0" cb="0"/><line nr="1202" mi="0" ci="4" mb="0" cb="0"/><line nr="1204" mi="0" ci="2" mb="0" cb="0"/><line nr="1230" mi="0" ci="2" mb="0" cb="2"/><line nr="1231" mi="0" ci="4" mb="0" cb="0"/><line nr="1233" mi="0" ci="2" mb="0" cb="0"/><line nr="1259" mi="0" ci="5" mb="0" cb="0"/><line nr="1286" mi="0" ci="4" mb="1" cb="3"/><line nr="1287" mi="0" ci="4" mb="0" cb="0"/><line nr="1289" mi="0" ci="2" mb="0" cb="0"/><line nr="1321" mi="0" ci="7" mb="0" cb="2"/><line nr="1322" mi="0" ci="2" mb="0" cb="2"/><line nr="1323" mi="0" ci="4" mb="0" cb="0"/><line nr="1325" mi="0" ci="2" mb="0" cb="0"/><line nr="1341" mi="0" ci="3" mb="0" cb="2"/><line nr="1342" mi="0" ci="9" mb="0" cb="0"/><line nr="1343" mi="0" ci="3" mb="0" cb="2"/><line nr="1344" mi="0" ci="10" mb="0" cb="0"/><line nr="1345" mi="0" ci="3" mb="1" cb="1"/><line nr="1346" mi="10" ci="0" mb="0" cb="0"/><line nr="1347" mi="0" ci="3" mb="1" cb="1"/><line nr="1348" mi="0" ci="10" mb="0" cb="0"/><line nr="1350" mi="4" ci="0" mb="0" cb="0"/><line nr="1352" mi="0" ci="1" mb="0" cb="0"/><line nr="1365" mi="0" ci="2" mb="0" cb="2"/><line nr="1366" mi="0" ci="6" mb="0" cb="0"/><line nr="1368" mi="0" ci="2" mb="0" cb="0"/><line nr="1382" mi="0" ci="2" mb="0" cb="2"/><line nr="1383" mi="0" ci="4" mb="0" cb="0"/><line nr="1384" mi="0" ci="3" mb="0" cb="2"/><line nr="1385" mi="0" ci="5" mb="0" cb="0"/><line nr="1386" mi="0" ci="3" mb="0" cb="2"/><line nr="1387" mi="0" ci="5" mb="0" cb="0"/><line nr="1391" mi="0" ci="2" mb="0" cb="0"/><line nr="1405" mi="0" ci="5" mb="0" cb="4"/><line nr="1406" mi="0" ci="4" mb="0" cb="0"/><line nr="1407" mi="0" ci="6" mb="0" cb="0"/><line nr="1408" mi="0" ci="8" mb="0" cb="2"/><line nr="1409" mi="0" ci="4" mb="0" cb="0"/><line nr="1410" mi="0" ci="6" mb="0" cb="0"/><line nr="1413" mi="0" ci="2" mb="0" cb="0"/><line nr="1440" mi="0" ci="5" mb="0" cb="0"/><line nr="1481" mi="0" ci="5" mb="0" cb="0"/><line nr="1509" mi="0" ci="5" mb="0" cb="0"/><line nr="1520" mi="0" ci="3" mb="0" cb="0"/><line nr="1529" mi="0" ci="4" mb="0" cb="0"/><line nr="1543" mi="0" ci="6" mb="0" cb="4"/><line nr="1544" mi="0" ci="5" mb="0" cb="0"/><line nr="1546" mi="0" ci="5" mb="0" cb="0"/><line nr="1563" mi="0" ci="3" mb="0" cb="0"/><line nr="1564" mi="0" ci="2" mb="0" cb="0"/><line nr="1574" mi="0" ci="3" mb="0" cb="0"/><line nr="1575" mi="0" ci="8" mb="0" cb="2"/><line nr="1576" mi="0" ci="5" mb="0" cb="2"/><line nr="1577" mi="0" ci="2" mb="0" cb="0"/><line nr="1580" mi="0" ci="2" mb="0" cb="0"/><line nr="1590" mi="0" ci="9" mb="0" cb="2"/><line nr="1606" mi="0" ci="9" mb="0" cb="2"/><line nr="1619" mi="0" ci="5" mb="0" cb="0"/><line nr="1620" mi="0" ci="4" mb="0" cb="0"/><line nr="1621" mi="0" ci="2" mb="0" cb="2"/><line nr="1622" mi="0" ci="5" mb="0" cb="0"/><line nr="1624" mi="0" ci="2" mb="0" cb="0"/><line nr="1634" mi="0" ci="8" mb="0" cb="2"/><line nr="1635" mi="0" ci="6" mb="0" cb="2"/><line nr="1636" mi="0" ci="2" mb="0" cb="0"/><line nr="1637" mi="0" ci="5" mb="0" cb="2"/><line nr="1638" mi="0" ci="6" mb="0" cb="2"/><line nr="1639" mi="0" ci="1" mb="0" cb="0"/><line nr="1642" mi="0" ci="4" mb="0" cb="0"/><line nr="1643" mi="0" ci="5" mb="0" cb="0"/><line nr="1644" mi="0" ci="4" mb="0" cb="0"/><line nr="1647" mi="0" ci="2" mb="0" cb="0"/><line nr="1657" mi="0" ci="7" mb="0" cb="2"/><line nr="1658" mi="0" ci="2" mb="0" cb="2"/><line nr="1659" mi="0" ci="5" mb="0" cb="0"/><line nr="1660" mi="0" ci="2" mb="0" cb="2"/><line nr="1661" mi="0" ci="7" mb="0" cb="0"/><line nr="1662" mi="0" ci="6" mb="0" cb="0"/><line nr="1665" mi="0" ci="2" mb="0" cb="0"/><line nr="1680" mi="0" ci="9" mb="0" cb="0"/><line nr="1693" mi="0" ci="6" mb="0" cb="4"/><line nr="1694" mi="0" ci="5" mb="0" cb="0"/><line nr="1696" mi="0" ci="7" mb="0" cb="0"/><line nr="1697" mi="0" ci="2" mb="0" cb="0"/><line nr="1707" mi="0" ci="8" mb="0" cb="2"/><line nr="1708" mi="0" ci="6" mb="0" cb="2"/><line nr="1709" mi="0" ci="7" mb="0" cb="0"/><line nr="1710" mi="0" ci="1" mb="0" cb="0"/><line nr="1713" mi="0" ci="2" mb="0" cb="0"/><line nr="1723" mi="0" ci="7" mb="0" cb="2"/><line nr="1724" mi="0" ci="2" mb="0" cb="2"/><line nr="1725" mi="0" ci="5" mb="0" cb="0"/><line nr="1726" mi="0" ci="2" mb="0" cb="2"/><line nr="1727" mi="0" ci="7" mb="0" cb="0"/><line nr="1730" mi="0" ci="2" mb="0" cb="0"/><line nr="1745" mi="0" ci="9" mb="0" cb="0"/><line nr="1757" mi="0" ci="11" mb="0" cb="0"/><line nr="1758" mi="0" ci="6" mb="0" cb="0"/><line nr="1759" mi="0" ci="1" mb="0" cb="0"/><line nr="1771" mi="0" ci="2" mb="0" cb="2"/><line nr="1772" mi="0" ci="2" mb="0" cb="0"/><line nr="1774" mi="0" ci="3" mb="0" cb="0"/><line nr="1775" mi="0" ci="2" mb="0" cb="2"/><line nr="1776" mi="0" ci="2" mb="0" cb="0"/><line nr="1778" mi="0" ci="4" mb="0" cb="2"/><line nr="1779" mi="0" ci="2" mb="0" cb="0"/><line nr="1781" mi="0" ci="5" mb="0" cb="0"/><line nr="1782" mi="0" ci="8" mb="0" cb="2"/><line nr="1783" mi="0" ci="8" mb="0" cb="2"/><line nr="1784" mi="0" ci="2" mb="0" cb="0"/><line nr="1787" mi="0" ci="2" mb="0" cb="0"/><line nr="1797" mi="0" ci="5" mb="0" cb="2"/><line nr="1798" mi="0" ci="3" mb="0" cb="0"/><line nr="1799" mi="0" ci="6" mb="0" cb="0"/><line nr="1800" mi="0" ci="8" mb="0" cb="0"/><line nr="1802" mi="0" ci="2" mb="0" cb="0"/><line nr="1814" mi="0" ci="7" mb="0" cb="2"/><line nr="1815" mi="0" ci="5" mb="0" cb="2"/><line nr="1826" mi="0" ci="3" mb="0" cb="2"/><line nr="1827" mi="0" ci="2" mb="0" cb="0"/><line nr="1829" mi="0" ci="2" mb="0" cb="2"/><line nr="1830" mi="0" ci="2" mb="0" cb="0"/><line nr="1832" mi="0" ci="5" mb="0" cb="2"/><line nr="1833" mi="0" ci="2" mb="0" cb="0"/><line nr="1835" mi="0" ci="3" mb="0" cb="0"/><line nr="1836" mi="0" ci="3" mb="0" cb="0"/><line nr="1837" mi="0" ci="9" mb="0" cb="2"/><line nr="1838" mi="0" ci="7" mb="0" cb="2"/><line nr="1839" mi="0" ci="2" mb="0" cb="0"/><line nr="1842" mi="0" ci="2" mb="0" cb="0"/><line nr="1853" mi="0" ci="3" mb="0" cb="2"/><line nr="1854" mi="0" ci="2" mb="0" cb="0"/><line nr="1856" mi="0" ci="5" mb="0" cb="2"/><line nr="1857" mi="0" ci="2" mb="0" cb="0"/><line nr="1859" mi="0" ci="3" mb="0" cb="0"/><line nr="1860" mi="0" ci="3" mb="0" cb="0"/><line nr="1861" mi="0" ci="9" mb="0" cb="2"/><line nr="1862" mi="0" ci="4" mb="0" cb="0"/><line nr="1863" mi="0" ci="4" mb="0" cb="0"/><line nr="1864" mi="0" ci="8" mb="1" cb="3"/><line nr="1865" mi="2" ci="0" mb="0" cb="0"/><line nr="1868" mi="0" ci="2" mb="0" cb="0"/><line nr="1878" mi="0" ci="3" mb="0" cb="0"/><line nr="1879" mi="0" ci="6" mb="0" cb="4"/><line nr="1880" mi="0" ci="3" mb="0" cb="0"/><line nr="1882" mi="0" ci="7" mb="0" cb="0"/><line nr="1883" mi="0" ci="2" mb="0" cb="0"/><line nr="1900" mi="0" ci="2" mb="0" cb="2"/><line nr="1901" mi="0" ci="5" mb="0" cb="0"/><line nr="1903" mi="0" ci="6" mb="0" cb="4"/><line nr="1904" mi="0" ci="5" mb="0" cb="0"/><line nr="1906" mi="0" ci="3" mb="0" cb="2"/><line nr="1907" mi="0" ci="5" mb="0" cb="0"/><line nr="1909" mi="0" ci="9" mb="0" cb="0"/><line nr="1910" mi="0" ci="1" mb="0" cb="0"/><line nr="1918" mi="0" ci="3" mb="0" cb="0"/><line nr="1927" mi="0" ci="3" mb="0" cb="0"/><line nr="1937" mi="0" ci="3" mb="0" cb="0"/><line nr="1938" mi="0" ci="2" mb="0" cb="0"/><line nr="1939" mi="0" ci="9" mb="0" cb="2"/><line nr="1940" mi="0" ci="8" mb="0" cb="0"/><line nr="1942" mi="0" ci="2" mb="0" cb="0"/><line nr="1952" mi="0" ci="5" mb="0" cb="0"/><line nr="1963" mi="0" ci="4" mb="0" cb="0"/><line nr="1964" mi="0" ci="4" mb="0" cb="2"/><line nr="1965" mi="0" ci="2" mb="0" cb="0"/><line nr="1967" mi="0" ci="3" mb="0" cb="0"/><line nr="1968" mi="0" ci="8" mb="0" cb="2"/><line nr="1969" mi="0" ci="5" mb="0" cb="2"/><line nr="1970" mi="0" ci="2" mb="0" cb="0"/><line nr="1973" mi="0" ci="2" mb="0" cb="0"/><line nr="1986" mi="0" ci="5" mb="0" cb="0"/><line nr="2001" mi="0" ci="4" mb="0" cb="0"/><line nr="2002" mi="0" ci="6" mb="0" cb="4"/><line nr="2003" mi="0" ci="2" mb="0" cb="0"/><line nr="2005" mi="0" ci="3" mb="0" cb="0"/><line nr="2006" mi="0" ci="3" mb="0" cb="2"/><line nr="2007" mi="0" ci="7" mb="0" cb="0"/><line nr="2009" mi="0" ci="2" mb="0" cb="2"/><line nr="2010" mi="0" ci="2" mb="0" cb="0"/><line nr="2012" mi="0" ci="4" mb="0" cb="2"/><line nr="2013" mi="0" ci="2" mb="0" cb="0"/><line nr="2015" mi="0" ci="3" mb="0" cb="0"/><line nr="2016" mi="0" ci="7" mb="0" cb="0"/><line nr="2018" mi="0" ci="7" mb="0" cb="2"/><line nr="2019" mi="0" ci="7" mb="0" cb="2"/><line nr="2020" mi="0" ci="9" mb="0" cb="2"/><line nr="2021" mi="0" ci="1" mb="0" cb="0"/><line nr="2024" mi="0" ci="2" mb="0" cb="0"/><line nr="2026" mi="0" ci="2" mb="0" cb="0"/><line nr="2041" mi="0" ci="5" mb="0" cb="0"/><line nr="2058" mi="0" ci="4" mb="0" cb="0"/><line nr="2059" mi="0" ci="6" mb="0" cb="4"/><line nr="2060" mi="0" ci="2" mb="0" cb="0"/><line nr="2062" mi="0" ci="3" mb="0" cb="0"/><line nr="2063" mi="0" ci="3" mb="0" cb="0"/><line nr="2064" mi="0" ci="7" mb="0" cb="2"/><line nr="2065" mi="0" ci="7" mb="0" cb="2"/><line nr="2066" mi="0" ci="2" mb="0" cb="0"/><line nr="2069" mi="0" ci="2" mb="0" cb="0"/><line nr="2081" mi="0" ci="3" mb="0" cb="0"/><line nr="2082" mi="0" ci="2" mb="0" cb="2"/><line nr="2083" mi="0" ci="7" mb="0" cb="0"/><line nr="2084" mi="0" ci="13" mb="0" cb="0"/><line nr="2085" mi="0" ci="6" mb="0" cb="0"/><line nr="2086" mi="0" ci="6" mb="0" cb="0"/><line nr="2087" mi="0" ci="6" mb="0" cb="0"/><line nr="2088" mi="0" ci="5" mb="0" cb="0"/><line nr="2089" mi="0" ci="7" mb="0" cb="0"/><line nr="2091" mi="0" ci="7" mb="0" cb="0"/><line nr="2092" mi="0" ci="13" mb="0" cb="0"/><line nr="2093" mi="0" ci="6" mb="0" cb="0"/><line nr="2094" mi="0" ci="6" mb="0" cb="0"/><line nr="2095" mi="0" ci="6" mb="0" cb="0"/><line nr="2096" mi="0" ci="6" mb="0" cb="0"/><line nr="2097" mi="0" ci="5" mb="0" cb="0"/><line nr="2098" mi="0" ci="6" mb="0" cb="0"/><line nr="2100" mi="0" ci="2" mb="0" cb="0"/><line nr="2112" mi="0" ci="3" mb="0" cb="0"/><line nr="2113" mi="0" ci="7" mb="0" cb="0"/><line nr="2114" mi="0" ci="13" mb="0" cb="0"/><line nr="2115" mi="0" ci="5" mb="0" cb="0"/><line nr="2116" mi="0" ci="6" mb="0" cb="0"/><line nr="2117" mi="0" ci="2" mb="0" cb="0"/><line nr="2130" mi="0" ci="3" mb="0" cb="0"/><line nr="2131" mi="0" ci="2" mb="0" cb="2"/><line nr="2132" mi="0" ci="6" mb="0" cb="0"/><line nr="2134" mi="0" ci="3" mb="0" cb="0"/><line nr="2135" mi="0" ci="2" mb="0" cb="2"/><line nr="2136" mi="0" ci="7" mb="0" cb="0"/><line nr="2137" mi="0" ci="13" mb="0" cb="0"/><line nr="2138" mi="0" ci="7" mb="0" cb="0"/><line nr="2139" mi="0" ci="6" mb="0" cb="0"/><line nr="2141" mi="0" ci="2" mb="0" cb="0"/><line nr="2156" mi="0" ci="3" mb="0" cb="0"/><line nr="2157" mi="0" ci="2" mb="0" cb="2"/><line nr="2158" mi="0" ci="6" mb="0" cb="0"/><line nr="2160" mi="0" ci="6" mb="0" cb="4"/><line nr="2161" mi="0" ci="12" mb="0" cb="0"/><line nr="2163" mi="0" ci="8" mb="0" cb="4"/><line nr="2164" mi="0" ci="12" mb="0" cb="0"/><line nr="2166" mi="0" ci="2" mb="0" cb="2"/><line nr="2167" mi="0" ci="7" mb="0" cb="0"/><line nr="2168" mi="0" ci="13" mb="0" cb="0"/><line nr="2169" mi="0" ci="7" mb="0" cb="0"/><line nr="2170" mi="0" ci="6" mb="0" cb="0"/><line nr="2172" mi="0" ci="2" mb="0" cb="0"/><line nr="2184" mi="0" ci="6" mb="0" cb="0"/><line nr="2196" mi="0" ci="6" mb="0" cb="0"/><line nr="2208" mi="6" ci="0" mb="0" cb="0"/><line nr="2220" mi="0" ci="6" mb="0" cb="0"/><line nr="2233" mi="0" ci="2" mb="0" cb="2"/><line nr="2234" mi="0" ci="6" mb="0" cb="0"/><line nr="2236" mi="0" ci="6" mb="0" cb="0"/><line nr="2249" mi="0" ci="3" mb="0" cb="0"/><line nr="2250" mi="0" ci="2" mb="0" cb="2"/><line nr="2251" mi="0" ci="3" mb="0" cb="0"/><line nr="2253" mi="0" ci="2" mb="0" cb="2"/><line nr="2254" mi="0" ci="3" mb="0" cb="0"/><line nr="2255" mi="0" ci="2" mb="1" cb="1"/><line nr="2256" mi="0" ci="5" mb="0" cb="0"/><line nr="2257" mi="0" ci="4" mb="0" cb="0"/><line nr="2258" mi="0" ci="13" mb="0" cb="0"/><line nr="2259" mi="0" ci="3" mb="0" cb="0"/><line nr="2260" mi="0" ci="7" mb="0" cb="0"/><line nr="2263" mi="0" ci="2" mb="0" cb="0"/><line nr="2276" mi="0" ci="7" mb="0" cb="2"/><line nr="2290" mi="0" ci="7" mb="0" cb="2"/><line nr="2300" mi="0" ci="8" mb="0" cb="0"/><line nr="2311" mi="0" ci="11" mb="0" cb="2"/><line nr="2312" mi="0" ci="2" mb="0" cb="2"/><line nr="2313" mi="0" ci="2" mb="0" cb="0"/><line nr="2315" mi="0" ci="6" mb="0" cb="2"/><line nr="2316" mi="0" ci="6" mb="0" cb="2"/><line nr="2317" mi="0" ci="2" mb="0" cb="0"/><line nr="2320" mi="0" ci="2" mb="0" cb="0"/><line nr="2333" mi="0" ci="8" mb="0" cb="0"/><line nr="2348" mi="0" ci="11" mb="0" cb="2"/><line nr="2349" mi="0" ci="4" mb="0" cb="4"/><line nr="2350" mi="0" ci="2" mb="0" cb="0"/><line nr="2352" mi="0" ci="3" mb="0" cb="0"/><line nr="2353" mi="0" ci="6" mb="0" cb="4"/><line nr="2354" mi="0" ci="3" mb="0" cb="2"/><line nr="2355" mi="0" ci="7" mb="0" cb="0"/><line nr="2359" mi="0" ci="11" mb="0" cb="2"/><line nr="2360" mi="0" ci="7" mb="0" cb="2"/><line nr="2361" mi="0" ci="10" mb="0" cb="2"/><line nr="2362" mi="0" ci="1" mb="0" cb="0"/><line nr="2365" mi="0" ci="2" mb="0" cb="0"/><line nr="2368" mi="0" ci="2" mb="0" cb="2"/><line nr="2369" mi="0" ci="2" mb="0" cb="0"/><line nr="2371" mi="0" ci="2" mb="0" cb="0"/><line nr="2386" mi="0" ci="6" mb="0" cb="0"/><line nr="2403" mi="0" ci="11" mb="0" cb="2"/><line nr="2404" mi="0" ci="4" mb="0" cb="4"/><line nr="2405" mi="0" ci="2" mb="0" cb="0"/><line nr="2407" mi="0" ci="3" mb="0" cb="0"/><line nr="2408" mi="0" ci="4" mb="0" cb="0"/><line nr="2409" mi="0" ci="6" mb="0" cb="2"/><line nr="2410" mi="0" ci="7" mb="0" cb="2"/><line nr="2411" mi="0" ci="2" mb="0" cb="0"/><line nr="2414" mi="0" ci="2" mb="0" cb="0"/><line nr="2431" mi="0" ci="2" mb="0" cb="2"/><line nr="2432" mi="0" ci="2" mb="0" cb="0"/><line nr="2434" mi="0" ci="4" mb="0" cb="2"/><line nr="2435" mi="0" ci="9" mb="0" cb="0"/><line nr="2437" mi="0" ci="8" mb="0" cb="0"/><line nr="2447" mi="0" ci="3" mb="0" cb="0"/><line nr="2468" mi="0" ci="2" mb="0" cb="2"/><line nr="2469" mi="0" ci="2" mb="0" cb="0"/><line nr="2471" mi="0" ci="6" mb="0" cb="4"/><line nr="2472" mi="0" ci="2" mb="0" cb="0"/><line nr="2474" mi="0" ci="6" mb="0" cb="2"/><line nr="2475" mi="0" ci="11" mb="0" cb="0"/><line nr="2477" mi="0" ci="8" mb="0" cb="0"/><line nr="2486" mi="0" ci="6" mb="1" cb="1"/><line nr="2487" mi="0" ci="3" mb="0" cb="0"/><line nr="2488" mi="0" ci="5" mb="0" cb="0"/><line nr="2489" mi="0" ci="8" mb="0" cb="0"/><line nr="2491" mi="0" ci="2" mb="0" cb="0"/><line nr="2505" mi="0" ci="3" mb="0" cb="0"/><line nr="2506" mi="0" ci="3" mb="0" cb="2"/><line nr="2507" mi="0" ci="3" mb="0" cb="0"/><line nr="2508" mi="0" ci="7" mb="0" cb="0"/><line nr="2510" mi="0" ci="16" mb="0" cb="2"/><line nr="2511" mi="0" ci="6" mb="0" cb="0"/><line nr="2512" mi="0" ci="8" mb="0" cb="0"/><line nr="2514" mi="0" ci="4" mb="0" cb="2"/><line nr="2515" mi="0" ci="3" mb="0" cb="0"/><line nr="2516" mi="0" ci="3" mb="0" cb="0"/><line nr="2517" mi="0" ci="7" mb="0" cb="0"/><line nr="2518" mi="0" ci="8" mb="0" cb="0"/><line nr="2519" mi="0" ci="6" mb="0" cb="0"/><line nr="2520" mi="0" ci="1" mb="0" cb="0"/><line nr="2522" mi="0" ci="7" mb="0" cb="0"/><line nr="2523" mi="0" ci="12" mb="0" cb="0"/><line nr="2524" mi="0" ci="4" mb="0" cb="0"/><line nr="2525" mi="0" ci="3" mb="0" cb="2"/><line nr="2526" mi="0" ci="1" mb="0" cb="0"/><line nr="2528" mi="0" ci="6" mb="0" cb="0"/><line nr="2529" mi="0" ci="1" mb="0" cb="0"/><line nr="2531" mi="0" ci="5" mb="0" cb="0"/><line nr="2546" mi="0" ci="5" mb="0" cb="0"/><line nr="2547" mi="0" ci="7" mb="0" cb="2"/><line nr="2548" mi="0" ci="9" mb="0" cb="0"/><line nr="2549" mi="0" ci="2" mb="0" cb="0"/><line nr="2572" mi="0" ci="5" mb="0" cb="0"/><line nr="2573" mi="0" ci="8" mb="0" cb="0"/><line nr="2585" mi="0" ci="3" mb="0" cb="2"/><line nr="2586" mi="0" ci="8" mb="0" cb="2"/><line nr="2587" mi="0" ci="6" mb="0" cb="2"/><line nr="2588" mi="0" ci="5" mb="0" cb="0"/><line nr="2592" mi="0" ci="2" mb="0" cb="0"/><line nr="2603" mi="0" ci="7" mb="0" cb="2"/><line nr="2604" mi="0" ci="2" mb="0" cb="2"/><line nr="2605" mi="0" ci="7" mb="0" cb="2"/><line nr="2606" mi="0" ci="5" mb="0" cb="0"/><line nr="2607" mi="0" ci="2" mb="0" cb="2"/><line nr="2608" mi="0" ci="9" mb="0" cb="0"/><line nr="2609" mi="0" ci="8" mb="0" cb="0"/><line nr="2612" mi="0" ci="2" mb="0" cb="0"/><line nr="2628" mi="0" ci="9" mb="0" cb="0"/><line nr="2640" mi="0" ci="3" mb="0" cb="2"/><line nr="2641" mi="0" ci="8" mb="0" cb="2"/><line nr="2642" mi="0" ci="6" mb="0" cb="2"/><line nr="2643" mi="0" ci="5" mb="0" cb="0"/><line nr="2644" mi="0" ci="1" mb="0" cb="0"/><line nr="2648" mi="0" ci="2" mb="0" cb="0"/><line nr="2659" mi="0" ci="7" mb="0" cb="2"/><line nr="2660" mi="0" ci="2" mb="0" cb="2"/><line nr="2661" mi="0" ci="5" mb="0" cb="0"/><line nr="2662" mi="0" ci="2" mb="0" cb="2"/><line nr="2663" mi="0" ci="7" mb="0" cb="2"/><line nr="2664" mi="0" ci="9" mb="0" cb="0"/><line nr="2667" mi="0" ci="2" mb="0" cb="0"/><line nr="2683" mi="0" ci="9" mb="0" cb="0"/><line nr="2701" mi="0" ci="7" mb="0" cb="0"/><line nr="2702" mi="0" ci="3" mb="0" cb="2"/><line nr="2703" mi="0" ci="4" mb="0" cb="0"/><line nr="2704" mi="0" ci="13" mb="0" cb="0"/><line nr="2705" mi="0" ci="3" mb="0" cb="0"/><line nr="2707" mi="0" ci="2" mb="0" cb="2"/><line nr="2708" mi="0" ci="7" mb="0" cb="0"/><line nr="2710" mi="0" ci="1" mb="0" cb="0"/><line nr="2731" mi="0" ci="5" mb="0" cb="4"/><line nr="2732" mi="0" ci="2" mb="0" cb="0"/><line nr="2734" mi="0" ci="7" mb="0" cb="2"/><line nr="2735" mi="0" ci="9" mb="0" cb="4"/><line nr="2736" mi="0" ci="3" mb="0" cb="0"/><line nr="2737" mi="0" ci="7" mb="0" cb="0"/><line nr="2738" mi="0" ci="2" mb="0" cb="2"/><line nr="2739" mi="0" ci="9" mb="0" cb="0"/><line nr="2740" mi="0" ci="6" mb="0" cb="0"/><line nr="2741" mi="0" ci="6" mb="0" cb="0"/><line nr="2742" mi="0" ci="2" mb="0" cb="2"/><line nr="2743" mi="0" ci="1" mb="0" cb="0"/><line nr="2747" mi="0" ci="2" mb="0" cb="0"/><line nr="2756" mi="0" ci="3" mb="0" cb="2"/><line nr="2757" mi="0" ci="2" mb="0" cb="0"/><line nr="2760" mi="0" ci="5" mb="0" cb="0"/><line nr="2761" mi="0" ci="3" mb="0" cb="0"/><line nr="2762" mi="0" ci="13" mb="0" cb="2"/><line nr="2763" mi="0" ci="4" mb="0" cb="0"/><line nr="2764" mi="0" ci="6" mb="0" cb="0"/><line nr="2765" mi="0" ci="4" mb="0" cb="0"/><line nr="2767" mi="0" ci="2" mb="0" cb="0"/><line nr="2784" mi="0" ci="2" mb="0" cb="2"/><line nr="2785" mi="0" ci="2" mb="0" cb="0"/><line nr="2787" mi="0" ci="4" mb="0" cb="2"/><line nr="2788" mi="0" ci="9" mb="0" cb="0"/><line nr="2790" mi="0" ci="11" mb="0" cb="0"/><line nr="2804" mi="0" ci="6" mb="0" cb="4"/><line nr="2805" mi="0" ci="5" mb="0" cb="0"/><line nr="2807" mi="0" ci="5" mb="0" cb="0"/><line nr="2808" mi="0" ci="2" mb="0" cb="0"/><line nr="2820" mi="0" ci="2" mb="0" cb="2"/><line nr="2821" mi="0" ci="5" mb="0" cb="0"/><line nr="2823" mi="0" ci="4" mb="0" cb="2"/><line nr="2824" mi="0" ci="4" mb="0" cb="0"/><line nr="2825" mi="0" ci="4" mb="0" cb="2"/><line nr="2826" mi="0" ci="4" mb="0" cb="0"/><line nr="2827" mi="0" ci="3" mb="0" cb="0"/><line nr="2828" mi="0" ci="3" mb="0" cb="0"/><line nr="2829" mi="0" ci="7" mb="0" cb="2"/><line nr="2830" mi="0" ci="5" mb="0" cb="0"/><line nr="2833" mi="0" ci="2" mb="0" cb="0"/><line nr="2843" mi="0" ci="3" mb="0" cb="0"/><line nr="2844" mi="0" ci="2" mb="0" cb="0"/><line nr="2854" mi="0" ci="5" mb="0" cb="4"/><line nr="2855" mi="0" ci="2" mb="0" cb="0"/><line nr="2857" mi="0" ci="3" mb="0" cb="0"/><line nr="2858" mi="0" ci="2" mb="0" cb="0"/><line nr="2871" mi="0" ci="3" mb="0" cb="0"/><line nr="2884" mi="0" ci="2" mb="0" cb="2"/><line nr="2885" mi="0" ci="2" mb="0" cb="0"/><line nr="2887" mi="0" ci="3" mb="0" cb="0"/><line nr="2888" mi="0" ci="2" mb="0" cb="2"/><line nr="2889" mi="0" ci="2" mb="0" cb="0"/><line nr="2891" mi="0" ci="4" mb="0" cb="2"/><line nr="2892" mi="0" ci="2" mb="0" cb="0"/><line nr="2894" mi="0" ci="7" mb="0" cb="2"/><line nr="2895" mi="0" ci="8" mb="0" cb="2"/><line nr="2896" mi="0" ci="2" mb="0" cb="0"/><line nr="2899" mi="0" ci="2" mb="0" cb="0"/><line nr="2907" mi="0" ci="2" mb="0" cb="2"/><line nr="2908" mi="0" ci="5" mb="0" cb="0"/><line nr="2910" mi="0" ci="4" mb="0" cb="2"/><line nr="2911" mi="0" ci="5" mb="0" cb="0"/><line nr="2913" mi="0" ci="3" mb="0" cb="2"/><line nr="2914" mi="0" ci="7" mb="0" cb="0"/><line nr="2916" mi="0" ci="5" mb="0" cb="0"/><line nr="2927" mi="0" ci="6" mb="0" cb="0"/><line nr="2944" mi="0" ci="5" mb="0" cb="0"/><line nr="2945" mi="0" ci="10" mb="0" cb="0"/><line nr="2954" mi="0" ci="11" mb="0" cb="2"/><line nr="2968" mi="0" ci="5" mb="0" cb="0"/><line nr="2969" mi="0" ci="4" mb="0" cb="0"/><line nr="2970" mi="0" ci="2" mb="0" cb="2"/><line nr="2971" mi="0" ci="2" mb="0" cb="0"/><line nr="2973" mi="0" ci="3" mb="0" cb="0"/><line nr="2974" mi="0" ci="7" mb="0" cb="0"/><line nr="2975" mi="0" ci="2" mb="0" cb="0"/><line nr="2990" mi="0" ci="9" mb="0" cb="0"/><line nr="3000" mi="0" ci="12" mb="0" cb="0"/><line nr="3010" mi="0" ci="12" mb="0" cb="0"/><line nr="3020" mi="0" ci="3" mb="0" cb="2"/><line nr="3021" mi="0" ci="2" mb="0" cb="0"/><line nr="3023" mi="0" ci="3" mb="0" cb="0"/><line nr="3024" mi="0" ci="3" mb="0" cb="0"/><line nr="3025" mi="0" ci="2" mb="0" cb="0"/><line nr="3026" mi="0" ci="8" mb="0" cb="4"/><line nr="3027" mi="0" ci="2" mb="0" cb="0"/><line nr="3029" mi="0" ci="10" mb="0" cb="4"/><line nr="3030" mi="0" ci="2" mb="0" cb="0"/><line nr="3032" mi="0" ci="4" mb="0" cb="2"/><line nr="3033" mi="0" ci="6" mb="0" cb="0"/><line nr="3035" mi="0" ci="2" mb="0" cb="2"/><line nr="3036" mi="0" ci="5" mb="0" cb="0"/><line nr="3038" mi="0" ci="2" mb="0" cb="0"/><line nr="3048" mi="0" ci="6" mb="0" cb="4"/><line nr="3049" mi="0" ci="5" mb="0" cb="0"/><line nr="3051" mi="0" ci="1" mb="0" cb="0"/><line nr="3063" mi="0" ci="2" mb="0" cb="2"/><line nr="3064" mi="0" ci="5" mb="0" cb="0"/><line nr="3066" mi="0" ci="4" mb="0" cb="2"/><line nr="3067" mi="0" ci="3" mb="0" cb="0"/><line nr="3069" mi="0" ci="3" mb="0" cb="2"/><line nr="3070" mi="0" ci="5" mb="0" cb="0"/><line nr="3072" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="3711"/><counter type="BRANCH" missed="12" covered="538"/><counter type="LINE" missed="9" covered="794"/><counter type="COMPLEXITY" missed="13" covered="432"/><counter type="METHOD" missed="1" covered="169"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="CaseUtils.java"><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="6"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="2"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextStringBuilder.java"><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="18" mb="1" cb="9"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="2"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="1" cb="1"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="1" cb="1"/><line nr="194" mi="0" ci="10" mb="0" cb="0"/><line nr="196" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="1" cb="1"/><line nr="308" mi="13" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="6" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="4"/><line nr="384" mi="0" ci="17" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="1" cb="1"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="8" mb="0" cb="2"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="2"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="2"/><line nr="431" mi="0" ci="6" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="11" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="2"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="2"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="2" mb="0" cb="2"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="6" mb="0" cb="4"/><line nr="491" mi="0" ci="12" mb="0" cb="0"/><line nr="493" mi="0" ci="8" mb="0" cb="4"/><line nr="494" mi="0" ci="12" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="2"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="7" mb="0" cb="0"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="7" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="2"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="2"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="529" mi="0" ci="5" mb="0" cb="4"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="7" mb="0" cb="4"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="14" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="2" mb="0" cb="2"/><line nr="554" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="3" mb="0" cb="2"/><line nr="557" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="2"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="2"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="2"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="2"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="2"/><line nr="585" mi="0" ci="5" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="2"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="9" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="2" mb="0" cb="2"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="2"/><line nr="644" mi="0" ci="5" mb="0" cb="0"/><line nr="646" mi="0" ci="5" mb="0" cb="0"/><line nr="656" mi="0" ci="7" mb="0" cb="0"/><line nr="672" mi="0" ci="2" mb="0" cb="2"/><line nr="673" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="0" ci="6" mb="0" cb="4"/><line nr="676" mi="0" ci="5" mb="0" cb="0"/><line nr="678" mi="0" ci="8" mb="0" cb="4"/><line nr="679" mi="0" ci="5" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="2"/><line nr="682" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="5" mb="0" cb="0"/><line nr="684" mi="0" ci="9" mb="0" cb="0"/><line nr="685" mi="0" ci="6" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="699" mi="0" ci="6" mb="0" cb="0"/><line nr="709" mi="0" ci="7" mb="0" cb="0"/><line nr="721" mi="0" ci="2" mb="0" cb="2"/><line nr="722" mi="0" ci="3" mb="0" cb="0"/><line nr="724" mi="0" ci="6" mb="0" cb="4"/><line nr="725" mi="0" ci="5" mb="0" cb="0"/><line nr="727" mi="0" ci="8" mb="0" cb="4"/><line nr="728" mi="0" ci="5" mb="0" cb="0"/><line nr="730" mi="0" ci="2" mb="0" cb="2"/><line nr="731" mi="0" ci="3" mb="0" cb="0"/><line nr="732" mi="0" ci="5" mb="0" cb="0"/><line nr="733" mi="0" ci="9" mb="0" cb="0"/><line nr="734" mi="0" ci="6" mb="0" cb="0"/><line nr="736" mi="0" ci="2" mb="0" cb="0"/><line nr="746" mi="0" ci="7" mb="0" cb="0"/><line nr="758" mi="0" ci="2" mb="0" cb="2"/><line nr="759" mi="0" ci="3" mb="0" cb="0"/><line nr="761" mi="0" ci="6" mb="0" cb="4"/><line nr="762" mi="0" ci="5" mb="0" cb="0"/><line nr="764" mi="0" ci="8" mb="0" cb="4"/><line nr="765" mi="0" ci="5" mb="0" cb="0"/><line nr="767" mi="0" ci="2" mb="0" cb="2"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="769" mi="0" ci="5" mb="0" cb="0"/><line nr="770" mi="0" ci="9" mb="0" cb="0"/><line nr="771" mi="0" ci="6" mb="0" cb="0"/><line nr="773" mi="0" ci="2" mb="0" cb="0"/><line nr="783" mi="0" ci="7" mb="0" cb="0"/><line nr="795" mi="0" ci="2" mb="0" cb="2"/><line nr="796" mi="0" ci="3" mb="0" cb="0"/><line nr="798" mi="0" ci="6" mb="0" cb="4"/><line nr="799" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="0" ci="8" mb="0" cb="4"/><line nr="802" mi="0" ci="5" mb="0" cb="0"/><line nr="804" mi="0" ci="2" mb="0" cb="2"/><line nr="805" mi="0" ci="3" mb="0" cb="0"/><line nr="806" mi="0" ci="5" mb="0" cb="0"/><line nr="807" mi="0" ci="9" mb="0" cb="0"/><line nr="808" mi="0" ci="6" mb="0" cb="0"/><line nr="810" mi="0" ci="2" mb="0" cb="0"/><line nr="821" mi="0" ci="2" mb="0" cb="2"/><line nr="822" mi="0" ci="4" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="0" ci="2" mb="0" cb="2"/><line nr="836" mi="0" ci="4" mb="0" cb="0"/><line nr="838" mi="0" ci="2" mb="0" cb="0"/><line nr="855" mi="0" ci="5" mb="0" cb="4"/><line nr="856" mi="0" ci="16" mb="0" cb="2"/><line nr="857" mi="0" ci="4" mb="0" cb="0"/><line nr="860" mi="0" ci="2" mb="0" cb="0"/><line nr="865" mi="0" ci="6" mb="0" cb="0"/><line nr="866" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="6" mb="0" cb="0"/><line nr="868" mi="0" ci="6" mb="0" cb="0"/><line nr="869" mi="0" ci="5" mb="0" cb="0"/><line nr="870" mi="0" ci="6" mb="0" cb="0"/><line nr="871" mi="0" ci="1" mb="0" cb="0"/><line nr="883" mi="0" ci="7" mb="0" cb="0"/><line nr="897" mi="0" ci="2" mb="0" cb="2"/><line nr="898" mi="0" ci="6" mb="0" cb="0"/><line nr="899" mi="0" ci="8" mb="0" cb="2"/><line nr="900" mi="0" ci="2" mb="0" cb="2"/><line nr="901" mi="0" ci="2" mb="0" cb="0"/><line nr="903" mi="0" ci="3" mb="0" cb="0"/><line nr="904" mi="0" ci="3" mb="0" cb="2"/><line nr="905" mi="0" ci="11" mb="0" cb="0"/><line nr="907" mi="0" ci="4" mb="0" cb="0"/><line nr="908" mi="0" ci="7" mb="0" cb="2"/><line nr="909" mi="0" ci="8" mb="0" cb="0"/><line nr="911" mi="0" ci="10" mb="0" cb="0"/><line nr="913" mi="0" ci="6" mb="0" cb="0"/><line nr="915" mi="0" ci="2" mb="0" cb="0"/><line nr="928" mi="0" ci="7" mb="0" cb="0"/><line nr="942" mi="0" ci="2" mb="0" cb="2"/><line nr="943" mi="0" ci="6" mb="0" cb="0"/><line nr="944" mi="0" ci="8" mb="0" cb="2"/><line nr="945" mi="0" ci="2" mb="0" cb="2"/><line nr="946" mi="0" ci="2" mb="0" cb="0"/><line nr="948" mi="0" ci="3" mb="0" cb="0"/><line nr="949" mi="0" ci="3" mb="0" cb="2"/><line nr="950" mi="0" ci="9" mb="0" cb="0"/><line nr="952" mi="0" ci="4" mb="0" cb="0"/><line nr="953" mi="0" ci="8" mb="0" cb="0"/><line nr="954" mi="0" ci="7" mb="0" cb="2"/><line nr="955" mi="0" ci="10" mb="0" cb="0"/><line nr="958" mi="0" ci="6" mb="0" cb="0"/><line nr="960" mi="0" ci="2" mb="0" cb="0"/><line nr="970" mi="0" ci="5" mb="0" cb="0"/><line nr="980" mi="0" ci="5" mb="0" cb="0"/><line nr="991" mi="0" ci="5" mb="0" cb="0"/><line nr="1004" mi="0" ci="7" mb="0" cb="0"/><line nr="1014" mi="0" ci="5" mb="0" cb="0"/><line nr="1024" mi="0" ci="5" mb="0" cb="0"/><line nr="1034" mi="0" ci="5" mb="0" cb="0"/><line nr="1044" mi="0" ci="5" mb="0" cb="0"/><line nr="1054" mi="0" ci="5" mb="0" cb="0"/><line nr="1064" mi="0" ci="5" mb="0" cb="0"/><line nr="1077" mi="0" ci="7" mb="0" cb="0"/><line nr="1089" mi="0" ci="6" mb="0" cb="0"/><line nr="1100" mi="0" ci="5" mb="0" cb="0"/><line nr="1113" mi="0" ci="7" mb="0" cb="0"/><line nr="1124" mi="0" ci="5" mb="0" cb="0"/><line nr="1137" mi="0" ci="7" mb="0" cb="0"/><line nr="1148" mi="0" ci="5" mb="0" cb="0"/><line nr="1161" mi="0" ci="7" mb="0" cb="0"/><line nr="1174" mi="0" ci="3" mb="0" cb="2"/><line nr="1175" mi="0" ci="4" mb="0" cb="0"/><line nr="1176" mi="0" ci="2" mb="0" cb="0"/><line nr="1178" mi="0" ci="5" mb="0" cb="0"/><line nr="1187" mi="0" ci="3" mb="0" cb="2"/><line nr="1188" mi="0" ci="2" mb="0" cb="0"/><line nr="1190" mi="0" ci="5" mb="0" cb="0"/><line nr="1201" mi="0" ci="2" mb="0" cb="2"/><line nr="1202" mi="0" ci="6" mb="0" cb="0"/><line nr="1203" mi="0" ci="7" mb="0" cb="2"/><line nr="1204" mi="0" ci="11" mb="0" cb="0"/><line nr="1207" mi="0" ci="2" mb="0" cb="0"/><line nr="1231" mi="0" ci="3" mb="0" cb="2"/><line nr="1232" mi="0" ci="4" mb="0" cb="0"/><line nr="1234" mi="0" ci="2" mb="0" cb="0"/><line nr="1248" mi="0" ci="3" mb="0" cb="2"/><line nr="1249" mi="0" ci="5" mb="0" cb="0"/><line nr="1251" mi="0" ci="4" mb="0" cb="0"/><line nr="1253" mi="0" ci="2" mb="0" cb="0"/><line nr="1279" mi="0" ci="2" mb="0" cb="2"/><line nr="1280" mi="0" ci="4" mb="0" cb="0"/><line nr="1282" mi="0" ci="2" mb="0" cb="0"/><line nr="1307" mi="0" ci="5" mb="0" cb="0"/><line nr="1333" mi="0" ci="4" mb="0" cb="4"/><line nr="1334" mi="0" ci="4" mb="0" cb="0"/><line nr="1336" mi="0" ci="2" mb="0" cb="0"/><line nr="1367" mi="0" ci="7" mb="0" cb="2"/><line nr="1368" mi="0" ci="2" mb="0" cb="2"/><line nr="1369" mi="0" ci="4" mb="0" cb="0"/><line nr="1371" mi="0" ci="2" mb="0" cb="0"/><line nr="1386" mi="0" ci="3" mb="0" cb="2"/><line nr="1387" mi="0" ci="9" mb="0" cb="0"/><line nr="1388" mi="0" ci="3" mb="0" cb="2"/><line nr="1389" mi="0" ci="10" mb="0" cb="0"/><line nr="1390" mi="0" ci="3" mb="1" cb="1"/><line nr="1391" mi="10" ci="0" mb="0" cb="0"/><line nr="1392" mi="0" ci="3" mb="0" cb="2"/><line nr="1393" mi="0" ci="10" mb="0" cb="0"/><line nr="1395" mi="0" ci="4" mb="0" cb="0"/><line nr="1397" mi="0" ci="1" mb="0" cb="0"/><line nr="1401" mi="0" ci="6" mb="0" cb="0"/><line nr="1402" mi="0" ci="6" mb="0" cb="0"/><line nr="1403" mi="0" ci="6" mb="0" cb="0"/><line nr="1404" mi="0" ci="5" mb="0" cb="0"/><line nr="1405" mi="0" ci="6" mb="0" cb="0"/><line nr="1406" mi="0" ci="1" mb="0" cb="0"/><line nr="1417" mi="0" ci="2" mb="0" cb="2"/><line nr="1418" mi="0" ci="6" mb="0" cb="0"/><line nr="1420" mi="0" ci="2" mb="0" cb="0"/><line nr="1432" mi="0" ci="2" mb="0" cb="2"/><line nr="1433" mi="0" ci="4" mb="0" cb="0"/><line nr="1434" mi="0" ci="3" mb="0" cb="2"/><line nr="1435" mi="0" ci="5" mb="0" cb="0"/><line nr="1436" mi="0" ci="3" mb="0" cb="2"/><line nr="1437" mi="0" ci="5" mb="0" cb="0"/><line nr="1441" mi="0" ci="2" mb="0" cb="0"/><line nr="1453" mi="0" ci="5" mb="0" cb="4"/><line nr="1454" mi="0" ci="4" mb="0" cb="0"/><line nr="1455" mi="0" ci="6" mb="0" cb="0"/><line nr="1456" mi="0" ci="8" mb="0" cb="2"/><line nr="1457" mi="0" ci="4" mb="0" cb="0"/><line nr="1458" mi="0" ci="6" mb="0" cb="0"/><line nr="1461" mi="0" ci="2" mb="0" cb="0"/><line nr="1484" mi="0" ci="5" mb="0" cb="0"/><line nr="1523" mi="0" ci="5" mb="0" cb="0"/><line nr="1547" mi="0" ci="5" mb="0" cb="0"/><line nr="1558" mi="0" ci="3" mb="0" cb="0"/><line nr="1567" mi="0" ci="4" mb="0" cb="0"/><line nr="1581" mi="0" ci="3" mb="0" cb="0"/><line nr="1582" mi="0" ci="5" mb="0" cb="0"/><line nr="1599" mi="0" ci="3" mb="0" cb="0"/><line nr="1600" mi="0" ci="2" mb="0" cb="0"/><line nr="1610" mi="0" ci="3" mb="0" cb="0"/><line nr="1611" mi="0" ci="8" mb="0" cb="2"/><line nr="1612" mi="0" ci="5" mb="0" cb="2"/><line nr="1613" mi="0" ci="2" mb="0" cb="0"/><line nr="1616" mi="0" ci="2" mb="0" cb="0"/><line nr="1626" mi="0" ci="9" mb="0" cb="2"/><line nr="1640" mi="0" ci="9" mb="0" cb="2"/><line nr="1652" mi="0" ci="5" mb="0" cb="0"/><line nr="1653" mi="0" ci="4" mb="0" cb="0"/><line nr="1654" mi="0" ci="2" mb="0" cb="2"/><line nr="1655" mi="0" ci="5" mb="0" cb="0"/><line nr="1657" mi="0" ci="2" mb="0" cb="0"/><line nr="1667" mi="0" ci="8" mb="0" cb="2"/><line nr="1668" mi="0" ci="6" mb="0" cb="2"/><line nr="1669" mi="0" ci="2" mb="0" cb="0"/><line nr="1670" mi="0" ci="5" mb="0" cb="2"/><line nr="1671" mi="0" ci="6" mb="0" cb="2"/><line nr="1672" mi="0" ci="1" mb="0" cb="0"/><line nr="1675" mi="0" ci="4" mb="0" cb="0"/><line nr="1676" mi="0" ci="5" mb="0" cb="0"/><line nr="1677" mi="0" ci="4" mb="0" cb="0"/><line nr="1680" mi="0" ci="2" mb="0" cb="0"/><line nr="1690" mi="0" ci="7" mb="0" cb="2"/><line nr="1691" mi="0" ci="2" mb="0" cb="2"/><line nr="1692" mi="0" ci="5" mb="0" cb="0"/><line nr="1693" mi="0" ci="2" mb="0" cb="2"/><line nr="1694" mi="0" ci="7" mb="0" cb="0"/><line nr="1695" mi="0" ci="6" mb="0" cb="0"/><line nr="1698" mi="0" ci="2" mb="0" cb="0"/><line nr="1712" mi="0" ci="9" mb="0" cb="0"/><line nr="1725" mi="0" ci="3" mb="0" cb="0"/><line nr="1726" mi="0" ci="7" mb="0" cb="0"/><line nr="1727" mi="0" ci="2" mb="0" cb="0"/><line nr="1737" mi="0" ci="8" mb="0" cb="2"/><line nr="1738" mi="0" ci="6" mb="0" cb="2"/><line nr="1739" mi="0" ci="7" mb="0" cb="0"/><line nr="1740" mi="0" ci="1" mb="0" cb="0"/><line nr="1743" mi="0" ci="2" mb="0" cb="0"/><line nr="1753" mi="0" ci="7" mb="0" cb="2"/><line nr="1754" mi="0" ci="2" mb="0" cb="2"/><line nr="1755" mi="0" ci="5" mb="0" cb="0"/><line nr="1756" mi="0" ci="2" mb="0" cb="2"/><line nr="1757" mi="0" ci="7" mb="0" cb="0"/><line nr="1760" mi="0" ci="2" mb="0" cb="0"/><line nr="1774" mi="0" ci="9" mb="0" cb="0"/><line nr="1786" mi="0" ci="11" mb="0" cb="0"/><line nr="1787" mi="0" ci="6" mb="0" cb="0"/><line nr="1788" mi="0" ci="1" mb="0" cb="0"/><line nr="1801" mi="0" ci="3" mb="0" cb="0"/><line nr="1802" mi="0" ci="5" mb="0" cb="0"/><line nr="1803" mi="0" ci="4" mb="0" cb="0"/><line nr="1804" mi="0" ci="2" mb="0" cb="0"/><line nr="1819" mi="0" ci="4" mb="0" cb="0"/><line nr="1820" mi="0" ci="8" mb="1" cb="5"/><line nr="1821" mi="0" ci="2" mb="0" cb="0"/><line nr="1823" mi="0" ci="10" mb="0" cb="0"/><line nr="1824" mi="0" ci="6" mb="0" cb="0"/><line nr="1825" mi="0" ci="5" mb="0" cb="0"/><line nr="1826" mi="0" ci="2" mb="0" cb="0"/><line nr="1839" mi="0" ci="2" mb="0" cb="2"/><line nr="1840" mi="0" ci="2" mb="0" cb="0"/><line nr="1842" mi="0" ci="3" mb="0" cb="0"/><line nr="1843" mi="0" ci="2" mb="0" cb="2"/><line nr="1844" mi="0" ci="2" mb="0" cb="0"/><line nr="1846" mi="0" ci="4" mb="0" cb="2"/><line nr="1847" mi="0" ci="2" mb="0" cb="0"/><line nr="1849" mi="0" ci="5" mb="0" cb="0"/><line nr="1850" mi="0" ci="8" mb="0" cb="2"/><line nr="1851" mi="0" ci="8" mb="0" cb="2"/><line nr="1852" mi="0" ci="2" mb="0" cb="0"/><line nr="1855" mi="0" ci="2" mb="0" cb="0"/><line nr="1872" mi="0" ci="2" mb="0" cb="2"/><line nr="1873" mi="0" ci="3" mb="0" cb="0"/><line nr="1875" mi="0" ci="2" mb="0" cb="0"/><line nr="1894" mi="0" ci="6" mb="0" cb="2"/><line nr="1895" mi="0" ci="3" mb="0" cb="0"/><line nr="1897" mi="0" ci="1" mb="0" cb="0"/><line nr="1907" mi="0" ci="12" mb="0" cb="4"/><line nr="1917" mi="0" ci="3" mb="0" cb="2"/><line nr="1918" mi="0" ci="2" mb="0" cb="0"/><line nr="1920" mi="0" ci="2" mb="0" cb="2"/><line nr="1921" mi="0" ci="2" mb="0" cb="0"/><line nr="1923" mi="0" ci="5" mb="0" cb="2"/><line nr="1924" mi="0" ci="2" mb="0" cb="0"/><line nr="1928" mi="0" ci="3" mb="0" cb="0"/><line nr="1929" mi="0" ci="3" mb="0" cb="0"/><line nr="1930" mi="0" ci="9" mb="0" cb="2"/><line nr="1931" mi="0" ci="7" mb="0" cb="2"/><line nr="1932" mi="0" ci="2" mb="0" cb="0"/><line nr="1935" mi="0" ci="2" mb="0" cb="0"/><line nr="1946" mi="0" ci="3" mb="0" cb="2"/><line nr="1947" mi="0" ci="2" mb="0" cb="0"/><line nr="1949" mi="0" ci="5" mb="0" cb="2"/><line nr="1950" mi="0" ci="2" mb="0" cb="0"/><line nr="1952" mi="0" ci="3" mb="0" cb="0"/><line nr="1953" mi="0" ci="3" mb="0" cb="0"/><line nr="1954" mi="0" ci="9" mb="0" cb="2"/><line nr="1955" mi="0" ci="4" mb="0" cb="0"/><line nr="1956" mi="0" ci="4" mb="0" cb="0"/><line nr="1957" mi="0" ci="8" mb="1" cb="3"/><line nr="1958" mi="2" ci="0" mb="0" cb="0"/><line nr="1961" mi="0" ci="2" mb="0" cb="0"/><line nr="1966" mi="0" ci="3" mb="0" cb="0"/><line nr="1976" mi="0" ci="3" mb="0" cb="0"/><line nr="1977" mi="0" ci="6" mb="0" cb="4"/><line nr="1978" mi="0" ci="3" mb="0" cb="0"/><line nr="1980" mi="0" ci="7" mb="0" cb="0"/><line nr="1981" mi="0" ci="2" mb="0" cb="0"/><line nr="1995" mi="0" ci="2" mb="0" cb="2"/><line nr="1996" mi="0" ci="5" mb="0" cb="0"/><line nr="1998" mi="0" ci="6" mb="0" cb="4"/><line nr="1999" mi="0" ci="5" mb="0" cb="0"/><line nr="2001" mi="0" ci="3" mb="0" cb="2"/><line nr="2002" mi="0" ci="5" mb="0" cb="0"/><line nr="2004" mi="0" ci="9" mb="0" cb="0"/><line nr="2005" mi="0" ci="1" mb="0" cb="0"/><line nr="2013" mi="0" ci="3" mb="0" cb="0"/><line nr="2022" mi="0" ci="3" mb="0" cb="0"/><line nr="2033" mi="0" ci="3" mb="0" cb="0"/><line nr="2034" mi="0" ci="2" mb="0" cb="0"/><line nr="2035" mi="0" ci="8" mb="0" cb="2"/><line nr="2036" mi="0" ci="8" mb="0" cb="0"/><line nr="2038" mi="0" ci="2" mb="0" cb="0"/><line nr="2048" mi="0" ci="5" mb="0" cb="0"/><line nr="2059" mi="0" ci="4" mb="0" cb="0"/><line nr="2060" mi="0" ci="4" mb="0" cb="2"/><line nr="2061" mi="0" ci="2" mb="0" cb="0"/><line nr="2063" mi="0" ci="3" mb="0" cb="0"/><line nr="2064" mi="0" ci="8" mb="0" cb="2"/><line nr="2065" mi="0" ci="5" mb="0" cb="2"/><line nr="2066" mi="0" ci="2" mb="0" cb="0"/><line nr="2069" mi="0" ci="2" mb="0" cb="0"/><line nr="2082" mi="0" ci="5" mb="0" cb="0"/><line nr="2097" mi="0" ci="4" mb="0" cb="0"/><line nr="2098" mi="0" ci="6" mb="0" cb="4"/><line nr="2099" mi="0" ci="2" mb="0" cb="0"/><line nr="2101" mi="0" ci="3" mb="0" cb="0"/><line nr="2102" mi="0" ci="3" mb="0" cb="2"/><line nr="2103" mi="0" ci="7" mb="0" cb="0"/><line nr="2105" mi="0" ci="2" mb="0" cb="2"/><line nr="2106" mi="0" ci="2" mb="0" cb="0"/><line nr="2108" mi="0" ci="4" mb="0" cb="2"/><line nr="2109" mi="0" ci="2" mb="0" cb="0"/><line nr="2111" mi="0" ci="3" mb="0" cb="0"/><line nr="2112" mi="0" ci="7" mb="0" cb="0"/><line nr="2113" mi="0" ci="7" mb="0" cb="2"/><line nr="2114" mi="0" ci="7" mb="0" cb="2"/><line nr="2115" mi="0" ci="9" mb="0" cb="2"/><line nr="2116" mi="0" ci="1" mb="0" cb="0"/><line nr="2119" mi="0" ci="2" mb="0" cb="0"/><line nr="2121" mi="0" ci="2" mb="0" cb="0"/><line nr="2135" mi="0" ci="5" mb="0" cb="0"/><line nr="2150" mi="0" ci="4" mb="0" cb="0"/><line nr="2151" mi="0" ci="6" mb="0" cb="4"/><line nr="2152" mi="0" ci="2" mb="0" cb="0"/><line nr="2154" mi="0" ci="3" mb="0" cb="0"/><line nr="2155" mi="0" ci="3" mb="0" cb="0"/><line nr="2156" mi="0" ci="7" mb="0" cb="2"/><line nr="2157" mi="0" ci="7" mb="0" cb="2"/><line nr="2158" mi="0" ci="2" mb="0" cb="0"/><line nr="2161" mi="0" ci="2" mb="0" cb="0"/><line nr="2173" mi="0" ci="3" mb="0" cb="0"/><line nr="2174" mi="0" ci="2" mb="0" cb="2"/><line nr="2175" mi="0" ci="6" mb="0" cb="0"/><line nr="2176" mi="0" ci="13" mb="0" cb="0"/><line nr="2177" mi="0" ci="4" mb="0" cb="0"/><line nr="2179" mi="0" ci="6" mb="0" cb="0"/><line nr="2180" mi="0" ci="13" mb="0" cb="0"/><line nr="2181" mi="0" ci="3" mb="0" cb="0"/><line nr="2183" mi="0" ci="2" mb="0" cb="0"/><line nr="2195" mi="0" ci="3" mb="0" cb="0"/><line nr="2196" mi="0" ci="6" mb="0" cb="0"/><line nr="2197" mi="0" ci="13" mb="0" cb="0"/><line nr="2198" mi="0" ci="5" mb="0" cb="0"/><line nr="2199" mi="0" ci="6" mb="0" cb="0"/><line nr="2200" mi="0" ci="2" mb="0" cb="0"/><line nr="2212" mi="0" ci="3" mb="0" cb="0"/><line nr="2213" mi="0" ci="2" mb="0" cb="2"/><line nr="2214" mi="0" ci="6" mb="0" cb="0"/><line nr="2216" mi="0" ci="3" mb="0" cb="0"/><line nr="2217" mi="0" ci="2" mb="0" cb="2"/><line nr="2218" mi="0" ci="6" mb="0" cb="0"/><line nr="2219" mi="0" ci="13" mb="0" cb="0"/><line nr="2220" mi="0" ci="7" mb="0" cb="0"/><line nr="2221" mi="0" ci="6" mb="0" cb="0"/><line nr="2223" mi="0" ci="2" mb="0" cb="0"/><line nr="2237" mi="0" ci="3" mb="0" cb="0"/><line nr="2238" mi="0" ci="2" mb="0" cb="2"/><line nr="2239" mi="0" ci="6" mb="0" cb="0"/><line nr="2241" mi="0" ci="6" mb="0" cb="4"/><line nr="2242" mi="0" ci="12" mb="0" cb="0"/><line nr="2244" mi="0" ci="8" mb="0" cb="4"/><line nr="2245" mi="0" ci="12" mb="0" cb="0"/><line nr="2247" mi="0" ci="2" mb="0" cb="2"/><line nr="2248" mi="0" ci="6" mb="0" cb="0"/><line nr="2249" mi="0" ci="13" mb="0" cb="0"/><line nr="2250" mi="0" ci="7" mb="0" cb="0"/><line nr="2251" mi="0" ci="6" mb="0" cb="0"/><line nr="2253" mi="0" ci="2" mb="0" cb="0"/><line nr="2265" mi="0" ci="6" mb="0" cb="0"/><line nr="2277" mi="0" ci="6" mb="0" cb="0"/><line nr="2289" mi="6" ci="0" mb="0" cb="0"/><line nr="2301" mi="0" ci="6" mb="0" cb="0"/><line nr="2314" mi="0" ci="2" mb="0" cb="2"/><line nr="2315" mi="0" ci="6" mb="0" cb="0"/><line nr="2317" mi="0" ci="6" mb="0" cb="0"/><line nr="2329" mi="0" ci="3" mb="0" cb="0"/><line nr="2330" mi="0" ci="2" mb="0" cb="2"/><line nr="2331" mi="0" ci="3" mb="0" cb="0"/><line nr="2333" mi="0" ci="2" mb="0" cb="2"/><line nr="2334" mi="0" ci="3" mb="0" cb="0"/><line nr="2335" mi="0" ci="2" mb="1" cb="1"/><line nr="2336" mi="0" ci="5" mb="0" cb="0"/><line nr="2337" mi="0" ci="3" mb="0" cb="0"/><line nr="2338" mi="0" ci="13" mb="0" cb="0"/><line nr="2339" mi="0" ci="3" mb="0" cb="0"/><line nr="2340" mi="0" ci="7" mb="0" cb="0"/><line nr="2343" mi="0" ci="2" mb="0" cb="0"/><line nr="2355" mi="0" ci="7" mb="0" cb="2"/><line nr="2368" mi="0" ci="7" mb="0" cb="2"/><line nr="2378" mi="0" ci="7" mb="0" cb="2"/><line nr="2388" mi="0" ci="8" mb="0" cb="0"/><line nr="2399" mi="0" ci="11" mb="0" cb="2"/><line nr="2400" mi="0" ci="2" mb="0" cb="2"/><line nr="2401" mi="0" ci="2" mb="0" cb="0"/><line nr="2403" mi="0" ci="6" mb="0" cb="2"/><line nr="2404" mi="0" ci="6" mb="0" cb="2"/><line nr="2405" mi="0" ci="2" mb="0" cb="0"/><line nr="2408" mi="0" ci="2" mb="0" cb="0"/><line nr="2421" mi="0" ci="8" mb="0" cb="0"/><line nr="2436" mi="0" ci="11" mb="0" cb="2"/><line nr="2437" mi="0" ci="4" mb="0" cb="4"/><line nr="2438" mi="0" ci="2" mb="0" cb="0"/><line nr="2440" mi="0" ci="3" mb="0" cb="0"/><line nr="2441" mi="0" ci="6" mb="0" cb="4"/><line nr="2442" mi="0" ci="3" mb="0" cb="2"/><line nr="2443" mi="0" ci="7" mb="0" cb="0"/><line nr="2446" mi="0" ci="11" mb="0" cb="2"/><line nr="2447" mi="0" ci="7" mb="0" cb="2"/><line nr="2448" mi="0" ci="10" mb="0" cb="2"/><line nr="2449" mi="0" ci="1" mb="0" cb="0"/><line nr="2452" mi="0" ci="2" mb="0" cb="0"/><line nr="2455" mi="0" ci="2" mb="0" cb="2"/><line nr="2456" mi="0" ci="2" mb="0" cb="0"/><line nr="2458" mi="0" ci="2" mb="0" cb="0"/><line nr="2472" mi="0" ci="6" mb="0" cb="0"/><line nr="2487" mi="0" ci="11" mb="0" cb="2"/><line nr="2488" mi="0" ci="4" mb="0" cb="4"/><line nr="2489" mi="0" ci="2" mb="0" cb="0"/><line nr="2491" mi="0" ci="3" mb="0" cb="0"/><line nr="2492" mi="0" ci="4" mb="0" cb="0"/><line nr="2493" mi="0" ci="6" mb="0" cb="2"/><line nr="2494" mi="0" ci="7" mb="0" cb="2"/><line nr="2495" mi="0" ci="2" mb="0" cb="0"/><line nr="2498" mi="0" ci="2" mb="0" cb="0"/><line nr="2512" mi="0" ci="2" mb="0" cb="2"/><line nr="2513" mi="0" ci="2" mb="0" cb="0"/><line nr="2515" mi="0" ci="4" mb="0" cb="2"/><line nr="2516" mi="0" ci="9" mb="0" cb="0"/><line nr="2518" mi="0" ci="8" mb="0" cb="0"/><line nr="2528" mi="0" ci="3" mb="0" cb="0"/><line nr="2545" mi="0" ci="2" mb="0" cb="2"/><line nr="2546" mi="0" ci="2" mb="0" cb="0"/><line nr="2548" mi="0" ci="6" mb="0" cb="4"/><line nr="2549" mi="0" ci="2" mb="0" cb="0"/><line nr="2551" mi="0" ci="6" mb="0" cb="2"/><line nr="2552" mi="0" ci="11" mb="0" cb="0"/><line nr="2554" mi="0" ci="8" mb="0" cb="0"/><line nr="2563" mi="0" ci="6" mb="0" cb="2"/><line nr="2564" mi="0" ci="4" mb="0" cb="0"/><line nr="2566" mi="0" ci="2" mb="0" cb="0"/><line nr="2580" mi="0" ci="3" mb="0" cb="0"/><line nr="2581" mi="0" ci="3" mb="0" cb="0"/><line nr="2582" mi="0" ci="6" mb="0" cb="0"/><line nr="2583" mi="0" ci="8" mb="0" cb="0"/><line nr="2584" mi="0" ci="6" mb="0" cb="0"/><line nr="2585" mi="0" ci="5" mb="0" cb="0"/><line nr="2599" mi="0" ci="3" mb="1" cb="1"/><line nr="2600" mi="5" ci="0" mb="0" cb="0"/><line nr="2602" mi="0" ci="3" mb="1" cb="1"/><line nr="2603" mi="5" ci="0" mb="0" cb="0"/><line nr="2605" mi="0" ci="3" mb="0" cb="0"/><line nr="2607" mi="0" ci="6" mb="0" cb="0"/><line nr="2608" mi="0" ci="12" mb="0" cb="0"/><line nr="2609" mi="0" ci="4" mb="0" cb="0"/><line nr="2610" mi="0" ci="3" mb="0" cb="2"/><line nr="2611" mi="0" ci="1" mb="0" cb="0"/><line nr="2613" mi="0" ci="6" mb="0" cb="0"/><line nr="2614" mi="0" ci="1" mb="0" cb="0"/><line nr="2615" mi="0" ci="5" mb="0" cb="0"/><line nr="2630" mi="0" ci="3" mb="0" cb="0"/><line nr="2631" mi="0" ci="6" mb="0" cb="0"/><line nr="2632" mi="0" ci="13" mb="0" cb="0"/><line nr="2633" mi="0" ci="3" mb="0" cb="2"/><line nr="2634" mi="0" ci="2" mb="0" cb="0"/><line nr="2637" mi="0" ci="6" mb="0" cb="0"/><line nr="2638" mi="0" ci="6" mb="0" cb="0"/><line nr="2639" mi="0" ci="13" mb="0" cb="0"/><line nr="2640" mi="0" ci="3" mb="0" cb="2"/><line nr="2641" mi="0" ci="5" mb="0" cb="0"/><line nr="2657" mi="0" ci="2" mb="0" cb="2"/><line nr="2658" mi="0" ci="2" mb="0" cb="0"/><line nr="2660" mi="0" ci="3" mb="0" cb="0"/><line nr="2661" mi="0" ci="6" mb="0" cb="0"/><line nr="2662" mi="0" ci="2" mb="0" cb="0"/><line nr="2663" mi="0" ci="8" mb="0" cb="0"/><line nr="2664" mi="0" ci="3" mb="0" cb="2"/><line nr="2665" mi="0" ci="2" mb="0" cb="0"/><line nr="2668" mi="0" ci="4" mb="0" cb="0"/><line nr="2669" mi="0" ci="6" mb="0" cb="0"/><line nr="2670" mi="0" ci="8" mb="0" cb="0"/><line nr="2671" mi="0" ci="5" mb="1" cb="3"/><line nr="2672" mi="0" ci="5" mb="0" cb="0"/><line nr="2681" mi="0" ci="6" mb="0" cb="0"/><line nr="2682" mi="0" ci="6" mb="0" cb="0"/><line nr="2683" mi="0" ci="1" mb="0" cb="0"/><line nr="2696" mi="0" ci="5" mb="0" cb="0"/><line nr="2697" mi="0" ci="7" mb="0" cb="2"/><line nr="2698" mi="0" ci="9" mb="0" cb="0"/><line nr="2699" mi="0" ci="2" mb="0" cb="0"/><line nr="2719" mi="0" ci="5" mb="0" cb="0"/><line nr="2720" mi="0" ci="8" mb="0" cb="0"/><line nr="2731" mi="0" ci="3" mb="0" cb="2"/><line nr="2732" mi="0" ci="8" mb="0" cb="2"/><line nr="2733" mi="0" ci="6" mb="0" cb="2"/><line nr="2734" mi="0" ci="5" mb="0" cb="0"/><line nr="2738" mi="0" ci="2" mb="0" cb="0"/><line nr="2749" mi="0" ci="7" mb="0" cb="2"/><line nr="2750" mi="0" ci="2" mb="0" cb="2"/><line nr="2751" mi="0" ci="7" mb="0" cb="2"/><line nr="2752" mi="0" ci="5" mb="0" cb="0"/><line nr="2753" mi="0" ci="2" mb="0" cb="2"/><line nr="2754" mi="0" ci="9" mb="0" cb="0"/><line nr="2755" mi="0" ci="8" mb="0" cb="0"/><line nr="2758" mi="0" ci="2" mb="0" cb="0"/><line nr="2773" mi="0" ci="9" mb="0" cb="0"/><line nr="2784" mi="0" ci="3" mb="0" cb="2"/><line nr="2785" mi="0" ci="8" mb="0" cb="2"/><line nr="2786" mi="0" ci="6" mb="0" cb="2"/><line nr="2787" mi="0" ci="5" mb="0" cb="0"/><line nr="2788" mi="0" ci="1" mb="0" cb="0"/><line nr="2792" mi="0" ci="2" mb="0" cb="0"/><line nr="2803" mi="0" ci="7" mb="0" cb="2"/><line nr="2804" mi="0" ci="2" mb="0" cb="2"/><line nr="2805" mi="0" ci="5" mb="0" cb="0"/><line nr="2806" mi="0" ci="2" mb="0" cb="2"/><line nr="2807" mi="0" ci="7" mb="0" cb="2"/><line nr="2808" mi="0" ci="9" mb="0" cb="0"/><line nr="2811" mi="0" ci="2" mb="0" cb="0"/><line nr="2826" mi="0" ci="9" mb="0" cb="0"/><line nr="2841" mi="0" ci="7" mb="0" cb="0"/><line nr="2842" mi="0" ci="3" mb="0" cb="2"/><line nr="2843" mi="0" ci="3" mb="0" cb="0"/><line nr="2844" mi="0" ci="13" mb="0" cb="0"/><line nr="2845" mi="0" ci="3" mb="0" cb="0"/><line nr="2847" mi="0" ci="2" mb="0" cb="2"/><line nr="2848" mi="0" ci="7" mb="0" cb="0"/><line nr="2850" mi="0" ci="1" mb="0" cb="0"/><line nr="2869" mi="0" ci="5" mb="0" cb="4"/><line nr="2870" mi="0" ci="2" mb="0" cb="0"/><line nr="2872" mi="0" ci="7" mb="0" cb="2"/><line nr="2873" mi="0" ci="9" mb="0" cb="4"/><line nr="2874" mi="0" ci="3" mb="0" cb="0"/><line nr="2875" mi="0" ci="7" mb="0" cb="0"/><line nr="2876" mi="0" ci="2" mb="0" cb="2"/><line nr="2877" mi="0" ci="9" mb="0" cb="0"/><line nr="2878" mi="0" ci="6" mb="0" cb="0"/><line nr="2879" mi="0" ci="6" mb="0" cb="0"/><line nr="2880" mi="0" ci="2" mb="0" cb="2"/><line nr="2881" mi="0" ci="1" mb="0" cb="0"/><line nr="2885" mi="0" ci="2" mb="0" cb="0"/><line nr="2896" mi="0" ci="4" mb="0" cb="0"/><line nr="2897" mi="0" ci="4" mb="0" cb="0"/><line nr="2898" mi="0" ci="4" mb="0" cb="2"/><line nr="2899" mi="0" ci="2" mb="0" cb="0"/><line nr="2901" mi="0" ci="4" mb="0" cb="2"/><line nr="2902" mi="0" ci="3" mb="0" cb="0"/><line nr="2904" mi="0" ci="3" mb="0" cb="0"/><line nr="2905" mi="0" ci="1" mb="0" cb="0"/><line nr="2913" mi="0" ci="3" mb="0" cb="2"/><line nr="2914" mi="0" ci="2" mb="0" cb="0"/><line nr="2917" mi="0" ci="5" mb="0" cb="0"/><line nr="2918" mi="0" ci="3" mb="0" cb="0"/><line nr="2919" mi="0" ci="13" mb="0" cb="2"/><line nr="2920" mi="0" ci="4" mb="0" cb="0"/><line nr="2921" mi="0" ci="6" mb="0" cb="0"/><line nr="2922" mi="0" ci="4" mb="0" cb="0"/><line nr="2924" mi="0" ci="2" mb="0" cb="0"/><line nr="2938" mi="0" ci="2" mb="0" cb="2"/><line nr="2939" mi="0" ci="2" mb="0" cb="0"/><line nr="2941" mi="0" ci="4" mb="0" cb="2"/><line nr="2942" mi="0" ci="9" mb="0" cb="0"/><line nr="2944" mi="0" ci="11" mb="0" cb="0"/><line nr="2957" mi="0" ci="3" mb="0" cb="0"/><line nr="2958" mi="0" ci="4" mb="0" cb="0"/><line nr="2959" mi="0" ci="2" mb="0" cb="0"/><line nr="2973" mi="0" ci="3" mb="0" cb="0"/><line nr="2974" mi="0" ci="5" mb="0" cb="0"/><line nr="2975" mi="0" ci="2" mb="0" cb="0"/><line nr="2986" mi="0" ci="2" mb="0" cb="2"/><line nr="2987" mi="0" ci="5" mb="0" cb="0"/><line nr="2989" mi="0" ci="4" mb="0" cb="2"/><line nr="2990" mi="0" ci="4" mb="0" cb="0"/><line nr="2991" mi="0" ci="4" mb="0" cb="2"/><line nr="2992" mi="0" ci="3" mb="0" cb="0"/><line nr="2993" mi="0" ci="3" mb="0" cb="0"/><line nr="2994" mi="0" ci="3" mb="0" cb="0"/><line nr="2995" mi="0" ci="6" mb="0" cb="0"/><line nr="2997" mi="0" ci="2" mb="0" cb="0"/><line nr="3007" mi="0" ci="3" mb="0" cb="0"/><line nr="3008" mi="0" ci="2" mb="0" cb="0"/><line nr="3018" mi="0" ci="5" mb="0" cb="4"/><line nr="3019" mi="0" ci="2" mb="0" cb="0"/><line nr="3021" mi="0" ci="3" mb="0" cb="0"/><line nr="3022" mi="0" ci="2" mb="0" cb="0"/><line nr="3034" mi="0" ci="3" mb="0" cb="0"/><line nr="3047" mi="0" ci="2" mb="0" cb="2"/><line nr="3048" mi="0" ci="2" mb="0" cb="0"/><line nr="3050" mi="0" ci="3" mb="0" cb="0"/><line nr="3051" mi="0" ci="2" mb="0" cb="2"/><line nr="3052" mi="0" ci="2" mb="0" cb="0"/><line nr="3054" mi="0" ci="4" mb="0" cb="2"/><line nr="3055" mi="0" ci="2" mb="0" cb="0"/><line nr="3057" mi="0" ci="7" mb="0" cb="2"/><line nr="3058" mi="0" ci="8" mb="0" cb="2"/><line nr="3059" mi="0" ci="2" mb="0" cb="0"/><line nr="3062" mi="0" ci="2" mb="0" cb="0"/><line nr="3070" mi="0" ci="2" mb="0" cb="2"/><line nr="3071" mi="0" ci="5" mb="0" cb="0"/><line nr="3073" mi="0" ci="4" mb="0" cb="2"/><line nr="3074" mi="0" ci="5" mb="0" cb="0"/><line nr="3076" mi="0" ci="3" mb="0" cb="2"/><line nr="3077" mi="0" ci="7" mb="0" cb="0"/><line nr="3079" mi="0" ci="5" mb="0" cb="0"/><line nr="3090" mi="0" ci="6" mb="0" cb="0"/><line nr="3106" mi="0" ci="5" mb="0" cb="0"/><line nr="3107" mi="0" ci="10" mb="0" cb="0"/><line nr="3116" mi="0" ci="11" mb="0" cb="2"/><line nr="3129" mi="0" ci="5" mb="0" cb="0"/><line nr="3130" mi="0" ci="4" mb="0" cb="0"/><line nr="3131" mi="0" ci="10" mb="0" cb="2"/><line nr="3144" mi="0" ci="9" mb="0" cb="0"/><line nr="3153" mi="0" ci="12" mb="0" cb="0"/><line nr="3162" mi="0" ci="12" mb="0" cb="0"/><line nr="3171" mi="0" ci="3" mb="0" cb="2"/><line nr="3172" mi="0" ci="2" mb="0" cb="0"/><line nr="3174" mi="0" ci="3" mb="0" cb="0"/><line nr="3175" mi="0" ci="3" mb="0" cb="0"/><line nr="3176" mi="0" ci="2" mb="0" cb="0"/><line nr="3177" mi="0" ci="8" mb="0" cb="4"/><line nr="3178" mi="0" ci="2" mb="0" cb="0"/><line nr="3180" mi="0" ci="10" mb="0" cb="4"/><line nr="3181" mi="0" ci="2" mb="0" cb="0"/><line nr="3183" mi="0" ci="4" mb="0" cb="2"/><line nr="3184" mi="0" ci="6" mb="0" cb="0"/><line nr="3186" mi="0" ci="2" mb="0" cb="2"/><line nr="3187" mi="0" ci="5" mb="0" cb="0"/><line nr="3189" mi="0" ci="2" mb="0" cb="0"/><line nr="3199" mi="0" ci="6" mb="0" cb="4"/><line nr="3200" mi="0" ci="5" mb="0" cb="0"/><line nr="3202" mi="0" ci="1" mb="0" cb="0"/><line nr="3213" mi="0" ci="2" mb="0" cb="2"/><line nr="3214" mi="0" ci="5" mb="0" cb="0"/><line nr="3216" mi="0" ci="4" mb="0" cb="2"/><line nr="3217" mi="0" ci="3" mb="0" cb="0"/><line nr="3219" mi="0" ci="3" mb="0" cb="2"/><line nr="3220" mi="0" ci="5" mb="0" cb="0"/><line nr="3222" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="3693"/><counter type="BRANCH" missed="12" covered="538"/><counter type="LINE" missed="8" covered="803"/><counter type="COMPLEXITY" missed="13" covered="451"/><counter type="METHOD" missed="1" covered="188"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="StringTokenizer.java"><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="12" mb="0" cb="0"/><line nr="228" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="12" mb="0" cb="0"/><line nr="234" mi="0" ci="12" mb="0" cb="0"/><line nr="240" mi="0" ci="9" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="9" mb="0" cb="2"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="8" mb="0" cb="2"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="1" cb="3"/><line nr="438" mi="0" ci="3" mb="0" cb="2"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="2"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="2"/><line nr="454" mi="0" ci="3" mb="0" cb="2"/><line nr="456" mi="0" ci="7" mb="0" cb="0"/><line nr="458" mi="0" ci="9" mb="0" cb="0"/><line nr="460" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="2"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="2"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="5" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="561" mi="0" ci="7" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="10" mb="0" cb="2"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="7" mb="0" cb="2"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="634" mi="0" ci="7" mb="0" cb="2"/><line nr="635" mi="0" ci="16" mb="0" cb="4"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="0" cb="2"/><line nr="652" mi="0" ci="11" mb="0" cb="0"/><line nr="654" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="674" mi="0" ci="3" mb="0" cb="2"/><line nr="675" mi="0" ci="11" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="2"/><line nr="688" mi="0" ci="11" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="709" mi="0" ci="3" mb="0" cb="2"/><line nr="710" mi="0" ci="11" mb="0" cb="0"/><line nr="712" mi="0" ci="2" mb="0" cb="0"/><line nr="735" mi="0" ci="3" mb="0" cb="2"/><line nr="736" mi="0" ci="10" mb="0" cb="0"/><line nr="737" mi="0" ci="6" mb="0" cb="0"/><line nr="738" mi="0" ci="11" mb="0" cb="4"/><line nr="739" mi="0" ci="7" mb="1" cb="1"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="742" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="1" mb="0" cb="0"/><line nr="746" mi="0" ci="3" mb="0" cb="2"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="0" ci="8" mb="0" cb="0"/><line nr="753" mi="0" ci="2" mb="0" cb="2"/><line nr="754" mi="0" ci="4" mb="0" cb="0"/><line nr="755" mi="0" ci="4" mb="0" cb="0"/><line nr="759" mi="0" ci="8" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="2"/><line nr="761" mi="0" ci="12" mb="0" cb="0"/><line nr="763" mi="0" ci="10" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="0"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="792" mi="0" ci="6" mb="0" cb="2"/><line nr="793" mi="0" ci="2" mb="0" cb="0"/><line nr="795" mi="0" ci="3" mb="0" cb="2"/><line nr="799" mi="0" ci="2" mb="0" cb="2"/><line nr="806" mi="0" ci="8" mb="0" cb="2"/><line nr="807" mi="0" ci="10" mb="0" cb="2"/><line nr="809" mi="0" ci="6" mb="0" cb="0"/><line nr="810" mi="0" ci="6" mb="0" cb="0"/><line nr="811" mi="0" ci="3" mb="0" cb="0"/><line nr="812" mi="0" ci="1" mb="0" cb="0"/><line nr="816" mi="0" ci="2" mb="0" cb="0"/><line nr="817" mi="0" ci="4" mb="0" cb="0"/><line nr="818" mi="0" ci="1" mb="0" cb="0"/><line nr="825" mi="0" ci="8" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="2"/><line nr="828" mi="0" ci="7" mb="0" cb="0"/><line nr="829" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="10" mb="0" cb="4"/><line nr="834" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="0" ci="4" mb="0" cb="0"/><line nr="836" mi="0" ci="1" mb="0" cb="0"/><line nr="840" mi="0" ci="8" mb="0" cb="0"/><line nr="841" mi="0" ci="2" mb="0" cb="2"/><line nr="842" mi="0" ci="4" mb="0" cb="0"/><line nr="843" mi="0" ci="1" mb="0" cb="0"/><line nr="849" mi="0" ci="8" mb="0" cb="0"/><line nr="850" mi="0" ci="2" mb="0" cb="2"/><line nr="851" mi="0" ci="6" mb="0" cb="0"/><line nr="852" mi="0" ci="4" mb="0" cb="0"/><line nr="853" mi="0" ci="1" mb="0" cb="0"/><line nr="857" mi="0" ci="7" mb="0" cb="0"/><line nr="858" mi="0" ci="4" mb="0" cb="0"/><line nr="862" mi="0" ci="7" mb="0" cb="0"/><line nr="863" mi="0" ci="2" mb="0" cb="0"/><line nr="874" mi="0" ci="5" mb="0" cb="0"/><line nr="886" mi="0" ci="3" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="888" mi="0" ci="2" mb="0" cb="0"/><line nr="900" mi="0" ci="3" mb="0" cb="0"/><line nr="901" mi="0" ci="9" mb="0" cb="2"/><line nr="902" mi="0" ci="2" mb="0" cb="0"/><line nr="914" mi="0" ci="3" mb="0" cb="0"/><line nr="915" mi="0" ci="8" mb="0" cb="2"/><line nr="916" mi="0" ci="2" mb="0" cb="0"/><line nr="929" mi="0" ci="5" mb="0" cb="0"/><line nr="940" mi="0" ci="6" mb="0" cb="0"/><line nr="954" mi="0" ci="8" mb="0" cb="2"/><line nr="955" mi="0" ci="2" mb="0" cb="0"/><line nr="966" mi="0" ci="6" mb="0" cb="0"/><line nr="977" mi="0" ci="3" mb="0" cb="0"/><line nr="978" mi="0" ci="2" mb="0" cb="0"/><line nr="992" mi="0" ci="6" mb="0" cb="0"/><line nr="1006" mi="0" ci="2" mb="0" cb="2"/><line nr="1007" mi="0" ci="3" mb="0" cb="0"/><line nr="1009" mi="0" ci="2" mb="0" cb="0"/><line nr="1020" mi="0" ci="3" mb="0" cb="0"/><line nr="1021" mi="0" ci="2" mb="0" cb="0"/><line nr="1035" mi="0" ci="6" mb="0" cb="0"/><line nr="1049" mi="0" ci="2" mb="0" cb="2"/><line nr="1050" mi="0" ci="3" mb="0" cb="0"/><line nr="1052" mi="0" ci="2" mb="0" cb="0"/><line nr="1065" mi="0" ci="2" mb="0" cb="2"/><line nr="1066" mi="0" ci="3" mb="0" cb="0"/><line nr="1068" mi="0" ci="2" mb="0" cb="0"/><line nr="1077" mi="0" ci="2" mb="0" cb="0"/><line nr="1078" mi="0" ci="4" mb="0" cb="0"/><line nr="1106" mi="0" ci="4" mb="0" cb="4"/><line nr="1107" mi="0" ci="2" mb="0" cb="0"/><line nr="1109" mi="0" ci="4" mb="0" cb="0"/><line nr="1110" mi="0" ci="4" mb="0" cb="0"/><line nr="1111" mi="0" ci="2" mb="0" cb="0"/><line nr="1114" mi="0" ci="5" mb="0" cb="4"/><line nr="1116" mi="0" ci="8" mb="0" cb="0"/><line nr="1119" mi="0" ci="3" mb="0" cb="2"/><line nr="1120" mi="0" ci="5" mb="0" cb="0"/><line nr="1123" mi="0" ci="2" mb="0" cb="0"/><line nr="1133" mi="0" ci="3" mb="0" cb="2"/><line nr="1134" mi="0" ci="2" mb="0" cb="0"/><line nr="1136" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="933"/><counter type="BRANCH" missed="2" covered="94"/><counter type="LINE" missed="1" covered="223"/><counter type="COMPLEXITY" missed="2" covered="111"/><counter type="METHOD" missed="0" covered="65"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="368" covered="15674"/><counter type="BRANCH" missed="65" covered="1902"/><counter type="LINE" missed="63" covered="3525"/><counter type="COMPLEXITY" missed="68" covered="1695"/><counter type="METHOD" missed="9" covered="768"/><counter type="CLASS" missed="0" covered="42"/></package><package name="org/apache/commons/text/similarity"><class name="org/apache/commons/text/similarity/Counter" sourcefilename="Counter.java"><method name="of" desc="([Ljava/lang/CharSequence;)Ljava/util/Map;" line="43"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/JaccardDistance" sourcefilename="JaccardDistance.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/FuzzyScore" sourcefilename="FuzzyScore.java"><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fuzzyScore" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;" line="82"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocale" desc="()Ljava/util/Locale;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/Tokenizer" sourcefilename="Tokenizer.java"/><class name="org/apache/commons/text/similarity/LongestCommonSubsequenceDistance" sourcefilename="LongestCommonSubsequenceDistance.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;" line="53"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/LevenshteinDetailedDistance" sourcefilename="LevenshteinDetailedDistance.java"><method name="findDetailedResults" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;[[IZ)Lorg/apache/commons/text/similarity/LevenshteinResults;" line="56"><counter type="INSTRUCTION" missed="0" covered="188"/><counter type="BRANCH" missed="8" covered="44"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="8" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultInstance" desc="()Lorg/apache/commons/text/similarity/LevenshteinDetailedDistance;" line="141"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="limitedCompare" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)Lorg/apache/commons/text/similarity/LevenshteinResults;" line="178"><counter type="INSTRUCTION" missed="5" covered="303"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="1" covered="49"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlimitedCompare" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/similarity/LevenshteinResults;" line="358"><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="457"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="467"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/similarity/LevenshteinResults;" line="508"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreshold" desc="()Ljava/lang/Integer;" line="520"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="730"/><counter type="BRANCH" missed="9" covered="107"/><counter type="LINE" missed="1" covered="147"/><counter type="COMPLEXITY" missed="9" covered="58"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/CharSequenceTokenizer" sourcefilename="CharSequenceTokenizer.java"/><class name="org/apache/commons/text/similarity/IntersectionSimilarity$BagCount" sourcefilename="IntersectionSimilarity.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/EditDistance" sourcefilename="EditDistance.java"/><class name="org/apache/commons/text/similarity/CosineSimilarity" sourcefilename="CosineSimilarity.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cosineSimilarity" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Double;" line="50"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;)D" line="86"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntersection" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Set;" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/IntersectionSimilarity" sourcefilename="IntersectionSimilarity.java"><method name="getIntersection" desc="(Ljava/util/Set;Ljava/util/Set;)I" line="128"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/similarity/IntersectionResult;" line="169"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntersection" desc="(Lorg/apache/commons/text/similarity/IntersectionSimilarity$TinyBag;Lorg/apache/commons/text/similarity/IntersectionSimilarity$TinyBag;)I" line="215"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBag" desc="(Ljava/util/Collection;)Lorg/apache/commons/text/similarity/IntersectionSimilarity$TinyBag;" line="233"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/IntersectionResult" sourcefilename="IntersectionResult.java"><method name="&lt;init&gt;" desc="(III)V" line="58"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntersection" desc="()I" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizeA" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizeB" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="114"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/LevenshteinResults" sourcefilename="LevenshteinResults.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeleteCount" desc="()Ljava/lang/Integer;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDistance" desc="()Ljava/lang/Integer;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInsertCount" desc="()Ljava/lang/Integer;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubstituteCount" desc="()Ljava/lang/Integer;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="121"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/JaroWinklerSimilarity" sourcefilename="JaroWinklerSimilarity.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[I" line="61"><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="148"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="277"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/IntersectionSimilarity$TinyBag" sourcefilename="IntersectionSimilarity.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/similarity/IntersectionSimilarity;I)V" line="75"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="(Ljava/lang/Object;)I" line="105"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uniqueElementSize" desc="()I" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Ljava/lang/Object;)Lorg/apache/commons/text/similarity/IntersectionSimilarity$BagCount;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/SimilarityScoreFrom" sourcefilename="SimilarityScoreFrom.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/similarity/SimilarityScore;Ljava/lang/CharSequence;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Ljava/lang/CharSequence;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSimilarityScore" desc="()Lorg/apache/commons/text/similarity/SimilarityScore;" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/LongestCommonSubsequence" sourcefilename="LongestCommonSubsequence.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="algorithmB" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[I" line="72"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="algorithmC" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;" line="183"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logestCommonSubsequence" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longestCommonSubsequence" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="262"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longestCommonSubstringLengthArray" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[[I" line="295"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="292"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="11" covered="59"/><counter type="COMPLEXITY" missed="7" covered="27"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/JaccardSimilarity" sourcefilename="JaccardSimilarity.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="53"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateJaccardSimilarity" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="70"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/RegexTokenizer" sourcefilename="RegexTokenizer.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;)[Ljava/lang/CharSequence;" line="54"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/JaroWinklerDistance" sourcefilename="JaroWinklerDistance.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[I" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="82"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/HammingDistance" sourcefilename="HammingDistance.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;" line="59"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/CosineDistance" sourcefilename="CosineDistance.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;" line="40"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/EditDistanceFrom" sourcefilename="EditDistanceFrom.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/similarity/EditDistance;Ljava/lang/CharSequence;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEditDistance" desc="()Lorg/apache/commons/text/similarity/EditDistance;" line="96"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLeft" desc="()Ljava/lang/CharSequence;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/LevenshteinDistance" sourcefilename="LevenshteinDistance.java"><method name="getDefaultInstance" desc="()Lorg/apache/commons/text/similarity/LevenshteinDistance;" line="49"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="limitedCompare" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I" line="84"><counter type="INSTRUCTION" missed="6" covered="209"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlimitedCompare" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I" line="260"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="332"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="343"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;" line="384"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreshold" desc="()Ljava/lang/Integer;" line="396"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="375"/><counter type="BRANCH" missed="3" covered="55"/><counter type="LINE" missed="2" covered="84"/><counter type="COMPLEXITY" missed="4" covered="33"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/similarity/SimilarityScore" sourcefilename="SimilarityScore.java"/><sourcefile name="JaccardSimilarity.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="4"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="4"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="4"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaroWinklerDistance.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="4"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionResult.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="4"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="1" cb="3"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="19" mb="0" cb="6"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="22" mb="0" cb="0"/><line nr="119" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongestCommonSubsequenceDistance.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="4"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EditDistance.java"/><sourcefile name="CosineDistance.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LevenshteinDistance.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="3"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="1" cb="1"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="1" ci="6" mb="1" cb="1"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="2"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="13" mb="0" cb="2"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><line nr="205" mi="0" ci="20" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="4"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="2"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="2"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="2"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="2"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="11" mb="0" cb="2"/><line nr="312" mi="0" ci="20" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="4"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="2"/><line nr="385" mi="0" ci="8" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="375"/><counter type="BRANCH" missed="3" covered="55"/><counter type="LINE" missed="2" covered="84"/><counter type="COMPLEXITY" missed="4" covered="33"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimilarityScore.java"/><sourcefile name="LevenshteinResults.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="1" cb="3"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="17" mb="1" cb="3"/><line nr="79" mi="0" ci="6" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="24" mb="0" cb="0"/><line nr="126" mi="0" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaroWinklerSimilarity.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="20" mb="0" cb="2"/><line nr="76" mi="0" ci="9" mb="0" cb="4"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="2"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="15" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="4"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="25" mb="0" cb="0"/><line nr="164" mi="0" ci="20" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="277"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Counter.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongestCommonSubsequence.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="11" mb="0" cb="2"/><line nr="90" mi="0" ci="15" mb="0" cb="0"/><line nr="92" mi="0" ci="18" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="2"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="1" cb="3"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="4"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="4"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="4"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="4"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="10" ci="0" mb="0" cb="0"/><line nr="296" mi="8" ci="0" mb="2" cb="0"/><line nr="297" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="2" ci="0" mb="2" cb="0"/><line nr="299" mi="6" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="2" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="2" cb="0"/><line nr="305" mi="17" ci="0" mb="0" cb="0"/><line nr="307" mi="24" ci="0" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="292"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="11" covered="59"/><counter type="COMPLEXITY" missed="7" covered="27"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionSimilarity.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="4"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="4"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="11" mb="0" cb="2"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="226"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FuzzyScore.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="4"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="4"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="2"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tokenizer.java"/><sourcefile name="CharSequenceTokenizer.java"/><sourcefile name="EditDistanceFrom.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JaccardDistance.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="4"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HammingDistance.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="4"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="1" cb="1"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LevenshteinDetailedDistance.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="2" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="4"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="1" cb="5"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="15" mb="1" cb="5"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="17" mb="2" cb="8"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="17" mb="2" cb="8"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="4"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="4"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="1" cb="1"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="2"/><line nr="240" mi="0" ci="27" mb="0" cb="2"/><line nr="242" mi="0" ci="2" mb="0" cb="2"/><line nr="243" mi="0" ci="27" mb="0" cb="2"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="0" cb="2"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="2"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="2"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="13" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="2"/><line nr="292" mi="0" ci="12" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="2"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="2"/><line nr="302" mi="0" ci="7" mb="0" cb="2"/><line nr="304" mi="0" ci="9" mb="0" cb="0"/><line nr="307" mi="0" ci="20" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="2"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="12" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="4"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="2"/><line nr="383" mi="0" ci="12" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="2"/><line nr="386" mi="0" ci="12" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="2"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="7" mb="0" cb="2"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="2"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="419" mi="0" ci="7" mb="0" cb="2"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="7" mb="0" cb="2"/><line nr="424" mi="0" ci="6" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="7" mb="0" cb="2"/><line nr="428" mi="0" ci="11" mb="0" cb="2"/><line nr="430" mi="0" ci="24" mb="0" cb="0"/><line nr="432" mi="0" ci="8" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="0" ci="2" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="4"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="2"/><line nr="509" mi="0" ci="7" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="730"/><counter type="BRANCH" missed="9" covered="107"/><counter type="LINE" missed="1" covered="147"/><counter type="COMPLEXITY" missed="9" covered="58"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CosineSimilarity.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="4"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="4"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimilarityScoreFrom.java"><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegexTokenizer.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="126" covered="2763"/><counter type="BRANCH" missed="27" covered="367"/><counter type="LINE" missed="20" covered="561"/><counter type="COMPLEXITY" missed="29" covered="261"/><counter type="METHOD" missed="7" covered="86"/><counter type="CLASS" missed="0" covered="21"/></package><package name="org/apache/commons/text/matcher"><class name="org/apache/commons/text/matcher/AbstractStringMatcher$CharSetMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="([C)V" line="269"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="285"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="299"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="309"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="314"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/StringMatcherFactory" sourcefilename="StringMatcherFactory.java"><method name="andMatcher" desc="([Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/matcher/StringMatcher;" line="99"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charMatcher" desc="(C)Lorg/apache/commons/text/matcher/StringMatcher;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charSetMatcher" desc="([C)Lorg/apache/commons/text/matcher/StringMatcher;" line="126"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charSetMatcher" desc="(Ljava/lang/String;)Lorg/apache/commons/text/matcher/StringMatcher;" line="143"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commaMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="159"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleQuoteMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="168"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noneMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="177"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quoteMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="186"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleQuoteMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="195"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spaceMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="204"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="213"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringMatcher" desc="([C)Lorg/apache/commons/text/matcher/StringMatcher;" line="224"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringMatcher" desc="(Ljava/lang/String;)Lorg/apache/commons/text/matcher/StringMatcher;" line="237"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tabMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="246"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimMatcher" desc="()Lorg/apache/commons/text/matcher/StringMatcher;" line="255"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/StringMatcher" sourcefilename="StringMatcher.java"><method name="andThen" desc="(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/matcher/StringMatcher;" line="37"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CI)I" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;I)I" line="115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="156"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="()V" line="434"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher$NoneMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="()V" line="330"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="344"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="358"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="368"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher$CharMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="(C)V" line="205"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="220"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="234"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="244"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher$TrimMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="()V" line="389"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="403"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="417"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="427"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher$CharArrayMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="([C)V" line="119"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="135"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="159"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="179"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/matcher/AbstractStringMatcher$AndStringMatcher" sourcefilename="AbstractStringMatcher.java"><method name="&lt;init&gt;" desc="([Lorg/apache/commons/text/matcher/StringMatcher;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="([CIII)I" line="56"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatch" desc="(Ljava/lang/CharSequence;III)I" line="73"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="90"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractStringMatcher.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="17" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="17" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="17" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="2"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="2"/><line nr="165" mi="0" ci="8" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="15" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="2"/><line nr="234" mi="0" ci="10" mb="0" cb="2"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="15" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="11" mb="0" cb="2"/><line nr="299" mi="0" ci="11" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="12" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="9" mb="0" cb="2"/><line nr="417" mi="0" ci="9" mb="0" cb="2"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="344"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="77"/><counter type="COMPLEXITY" missed="0" covered="48"/><counter type="METHOD" missed="0" covered="28"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="StringMatcherFactory.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="10" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="10" mb="0" cb="2"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringMatcher.java"><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="552"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="127"/><counter type="COMPLEXITY" missed="0" covered="78"/><counter type="METHOD" missed="0" covered="49"/><counter type="CLASS" missed="0" covered="9"/></package><package name="org/apache/commons/text/lookup"><class name="org/apache/commons/text/lookup/BiStringLookup" sourcefilename="BiStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/UrlDecoderStringLookup" sourcefilename="UrlDecoderStringLookup.java"><method name="decode" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/FunctionStringLookup" sourcefilename="FunctionStringLookup.java"><method name="on" desc="(Ljava/util/function/Function;)Lorg/apache/commons/text/lookup/FunctionStringLookup;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/Map;)Lorg/apache/commons/text/lookup/FunctionStringLookup;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/UrlStringLookup" sourcefilename="UrlStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/XmlEncoderStringLookup" sourcefilename="XmlEncoderStringLookup.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/InterpolatorStringLookup" sourcefilename="InterpolatorStringLookup.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lorg/apache/commons/text/lookup/StringLookup;Z)V" line="66"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/lookup/StringLookup;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringLookupMap" desc="()Ljava/util/Map;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/UrlEncoderStringLookup" sourcefilename="UrlEncoderStringLookup.java"><method name="encode" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/ConstantStringLookup" sourcefilename="ConstantStringLookup.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchClass" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveField" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/DnsStringLookup" sourcefilename="DnsStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/JavaPlatformStringLookup" sourcefilename="JavaPlatformStringLookup.java"><method name="main" desc="([Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHardware" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocale" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperatingSystem" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuntime" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSystemProperty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSystemProperty" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVirtualMachine" desc="()Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="286"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/ScriptStringLookup" sourcefilename="ScriptStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/LocalHostStringLookup" sourcefilename="LocalHostStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/XmlDecoderStringLookup" sourcefilename="XmlDecoderStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/DateStringLookup" sourcefilename="DateStringLookup.java"><method name="formatDate" desc="(JLjava/lang/String;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/ResourceBundleStringLookup" sourcefilename="ResourceBundleStringLookup.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBundle" desc="(Ljava/lang/String;)Ljava/util/ResourceBundle;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/FileStringLookup" sourcefilename="FileStringLookup.java"><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/StringLookupFactory" sourcefilename="StringLookupFactory.java"><method name="clear" desc="()V" line="555"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toKey" desc="(Ljava/lang/String;)Ljava/lang/String;" line="564"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="576"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDefaultStringLookups" desc="(Ljava/util/Map;)V" line="596"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="base64DecoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="625"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="base64EncoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="652"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="base64StringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="681"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="biFunctionStringLookup" desc="(Ljava/util/function/BiFunction;)Lorg/apache/commons/text/lookup/BiStringLookup;" line="695"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="733"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dateStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="760"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dnsStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="800"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="environmentVariableStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="828"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="855"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionStringLookup" desc="(Ljava/util/function/Function;)Lorg/apache/commons/text/lookup/StringLookup;" line="868"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolatorStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="896"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolatorStringLookup" desc="(Ljava/util/Map;Lorg/apache/commons/text/lookup/StringLookup;Z)Lorg/apache/commons/text/lookup/StringLookup;" line="914"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolatorStringLookup" desc="(Ljava/util/Map;)Lorg/apache/commons/text/lookup/StringLookup;" line="927"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolatorStringLookup" desc="(Lorg/apache/commons/text/lookup/StringLookup;)Lorg/apache/commons/text/lookup/StringLookup;" line="939"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="javaPlatformStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="979"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="localHostStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1012"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapStringLookup" desc="(Ljava/util/Map;)Lorg/apache/commons/text/lookup/StringLookup;" line="1023"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1032"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertiesStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1070"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceBundleStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1103"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceBundleStringLookup" desc="(Ljava/lang/String;)Lorg/apache/commons/text/lookup/StringLookup;" line="1131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scriptStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1173"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="systemPropertyStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1200"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="urlDecoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1233"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="urlEncoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1266"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="urlStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1312"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xmlDecoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1345"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xmlEncoderStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1378"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xmlStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="1412"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xmlStringLookup" desc="(Ljava/util/Map;)Lorg/apache/commons/text/lookup/StringLookup;" line="1448"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="399"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/String;)Ljava/lang/String;" line="371"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="347"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="324"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="131"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="2" covered="38"/><counter type="METHOD" missed="2" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/DefaultStringLookup" sourcefilename="DefaultStringLookup.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Lorg/apache/commons/text/lookup/StringLookup;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringLookup" desc="()Lorg/apache/commons/text/lookup/StringLookup;" line="204"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="251"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="268"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/InetAddressKeys" sourcefilename="InetAddressKeys.java"/><class name="org/apache/commons/text/lookup/IllegalArgumentExceptions" sourcefilename="IllegalArgumentExceptions.java"><method name="format" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/BiFunctionStringLookup" sourcefilename="BiFunctionStringLookup.java"><method name="on" desc="(Ljava/util/function/BiFunction;)Lorg/apache/commons/text/lookup/BiFunctionStringLookup;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Ljava/util/Map;)Lorg/apache/commons/text/lookup/BiFunctionStringLookup;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/BiFunction;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$on$0" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/StringLookupFactory$DefaultStringLookupsHolder" sourcefilename="StringLookupFactory.java"><method name="addLookup" desc="(Lorg/apache/commons/text/lookup/DefaultStringLookup;Ljava/util/Map;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDefaultStringLookups" desc="()Ljava/util/Map;" line="251"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStringLookups" desc="(Ljava/lang/String;)Ljava/util/Map;" line="281"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Properties;)V" line="303"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultStringLookups" desc="()Ljava/util/Map;" line="317"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="229"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/AbstractStringLookup" sourcefilename="AbstractStringLookup.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLookupKey" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLookupKey" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringAfter" desc="(Ljava/lang/String;C)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringAfter" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substringAfterLast" desc="(Ljava/lang/String;C)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/PropertiesStringLookup" sourcefilename="PropertiesStringLookup.java"><method name="toPropertyKey" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/lookup/StringLookup" sourcefilename="StringLookup.java"/><class name="org/apache/commons/text/lookup/XmlStringLookup" sourcefilename="XmlStringLookup.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookup" desc="(Ljava/lang/String;)Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultStringLookup.java"><line nr="34" mi="0" ci="80" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="268"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalHostStringLookup.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="4"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionStringLookup.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InterpolatorStringLookup.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractStringLookup.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertiesStringLookup.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="13" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BiStringLookup.java"><line nr="72" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileStringLookup.java"><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UrlStringLookup.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScriptStringLookup.java"><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UrlEncoderStringLookup.java"><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DnsStringLookup.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="4"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateStringLookup.java"><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaPlatformStringLookup.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="0"/><line nr="87" mi="0" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="16" mb="0" cb="0"/><line nr="90" mi="0" ci="16" mb="0" cb="0"/><line nr="91" mi="0" ci="16" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="15" mb="0" cb="0"/><line nr="127" mi="0" ci="17" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="18" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="18" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="2"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="7"/><line nr="201" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="286"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IllegalArgumentExceptions.java"><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InetAddressKeys.java"/><sourcefile name="StringLookup.java"/><sourcefile name="StringLookupFactory.java"><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="2"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="18" mb="0" cb="2"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="13" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="2"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="10" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="8" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="556" mi="1" ci="0" mb="0" cb="0"/><line nr="564" mi="0" ci="4" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="2"/><line nr="596" mi="0" ci="2" mb="0" cb="2"/><line nr="597" mi="0" ci="4" mb="0" cb="0"/><line nr="599" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="733" mi="0" ci="2" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="800" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="2" mb="0" cb="0"/><line nr="855" mi="0" ci="2" mb="0" cb="0"/><line nr="868" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="2" mb="0" cb="0"/><line nr="914" mi="0" ci="7" mb="0" cb="0"/><line nr="927" mi="0" ci="5" mb="0" cb="0"/><line nr="939" mi="0" ci="5" mb="0" cb="0"/><line nr="979" mi="0" ci="2" mb="0" cb="0"/><line nr="1012" mi="0" ci="2" mb="0" cb="0"/><line nr="1023" mi="0" ci="3" mb="0" cb="0"/><line nr="1032" mi="0" ci="2" mb="0" cb="0"/><line nr="1070" mi="0" ci="2" mb="0" cb="0"/><line nr="1103" mi="0" ci="2" mb="0" cb="0"/><line nr="1131" mi="0" ci="5" mb="0" cb="0"/><line nr="1173" mi="0" ci="2" mb="0" cb="0"/><line nr="1200" mi="0" ci="2" mb="0" cb="0"/><line nr="1233" mi="0" ci="2" mb="0" cb="0"/><line nr="1266" mi="0" ci="2" mb="0" cb="0"/><line nr="1312" mi="0" ci="2" mb="0" cb="0"/><line nr="1345" mi="0" ci="2" mb="0" cb="0"/><line nr="1378" mi="0" ci="2" mb="0" cb="0"/><line nr="1412" mi="0" ci="2" mb="0" cb="0"/><line nr="1448" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="279"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="3" covered="80"/><counter type="COMPLEXITY" missed="2" covered="48"/><counter type="METHOD" missed="2" covered="42"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ResourceBundleStringLookup.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="4"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="4"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="2"/><line nr="101" mi="0" ci="10" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="14" mb="0" cb="0"/><line nr="116" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlStringLookup.java"><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UrlDecoderStringLookup.java"><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BiFunctionStringLookup.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlDecoderStringLookup.java"><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstantStringLookup.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlEncoderStringLookup.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="1994"/><counter type="BRANCH" missed="0" covered="113"/><counter type="LINE" missed="5" covered="405"/><counter type="COMPLEXITY" missed="2" covered="191"/><counter type="METHOD" missed="2" covered="130"/><counter type="CLASS" missed="0" covered="24"/></package><package name="org/apache/commons/text/io"><class name="org/apache/commons/text/io/StringSubstitutorReader" sourcefilename="StringSubstitutorReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Lorg/apache/commons/text/StringSubstitutor;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buffer" desc="(I)I" line="84"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bufferOrDrainOnEos" desc="(I[CII)I" line="95"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="([CII)I" line="103"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drainOnEos" desc="(I[CII)I" line="119"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBufferMatchAt" desc="(Lorg/apache/commons/text/matcher/StringMatcher;I)Z" line="134"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDraining" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="152"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="182"><counter type="INSTRUCTION" missed="1" covered="356"/><counter type="BRANCH" missed="3" covered="53"/><counter type="LINE" missed="0" covered="83"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCount" desc="(II)I" line="312"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="526"/><counter type="BRANCH" missed="3" covered="73"/><counter type="LINE" missed="0" covered="117"/><counter type="COMPLEXITY" missed="3" covered="45"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StringSubstitutorReader.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="4"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="12" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="4"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="4"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="0" cb="4"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="9" mb="1" cb="3"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="2"/><line nr="229" mi="0" ci="5" mb="0" cb="2"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="2"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="1" cb="3"/><line nr="247" mi="0" ci="3" mb="0" cb="2"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="1" ci="5" mb="1" cb="1"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="2"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="2"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="2"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="2"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="2"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="8" mb="0" cb="4"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="8" mb="0" cb="0"/><line nr="298" mi="0" ci="12" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="1" covered="526"/><counter type="BRANCH" missed="3" covered="73"/><counter type="LINE" missed="0" covered="117"/><counter type="COMPLEXITY" missed="3" covered="45"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1" covered="526"/><counter type="BRANCH" missed="3" covered="73"/><counter type="LINE" missed="0" covered="117"/><counter type="COMPLEXITY" missed="3" covered="45"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/apache/commons/text/translate"><class name="org/apache/commons/text/translate/NumericEntityUnescaper$OPTION" sourcefilename="NumericEntityUnescaper.java"><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/CsvTranslators$CsvEscaper" sourcefilename="CsvTranslators.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateWhole" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/AggregateTranslator" sourcefilename="AggregateTranslator.java"><method name="&lt;init&gt;" desc="([Lorg/apache/commons/text/translate/CharSequenceTranslator;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="57"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/JavaUnicodeEscaper" sourcefilename="JavaUnicodeEscaper.java"><method name="above" desc="(I)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="below" desc="(I)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="between" desc="(II)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outsideOf" desc="(II)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIZ)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUtf16Escape" desc="(I)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/CharSequenceTranslator" sourcefilename="CharSequenceTranslator.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hex" desc="(I)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="([Lorg/apache/commons/text/translate/CharSequenceTranslator;)Lorg/apache/commons/text/translate/CharSequenceTranslator;" line="133"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="165"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="6" covered="29"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/UnicodeEscaper" sourcefilename="UnicodeEscaper.java"><method name="above" desc="(I)Lorg/apache/commons/text/translate/UnicodeEscaper;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="below" desc="(I)Lorg/apache/commons/text/translate/UnicodeEscaper;" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="between" desc="(II)Lorg/apache/commons/text/translate/UnicodeEscaper;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outsideOf" desc="(II)Lorg/apache/commons/text/translate/UnicodeEscaper;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIZ)V" line="96"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUtf16Escape" desc="(I)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(ILjava/io/Writer;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/OctalUnescaper" sourcefilename="OctalUnescaper.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOctalDigit" desc="(C)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZeroToThree" desc="(C)Z" line="51"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="59"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="115"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/EntityArrays" sourcefilename="EntityArrays.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="(Ljava/util/Map;)Ljava/util/Map;" line="447"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1346"/><counter type="LINE" missed="0" covered="274"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="1358"/><counter type="LINE" missed="0" covered="276"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/UnicodeUnpairedSurrogateRemover" sourcefilename="UnicodeUnpairedSurrogateRemover.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(ILjava/io/Writer;)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/CodePointTranslator" sourcefilename="CodePointTranslator.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="36"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/NumericEntityEscaper" sourcefilename="NumericEntityEscaper.java"><method name="above" desc="(I)Lorg/apache/commons/text/translate/NumericEntityEscaper;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="below" desc="(I)Lorg/apache/commons/text/translate/NumericEntityEscaper;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="between" desc="(II)Lorg/apache/commons/text/translate/NumericEntityEscaper;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outsideOf" desc="(II)Lorg/apache/commons/text/translate/NumericEntityEscaper;" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIZ)V" line="96"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(ILjava/io/Writer;)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/CsvTranslators" sourcefilename="CsvTranslators.java"><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/NumericEntityUnescaper" sourcefilename="NumericEntityUnescaper.java"><method name="&lt;init&gt;" desc="([Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSet" desc="(Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="98"><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="196"/><counter type="BRANCH" missed="0" covered="46"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/CsvTranslators$CsvUnescaper" sourcefilename="CsvTranslators.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateWhole" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/UnicodeUnescaper" sourcefilename="UnicodeUnescaper.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="36"><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/SinglePassTranslator" sourcefilename="SinglePassTranslator.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="44"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/translate/LookupTranslator" sourcefilename="LookupTranslator.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="86"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavaUnicodeEscaper.java"><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OctalUnescaper.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="4"/><line nr="51" mi="1" ci="9" mb="2" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="0" cb="6"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="1" cb="3"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="15" mb="1" cb="5"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="115"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SinglePassTranslator.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="2" ci="7" mb="1" cb="1"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="13" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericEntityUnescaper.java"><line nr="38" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="17" mb="0" cb="6"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="4"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="15" mb="0" cb="6"/><line nr="118" mi="0" ci="10" mb="0" cb="4"/><line nr="119" mi="0" ci="8" mb="0" cb="4"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="4"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="18" mb="0" cb="4"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="BRANCH" missed="0" covered="46"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EntityArrays.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1358"/><counter type="LINE" missed="0" covered="276"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnicodeUnescaper.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="18" mb="0" cb="6"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="1" cb="3"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="1" cb="3"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="13" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnicodeUnpairedSurrogateRemover.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AggregateTranslator.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="2"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnicodeEscaper.java"><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="8" mb="0" cb="4"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="4"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LookupTranslator.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="2"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericEntityEscaper.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CodePointTranslator.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsvTranslators.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="4"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CharSequenceTranslator.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="68" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="1" cb="3"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="2"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="165"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="6" covered="29"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="31" covered="2574"/><counter type="BRANCH" missed="9" covered="149"/><counter type="LINE" missed="6" covered="508"/><counter type="COMPLEXITY" missed="10" covered="126"/><counter type="METHOD" missed="1" covered="56"/><counter type="CLASS" missed="0" covered="17"/></package><package name="org/apache/commons/text/numbers"><class name="org/apache/commons/text/numbers/DoubleFormat$EngineeringDoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/numbers/DoubleFormat$Builder;)V" line="682"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyFiniteInternal" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal;)Ljava/lang/String;" line="688"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/ParsedDecimal$FormatOptions" sourcefilename="ParsedDecimal.java"/><class name="org/apache/commons/text/numbers/DoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/function/Function;)V" line="779"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="789"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/DoubleFormat$PlainDoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/numbers/DoubleFormat$Builder;)V" line="738"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyFiniteInternal" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal;)Ljava/lang/String;" line="746"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/DoubleFormat$MixedDoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/numbers/DoubleFormat$Builder;)V" line="710"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyFiniteInternal" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal;)Ljava/lang/String;" line="719"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/DoubleFormat$Builder" sourcefilename="DoubleFormat.java"><method name="getDigitString" desc="(Ljava/text/DecimalFormatSymbols;)Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowSignedZero" desc="(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="429"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysIncludeExponent" desc="(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="442"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/util/function/DoubleFunction;" line="452"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decimalSeparator" desc="(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="463"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="digits" desc="(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="476"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exponentSeparator" desc="(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="494"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatSymbols" desc="(Ljava/text/DecimalFormatSymbols;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="517"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupingSeparator" desc="(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="531"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupThousands" desc="(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="545"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="includeFractionPlaceholder" desc="(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="559"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="infinity" desc="(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="571"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxPrecision" desc="(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="583"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minDecimalExponent" desc="(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="597"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minusSign" desc="(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="608"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nan" desc="(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="620"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plainFormatMaxDecimalExponent" desc="(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="643"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plainFormatMinDecimalExponent" desc="(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;" line="666"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="214"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/DoubleFormat$AbstractDoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/numbers/DoubleFormat$Builder;)V" line="219"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(D)Ljava/lang/String;" line="241"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyFinite" desc="(D)Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDecimalSeparator" desc="()C" line="278"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDigits" desc="()[C" line="284"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExponentSeparatorChars" desc="()[C" line="290"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGroupingSeparator" desc="()C" line="296"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinusSign" desc="()C" line="302"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlwaysIncludeExponent" desc="()Z" line="308"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGroupThousands" desc="()Z" line="314"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIncludeFractionPlaceholder" desc="()Z" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSignedZero" desc="()Z" line="326"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/ParsedDecimal" sourcefilename="ParsedDecimal.java"><method name="digitValue" desc="(C)I" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(D)Lorg/apache/commons/text/numbers/ParsedDecimal;" line="145"><counter type="INSTRUCTION" missed="0" covered="129"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExponent" desc="([CI)I" line="214"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z[III)V" line="254"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)V" line="266"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([C)V" line="274"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendFraction" desc="(IILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendLocalizedDigit" desc="(I[C)V" line="315"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWhole" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)I" line="327"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWholeGrouped" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)I" line="361"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDigitStringSize" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)I" line="403"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExponent" desc="()I" line="433"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainStringSize" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)I" line="445"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScientificExponent" desc="()I" line="462"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZero" desc="()Z" line="471"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxPrecision" desc="(I)V" line="482"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outputString" desc="()Ljava/lang/String;" line="496"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareOutput" desc="(I)V" line="506"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requiresGroupingSeparatorAfterPosition" desc="(I)Z" line="518"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="round" desc="(I)V" line="528"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roundUp" desc="(I)V" line="550"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSingleDigitValue" desc="(II)V" line="581"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldIncludeExponent" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Z" line="594"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldIncludeMinus" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Z" line="604"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldRoundUp" desc="(I)Z" line="622"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEngineeringString" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Ljava/lang/String;" line="646"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPlainString" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Ljava/lang/String;" line="666"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toScientificString" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Ljava/lang/String;" line="699"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toScientificString" desc="(ILorg/apache/commons/text/numbers/ParsedDecimal$FormatOptions;)Ljava/lang/String;" line="711"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="truncate" desc="(I)V" line="768"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="873"/><counter type="BRANCH" missed="0" covered="140"/><counter type="LINE" missed="0" covered="202"/><counter type="COMPLEXITY" missed="0" covered="100"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/text/numbers/DoubleFormat$ScientificDoubleFormat" sourcefilename="DoubleFormat.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/text/numbers/DoubleFormat$Builder;)V" line="761"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyFiniteInternal" desc="(Lorg/apache/commons/text/numbers/ParsedDecimal;)Ljava/lang/String;" line="767"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DoubleFormat.java"><line nr="98" mi="0" ci="20" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="12" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="10" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="2"/><line nr="260" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="0" cb="2"/><line nr="356" mi="0" ci="9" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="0" cb="2"/><line nr="478" mi="0" ci="15" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="519" mi="0" ci="12" mb="0" cb="0"/><line nr="520" mi="0" ci="11" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="608" mi="0" ci="3" mb="0" cb="0"/><line nr="609" mi="0" ci="2" mb="0" cb="0"/><line nr="620" mi="0" ci="6" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="682" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="688" mi="0" ci="4" mb="0" cb="0"/><line nr="710" mi="0" ci="3" mb="0" cb="0"/><line nr="712" mi="0" ci="4" mb="0" cb="0"/><line nr="713" mi="0" ci="4" mb="0" cb="0"/><line nr="714" mi="0" ci="1" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="8" mb="0" cb="4"/><line nr="721" mi="0" ci="4" mb="0" cb="0"/><line nr="723" mi="0" ci="4" mb="0" cb="0"/><line nr="738" mi="0" ci="3" mb="0" cb="0"/><line nr="739" mi="0" ci="1" mb="0" cb="0"/><line nr="746" mi="0" ci="4" mb="0" cb="0"/><line nr="761" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="1" mb="0" cb="0"/><line nr="767" mi="0" ci="4" mb="0" cb="0"/><line nr="779" mi="0" ci="4" mb="0" cb="0"/><line nr="780" mi="0" ci="3" mb="0" cb="0"/><line nr="781" mi="0" ci="1" mb="0" cb="0"/><line nr="789" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="480"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="119"/><counter type="COMPLEXITY" missed="0" covered="50"/><counter type="METHOD" missed="0" covered="42"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="ParsedDecimal.java"><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="2"/><line nr="159" mi="0" ci="6" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="2"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="4"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="9" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="2"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="2"/><line nr="222" mi="0" ci="9" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="11" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="16" mb="0" cb="2"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="2"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="2"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="9" mb="0" cb="2"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="2"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="2"/><line nr="338" mi="0" ci="7" mb="0" cb="2"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="2"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="2"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="2"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="8" mb="0" cb="2"/><line nr="375" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="2"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="2"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="2"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="2"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="2"/><line nr="410" mi="0" ci="8" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="2"/><line nr="414" mi="0" ci="7" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="2"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="448" mi="0" ci="5" mb="0" cb="4"/><line nr="449" mi="0" ci="8" mb="0" cb="0"/><line nr="452" mi="0" ci="2" mb="0" cb="0"/><line nr="462" mi="0" ci="8" mb="0" cb="0"/><line nr="471" mi="0" ci="9" mb="0" cb="2"/><line nr="482" mi="0" ci="6" mb="0" cb="4"/><line nr="483" mi="0" ci="4" mb="0" cb="2"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="12" mb="0" cb="4"/><line nr="528" mi="0" ci="4" mb="0" cb="2"/><line nr="529" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="2"/><line nr="533" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="7" mb="0" cb="4"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="552" mi="0" ci="8" mb="0" cb="2"/><line nr="553" mi="0" ci="7" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="2"/><line nr="557" mi="0" ci="5" mb="0" cb="0"/><line nr="558" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="2"/><line nr="567" mi="0" ci="8" mb="0" cb="0"/><line nr="570" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="5" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="9" mb="0" cb="4"/><line nr="604" mi="0" ci="13" mb="0" cb="6"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="624" mi="0" ci="25" mb="0" cb="8"/><line nr="646" mi="0" ci="7" mb="0" cb="0"/><line nr="647" mi="0" ci="5" mb="0" cb="0"/><line nr="666" mi="0" ci="6" mb="0" cb="0"/><line nr="667" mi="0" ci="3" mb="0" cb="2"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="669" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="6" mb="0" cb="0"/><line nr="673" mi="0" ci="3" mb="0" cb="2"/><line nr="674" mi="0" ci="5" mb="0" cb="0"/><line nr="675" mi="0" ci="5" mb="0" cb="0"/><line nr="677" mi="0" ci="5" mb="0" cb="0"/><line nr="679" mi="0" ci="3" mb="0" cb="0"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="711" mi="0" ci="8" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="0" cb="0"/><line nr="713" mi="0" ci="5" mb="0" cb="0"/><line nr="714" mi="0" ci="6" mb="0" cb="2"/><line nr="718" mi="0" ci="5" mb="0" cb="0"/><line nr="719" mi="0" ci="2" mb="0" cb="0"/><line nr="720" mi="0" ci="2" mb="0" cb="2"/><line nr="721" mi="0" ci="2" mb="0" cb="2"/><line nr="722" mi="0" ci="8" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="0"/><line nr="725" mi="0" ci="8" mb="0" cb="0"/><line nr="726" mi="0" ci="2" mb="0" cb="2"/><line nr="727" mi="0" ci="1" mb="0" cb="0"/><line nr="731" mi="0" ci="3" mb="0" cb="0"/><line nr="734" mi="0" ci="5" mb="0" cb="0"/><line nr="735" mi="0" ci="5" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="2"/><line nr="739" mi="0" ci="4" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="2"/><line nr="742" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="750" mi="0" ci="10" mb="0" cb="2"/><line nr="751" mi="0" ci="9" mb="0" cb="0"/><line nr="752" mi="0" ci="4" mb="0" cb="0"/><line nr="754" mi="0" ci="3" mb="0" cb="0"/><line nr="757" mi="0" ci="3" mb="0" cb="0"/><line nr="768" mi="0" ci="2" mb="0" cb="0"/><line nr="769" mi="0" ci="4" mb="0" cb="0"/><line nr="770" mi="0" ci="7" mb="0" cb="4"/><line nr="771" mi="0" ci="2" mb="0" cb="0"/><line nr="772" mi="0" ci="1" mb="0" cb="0"/><line nr="774" mi="0" ci="9" mb="0" cb="0"/><line nr="775" mi="0" ci="3" mb="0" cb="0"/><line nr="776" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="873"/><counter type="BRANCH" missed="0" covered="140"/><counter type="LINE" missed="0" covered="202"/><counter type="COMPLEXITY" missed="0" covered="100"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="1353"/><counter type="BRANCH" missed="0" covered="156"/><counter type="LINE" missed="0" covered="321"/><counter type="COMPLEXITY" missed="0" covered="150"/><counter type="METHOD" missed="0" covered="72"/><counter type="CLASS" missed="0" covered="8"/></package><counter type="INSTRUCTION" missed="538" covered="26165"/><counter type="BRANCH" missed="107" covered="2901"/><counter type="LINE" missed="95" covered="5699"/><counter type="COMPLEXITY" missed="115" covered="2615"/><counter type="METHOD" missed="19" covered="1200"/><counter type="CLASS" missed="0" covered="130"/></report>